{
  "api/Forms9Patch.AbsoluteLayout.html": {
    "href": "api/Forms9Patch.AbsoluteLayout.html",
    "title": "Class AbsoluteLayout | Forms9Patch",
    "keywords": "Class AbsoluteLayout Forms9Patch.AbsoluteLayout Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView ContentView Frame Forms9Patch.BindableObject < AbsoluteLayout > Forms9Patch.Element < AbsoluteLayout > Forms9Patch.VisualElement < AbsoluteLayout > Forms9Patch.View < AbsoluteLayout > Forms9Patch.BaseLayout < AbsoluteLayout > Forms9Patch.Layout < AbsoluteLayout > AbsoluteLayout Implements INotifyPropertyChanged IAnimatable ITabStopElement IGestureController IGestureRecognizers IDisposable IViewController IVisualElementController IElementController ILayout IBackground IShape IElement ILayout ILayoutController IViewContainer < View > IElementConfiguration < AbsoluteLayout > Inherited Members Frame.OnPropertyChanged(String) ContentView.ContentProperty ContentView.Content ContentView.IgnoreChildrenProperty ContentView.IgnoreChildren ContentView.BackgroundImageProperty ContentView.BackgroundImage ContentView.LimitMinSizeToBackgroundImageSizeProperty ContentView.LimitMinSizeToBackgroundImageSize ContentView.BackgroundColorProperty ContentView.BackgroundColor ContentView.HasShadowProperty ContentView.HasShadow ContentView.ShadowInvertedProperty ContentView.ShadowInverted ContentView.OutlineColorProperty ContentView.OutlineColor ContentView.BorderColorProperty ContentView.BorderColor ContentView.OutlineRadiusProperty ContentView.OutlineRadius ContentView.BorderRadiusProperty ContentView.BorderRadius ContentView.OutlineWidthProperty ContentView.OutlineWidth ContentView.BorderWidthProperty ContentView.BorderWidth ContentView.ElementShapeProperty ContentView.ElementShape ContentView.InstanceId ContentView._f9pId ContentView._fallbackBackgroundImage ContentView.CurrentBackgroundImage ContentView.BaseInternalChildren ContentView.Dispose(Boolean) ContentView.Dispose() ContentView.Description() ContentView.ToString() ContentView.ShouldInvalidateOnChildAdded(View) ContentView.ShouldInvalidateOnChildRemoved(View) ContentView.OnChildMeasureInvalidated() ContentView.OnSizeRequest(Double, Double) ContentView.LayoutChildren(Double, Double, Double, Double) ContentView.OnBindingContextChanged() TemplatedView.ControlTemplateProperty TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class AbsoluteLayout : Layout<AbsoluteLayout>, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IGestureController, IGestureRecognizers, IPaddingElement, IControlTemplated, IDisposable, IViewController, IVisualElementController, IElementController, ILayout, IBackground, IShape, IElement, ILayout, ILayoutController, IViewContainer<View>, IElementConfiguration<AbsoluteLayout> Properties Children Children of AbsoluteLayout Declaration public AbsoluteLayout.IAbsoluteList<View> Children { get; } Property Value Type Description AbsoluteLayout.IAbsoluteList < View > Methods GetLayoutBounds(BindableObject) Gets the layout bounds of element in AbsoluteLayout Declaration [TypeConverter(typeof(BoundsTypeConverter))] public static Rectangle GetLayoutBounds(BindableObject bindable) Parameters Type Name Description BindableObject bindable Bindable. Returns Type Description Rectangle The layout bounds. GetLayoutFlags(BindableObject) Gets the layout flags of element in AbsoluteLayout Declaration public static AbsoluteLayoutFlags GetLayoutFlags(BindableObject bindable) Parameters Type Name Description BindableObject bindable Bindable. Returns Type Description AbsoluteLayoutFlags The layout flags. On<T>() Marker interface for returning platform-specific configuration elements. Declaration public IPlatformElementConfiguration<T, AbsoluteLayout> On<T>() where T : IConfigPlatform Returns Type Description IPlatformElementConfiguration <T, AbsoluteLayout > Type Parameters Name Description T SetLayoutBounds(BindableObject, Rectangle) Sets the layout bounds of element in AbsoluteLayout Declaration public static void SetLayoutBounds(BindableObject bindable, Rectangle bounds) Parameters Type Name Description BindableObject bindable Bindable. Rectangle bounds Bounds. SetLayoutFlags(BindableObject, AbsoluteLayoutFlags) Sets the layout flags of element in AbsoluteLayout Declaration public static void SetLayoutFlags(BindableObject bindable, AbsoluteLayoutFlags flags) Parameters Type Name Description BindableObject bindable Bindable. AbsoluteLayoutFlags flags Flags. Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers System.IDisposable Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController ILayout IBackground IShape IElement Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Xamarin.Forms.IViewContainer<T> Xamarin.Forms.IElementConfiguration<TElement> Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.AccessoryPosition.html": {
    "href": "api/Forms9Patch.AccessoryPosition.html",
    "title": "Enum AccessoryPosition | Forms9Patch",
    "keywords": "Enum AccessoryPosition Accessory position. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum AccessoryPosition Fields Name Description End Accessory will be on the ending (right) side if the AccessoryText != null None No accessories will be shown Start Accessory will be on the starting (left) side if the AccessText != null"
  },
  "api/Forms9Patch.ActionTagEventArgs.html": {
    "href": "api/Forms9Patch.ActionTagEventArgs.html",
    "title": "Class ActionTagEventArgs | Forms9Patch",
    "keywords": "Class ActionTagEventArgs Action tag event arguments. Inheritance Object EventArgs ActionTagEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class ActionTagEventArgs : EventArgs Constructors ActionTagEventArgs(String, String) Initializes a new instance of the ActionTagEventArgs class. Declaration public ActionTagEventArgs(string id, string href) Parameters Type Name Description String id Identifier. String href Href. Properties Href Gets the href. Declaration public string Href { get; } Property Value Type Description String The href. Id Gets the identifier. Declaration public string Id { get; } Property Value Type Description String The identifier."
  },
  "api/Forms9Patch.ActivityIndicatorPopup.html": {
    "href": "api/Forms9Patch.ActivityIndicatorPopup.html",
    "title": "Class ActivityIndicatorPopup | Forms9Patch",
    "keywords": "Class ActivityIndicatorPopup Activity indicator full page overlay. Inheritance Object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage PopupPage Forms9Patch.PopupBase ModalPopup ActivityIndicatorPopup Implements INotifyPropertyChanged IAnimatable ITabStopElement ILayout IPageController IVisualElementController IElementController IElementConfiguration < Page > IPopup IBackground IShape IElement IDisposable Inherited Members ModalPopup.Content ModalPopup.LocationProperty ModalPopup.Location ModalPopup.ScaleProperty ModalPopup.Scale ModalPopup.LayoutChildren(Double, Double, Double, Double) PopupPage.BackgroundClicked PopupPage.IsAnimationEnabledProperty PopupPage.IsAnimationEnabled PopupPage.HasSystemPaddingProperty PopupPage.HasSystemPadding PopupPage.AnimationProperty PopupPage.Animation PopupPage.SystemPaddingProperty PopupPage.SystemPadding PopupPage.SystemPaddingSidesProperty PopupPage.SystemPaddingSides PopupPage.CloseWhenBackgroundIsClickedProperty PopupPage.CloseWhenBackgroundIsClicked PopupPage.BackgroundInputTransparentProperty PopupPage.BackgroundInputTransparent PopupPage.HasKeyboardOffsetProperty PopupPage.HasKeyboardOffset PopupPage.KeyboardOffsetProperty PopupPage.KeyboardOffset PopupPage.OnBackButtonPressed() PopupPage.OnAppearingAnimationBegin() PopupPage.OnAppearingAnimationEnd() PopupPage.OnDisappearingAnimationBegin() PopupPage.OnDisappearingAnimationEnd() PopupPage.OnAppearingAnimationBeginAsync() PopupPage.OnAppearingAnimationEndAsync() PopupPage.OnDisappearingAnimationBeginAsync() PopupPage.OnDisappearingAnimationEndAsync() PopupPage.OnBackgroundClicked() ContentPage.ContentProperty ContentPage.OnBindingContextChanged() TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element) TemplatedPage.OnChildRemoved(Element, Int32) TemplatedPage.GetTemplateChild(String) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(String, String, String, String[]) Page.DisplayAlert(String, String, String) Page.DisplayAlert(String, String, String, String) Page.DisplayPromptAsync(String, String, String, String, String, Int32, Keyboard, String) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnAppearing() Page.OnChildMeasureInvalidated(Object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(Double, Double) Page.UpdateChildrenLayout() Page.On<T>() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.LayoutChanged Page.Appearing Page.Disappearing VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class ActivityIndicatorPopup : ModalPopup, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, IPaddingElement, IControlTemplated, IPopup, IBackground, IShape, IElement, IDisposable Constructors ActivityIndicatorPopup(TimeSpan) Initializes a new instance of the ActivityIndicatorPopup class. Declaration public ActivityIndicatorPopup(TimeSpan popAfter = default(TimeSpan)) Parameters Type Name Description TimeSpan popAfter ActivityIndicatorPopup(Color, TimeSpan) Constructs an ActivityIndicator Popup Declaration public ActivityIndicatorPopup(Color color, TimeSpan popAfter = default(TimeSpan)) Parameters Type Name Description Color color TimeSpan popAfter Fields ColorProperty The color property. Declaration public static readonly BindableProperty ColorProperty Field Value Type Description BindableProperty Properties Color Gets or sets the color. Declaration public Color Color { get; set; } Property Value Type Description Color The color. Methods Create(TimeSpan) Presents an Activity Indicator Page Overlay Declaration public static ActivityIndicatorPopup Create(TimeSpan popAfter = default(TimeSpan)) Parameters Type Name Description TimeSpan popAfter Returns Type Description ActivityIndicatorPopup Create(Color, TimeSpan) Presents an Activity Indicator Page Overlay Declaration public static ActivityIndicatorPopup Create(Color color, TimeSpan popAfter = default(TimeSpan)) Parameters Type Name Description Color color TimeSpan popAfter Returns Type Description ActivityIndicatorPopup OnPropertyChanged(String) Ons the property changed. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides ModalPopup.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.ILayout Xamarin.Forms.IPageController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.IElementConfiguration<TElement> IPopup IBackground IShape IElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(PopupBase) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.Alert.html": {
    "href": "api/Forms9Patch.Alert.html",
    "title": "Class Alert | Forms9Patch",
    "keywords": "Class Alert Permission popup. Inheritance Object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage PopupPage Forms9Patch.PopupBase BubblePopup Alert PermissionPopup Implements INotifyPropertyChanged IAnimatable ITabStopElement ILayout IPageController IVisualElementController IElementController IElementConfiguration < Page > IPopup IBackground IShape IElement IDisposable Inherited Members BubblePopup.Content BubblePopup.TargetBiasProperty BubblePopup.TargetBias BubblePopup.PointerLengthProperty BubblePopup.PointerLength BubblePopup.PointerTipRadiusProperty BubblePopup.PointerTipRadius BubblePopup.PointerDirectionProperty BubblePopup.PointerDirection BubblePopup.PreferredPointerDirectionProperty BubblePopup.PreferredPointerDirection BubblePopup.PointerCornerRadiusProperty BubblePopup.PointerCornerRadius BubblePopup.PointProperty BubblePopup.Point BubblePopup.OnAppearingAnimationBegin() BubblePopup.UsePoint BubblePopup.Available(Double, Double, Rectangle) BubblePopup.LayoutChildren(Double, Double, Double, Double) PopupPage.BackgroundClicked PopupPage.IsAnimationEnabledProperty PopupPage.IsAnimationEnabled PopupPage.HasSystemPaddingProperty PopupPage.HasSystemPadding PopupPage.AnimationProperty PopupPage.Animation PopupPage.SystemPaddingProperty PopupPage.SystemPadding PopupPage.SystemPaddingSidesProperty PopupPage.SystemPaddingSides PopupPage.CloseWhenBackgroundIsClickedProperty PopupPage.CloseWhenBackgroundIsClicked PopupPage.BackgroundInputTransparentProperty PopupPage.BackgroundInputTransparent PopupPage.HasKeyboardOffsetProperty PopupPage.HasKeyboardOffset PopupPage.KeyboardOffsetProperty PopupPage.KeyboardOffset PopupPage.OnBackButtonPressed() PopupPage.OnAppearingAnimationEnd() PopupPage.OnDisappearingAnimationBegin() PopupPage.OnDisappearingAnimationEnd() PopupPage.OnAppearingAnimationBeginAsync() PopupPage.OnAppearingAnimationEndAsync() PopupPage.OnDisappearingAnimationBeginAsync() PopupPage.OnDisappearingAnimationEndAsync() PopupPage.OnBackgroundClicked() ContentPage.ContentProperty ContentPage.OnBindingContextChanged() TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element) TemplatedPage.OnChildRemoved(Element, Int32) TemplatedPage.GetTemplateChild(String) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.IconImageSourceProperty Page.DisplayActionSheet(String, String, String, String[]) Page.DisplayAlert(String, String, String) Page.DisplayAlert(String, String, String, String) Page.DisplayPromptAsync(String, String, String, String, String, Int32, Keyboard, String) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnChildMeasureInvalidated(Object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(Double, Double) Page.UpdateChildrenLayout() Page.On<T>() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.ToolbarItems Page.LayoutChanged Page.Appearing Page.Disappearing VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class Alert : BubblePopup, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, IPaddingElement, IControlTemplated, IPopup, IBackground, IShape, IElement, IDisposable Constructors Alert(VisualElement) Initializes a new instance of the Alert class. Declaration public Alert(VisualElement target = null) Parameters Type Name Description VisualElement target Fields _okButton OK Button Declaration protected readonly Button _okButton Field Value Type Description Button OkButtonColorProperty The ok button color property. Declaration public static readonly BindableProperty OkButtonColorProperty Field Value Type Description BindableProperty OkTextColorProperty The ok text color property. Declaration public static readonly BindableProperty OkTextColorProperty Field Value Type Description BindableProperty OkTextProperty The ok text property. Declaration public static readonly BindableProperty OkTextProperty Field Value Type Description BindableProperty PermissionStateProperty PermissionState Bindable Property Declaration public static readonly BindableProperty PermissionStateProperty Field Value Type Description BindableProperty TextProperty The text property backing store. Declaration public static readonly BindableProperty TextProperty Field Value Type Description BindableProperty TitleProperty The title property backing store. Declaration public static readonly BindableProperty TitleProperty Field Value Type Description BindableProperty Properties OkButtonColor Gets or sets the color of the ok button. Declaration public Color OkButtonColor { get; set; } Property Value Type Description Color The color of the ok button. OkText Gets or sets the ok text. Declaration public string OkText { get; set; } Property Value Type Description String The ok text. OkTextColor Gets or sets the color of the ok text. Declaration public Color OkTextColor { get; set; } Property Value Type Description Color The color of the ok text. PermissionState The current permission process state of the Permision Popup Declaration public PermissionState PermissionState { get; protected set; } Property Value Type Description PermissionState Text Gets or sets the text. Declaration public string Text { get; set; } Property Value Type Description String The text. Title Gets or sets the title. Declaration public string Title { get; set; } Property Value Type Description String The title. Methods CancelAsync(Object) Cancel the Alert Declaration public override Task CancelAsync(object trigger = null) Parameters Type Name Description Object trigger Returns Type Description Task Overrides Forms9Patch.PopupBase.CancelAsync(System.Object) Create(String, String, String, Color, Color) Create the specified title, text, okText, cancelText, okButtonColor, cancelButtonColor, okTextColor and cancelTextColor. Declaration public static Alert Create(string title, string text, string okText = \"OK\", Color okButtonColor = default(Color), Color okTextColor = default(Color)) Parameters Type Name Description String title Title. String text Text. String okText Ok text. Color okButtonColor Ok button color. Color okTextColor Ok text color. Returns Type Description Alert Create(VisualElement, String, String, String, Color, Color) Create the specified target, title, text, okText, cancelText, okButtonColor, cancelButtonColor, okTextColor and cancelTextColor. Declaration public static Alert Create(VisualElement target, string title, string text, string okText = \"OK\", Color okButtonColor = default(Color), Color okTextColor = default(Color)) Parameters Type Name Description VisualElement target Target. String title Title. String text Text. String okText Ok text. Color okButtonColor Ok button color. Color okTextColor Ok text color. Returns Type Description Alert The create. Dispose(Boolean) Dispose instance Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides Forms9Patch.PopupBase.Dispose(System.Boolean) OnAppearing() Called when appearing Declaration protected override void OnAppearing() Overrides Page.OnAppearing() OnPropertyChanged(String) Ons the property changed. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides BubblePopup.OnPropertyChanged(String) Events OkTapped Occurs when ok button is tapped. Declaration public event EventHandler OkTapped Event Type Type Description EventHandler Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.ILayout Xamarin.Forms.IPageController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.IElementConfiguration<TElement> IPopup IBackground IShape IElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(PopupBase) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.Analytics.html": {
    "href": "api/Forms9Patch.Analytics.html",
    "title": "Class Analytics | Forms9Patch",
    "keywords": "Class Analytics Interface to allow Forms9Patch events to be shared with an analytics provider used by the host application Inheritance Object Analytics Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class Analytics Properties TrackEvent Property for the TrackEvent delegate. Used for publishing a Forms9Patch analytics event to an application's analytics provider Declaration public static Analytics.TrackEventDelegate TrackEvent { get; set; } Property Value Type Description Analytics.TrackEventDelegate TrackException Property for the TrackException delegate. Used for publishing a Forms9Patch exception to an application's analytics provider Declaration public static Analytics.TrackExceptionDelegate TrackException { get; set; } Property Value Type Description Analytics.TrackExceptionDelegate"
  },
  "api/Forms9Patch.Analytics.TrackEventDelegate.html": {
    "href": "api/Forms9Patch.Analytics.TrackEventDelegate.html",
    "title": "Delegate Analytics.TrackEventDelegate | Forms9Patch",
    "keywords": "Delegate Analytics.TrackEventDelegate Delegate definition for publishing a Forms9Patch analytics event to an application's analytics provider Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public delegate void TrackEventDelegate(string eventName, IDictionary<string, string> properties); Parameters Type Name Description String eventName IDictionary < String , String > properties"
  },
  "api/Forms9Patch.Analytics.TrackExceptionDelegate.html": {
    "href": "api/Forms9Patch.Analytics.TrackExceptionDelegate.html",
    "title": "Delegate Analytics.TrackExceptionDelegate | Forms9Patch",
    "keywords": "Delegate Analytics.TrackExceptionDelegate Delegate definition for publishing a Forms9Patch exception to an application's analytics provider Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public delegate void TrackExceptionDelegate(Exception e, IDictionary<string, string> properties = null); Parameters Type Name Description Exception e IDictionary < String , String > properties"
  },
  "api/Forms9Patch.ApplicationExtensions.html": {
    "href": "api/Forms9Patch.ApplicationExtensions.html",
    "title": "Class ApplicationExtensions | Forms9Patch",
    "keywords": "Class ApplicationExtensions Application extensions. Inheritance Object ApplicationExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class ApplicationExtensions Methods GetXamarinFormsApplicationAssembly() Gets the xamarin forms application assembly. Declaration public static Assembly GetXamarinFormsApplicationAssembly() Returns Type Description Assembly The xamarin forms application assembly."
  },
  "api/Forms9Patch.ApplicationInfoService.html": {
    "href": "api/Forms9Patch.ApplicationInfoService.html",
    "title": "Class ApplicationInfoService | Forms9Patch",
    "keywords": "Class ApplicationInfoService Application infomation service. Inheritance Object ApplicationInfoService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class ApplicationInfoService Properties Assembly Gets the application's assembly. Declaration public static Assembly Assembly { get; } Property Value Type Description Assembly The assembly. Build Gets the application's build number. Declaration public static int Build { get; } Property Value Type Description Int32 The build. CurrentPage Gets the currently displayed page. Declaration public static Page CurrentPage { get; } Property Value Type Description Page The current page. Fingerprint Gets the fingerprint (valid on Android only). Declaration public static string Fingerprint { get; } Property Value Type Description String The fingerprint. Identifier Gets the bundle or package identifier. Declaration public static string Identifier { get; } Property Value Type Description String The identifier. Name Gets the applications display name. Declaration public static string Name { get; } Property Value Type Description String The name. NavigationPage Gets the application's navigation page. Declaration public static NavigationPage NavigationPage { get; } Property Value Type Description NavigationPage The navigation page. Version Gets the version string. Declaration public static string Version { get; } Property Value Type Description String The version. Methods IsPageInNavigationStacks(Page) Is the page in the current navigation stacks. Declaration public static bool IsPageInNavigationStacks(Page page) Parameters Type Name Description Page page Page. Returns Type Description Boolean true , if page in navigation stacks was ised, false otherwise. WaitForMainPage() Waits for Xamarin.Forms.Application.MainPAge to be set. Declaration public static Task WaitForMainPage() Returns Type Description Task The for main page."
  },
  "api/Forms9Patch.AspectExtension.html": {
    "href": "api/Forms9Patch.AspectExtension.html",
    "title": "Class AspectExtension | Forms9Patch",
    "keywords": "Class AspectExtension Forms9Patch Aspect extension. Inheritance Object AspectExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class AspectExtension Methods ToF9pFill(Aspect) Converts Xamarin.Forms.Aspect to Forms9Patch.Fill Declaration public static Fill ToF9pFill(this Aspect aspect) Parameters Type Name Description Aspect aspect Xamarin.Forms.Aspect Returns Type Description Fill The Forms9Patch fill."
  },
  "api/Forms9Patch.Audio.html": {
    "href": "api/Forms9Patch.Audio.html",
    "title": "Class Audio | Forms9Patch",
    "keywords": "Class Audio Audio system Inheritance Object Audio Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class Audio Methods PlaySoundEffect(SoundEffect, EffectMode) Invoke system audio effect Declaration public static void PlaySoundEffect(SoundEffect sound, EffectMode mode = EffectMode.Off) Parameters Type Name Description SoundEffect sound EffectMode mode"
  },
  "api/Forms9Patch.AutoFit.html": {
    "href": "api/Forms9Patch.AutoFit.html",
    "title": "Enum AutoFit | Forms9Patch",
    "keywords": "Enum AutoFit Label fit options. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum AutoFit Fields Name Description Lines Scale font until Lines of text will fill imposed height (either by RequestHeight or parent view) of label. None Perform no auto fit Width Shrink font from FontSize until MinFontSize to what is required to make the text fit within Lines"
  },
  "api/Forms9Patch.BaseMimeItemCollection.html": {
    "href": "api/Forms9Patch.BaseMimeItemCollection.html",
    "title": "Class BaseMimeItemCollection | Forms9Patch",
    "keywords": "Class BaseMimeItemCollection Do not use! Use MimeItemCollection instead! Inheritance Object BaseMimeItemCollection MimeItemCollection Implements IMimeItemCollection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public abstract class BaseMimeItemCollection : IMimeItemCollection Fields _description The backing store for the MimeItemCollection's description Declaration protected string _description Field Value Type Description String _items The backing store for the collection's items. Declaration protected List<IMimeItem> _items Field Value Type Description List < IMimeItem > Properties Description Short, descriptive text that can be used by app to display to the user what this collection represents. Declaration public virtual string Description { get; } Property Value Type Description String The description. HtmlText Gets or sets the html text representation of this data (if any) Declaration public virtual string HtmlText { get; } Property Value Type Description String The html text. Items Gets or sets the items for this MimeItemCollection Declaration public virtual List<IMimeItem> Items { get; } Property Value Type Description List < IMimeItem > The items. PlainText Gets or sets the plain text representation of this data (if any) Declaration public virtual string PlainText { get; } Property Value Type Description String The plain text. Implements IMimeItemCollection Extension Methods IMimeItemCollectionExtensions.MimeTypes(IMimeItemCollection) IMimeItemCollectionExtensions.GetFirstMimeItem<T>(IMimeItemCollection, String) IMimeItemCollectionExtensions.GetMimeItems<T>(IMimeItemCollection, String) IMimeItemCollectionExtensions.ContainsMimeType(IMimeItemCollection, String)"
  },
  "api/Forms9Patch.BasePickerDataTemplateSelector.html": {
    "href": "api/Forms9Patch.BasePickerDataTemplateSelector.html",
    "title": "Class BasePickerDataTemplateSelector | Forms9Patch",
    "keywords": "Class BasePickerDataTemplateSelector Template Picker Inheritance Object ElementTemplate DataTemplate DataTemplateSelector BasePickerDataTemplateSelector Inherited Members DataTemplateSelector.SelectTemplate(Object, BindableObject) DataTemplate.SetBinding(BindableProperty, BindingBase) DataTemplate.SetValue(BindableProperty, Object) DataTemplate.Bindings DataTemplate.Values ElementTemplate.CreateContent() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class BasePickerDataTemplateSelector : DataTemplateSelector, IElement, IDataTemplate, IDataTemplateController Methods Add(Type, Type) Adds a new template Declaration public void Add(Type itemType, Type templateType) Parameters Type Name Description Type itemType Type templateType Clear() Clears the templates Declaration public void Clear() OnSelectTemplate(Object, BindableObject) Selects a template for an item Declaration protected override DataTemplate OnSelectTemplate(object item, BindableObject container) Parameters Type Name Description Object item BindableObject container Returns Type Description DataTemplate Overrides DataTemplateSelector.OnSelectTemplate(Object, BindableObject)"
  },
  "api/Forms9Patch.BubblePopup.html": {
    "href": "api/Forms9Patch.BubblePopup.html",
    "title": "Class BubblePopup | Forms9Patch",
    "keywords": "Class BubblePopup Forms9Patch Bubble pop-up. Inheritance Object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage PopupPage Forms9Patch.PopupBase BubblePopup Alert TargetedMenu TargetedToast Implements INotifyPropertyChanged IAnimatable ITabStopElement ILayout IPageController IVisualElementController IElementController IElementConfiguration < Page > IPopup IBackground IShape IElement IDisposable Inherited Members PopupPage.BackgroundClicked PopupPage.IsAnimationEnabledProperty PopupPage.IsAnimationEnabled PopupPage.HasSystemPaddingProperty PopupPage.HasSystemPadding PopupPage.AnimationProperty PopupPage.Animation PopupPage.SystemPaddingProperty PopupPage.SystemPadding PopupPage.SystemPaddingSidesProperty PopupPage.SystemPaddingSides PopupPage.CloseWhenBackgroundIsClickedProperty PopupPage.CloseWhenBackgroundIsClicked PopupPage.BackgroundInputTransparentProperty PopupPage.BackgroundInputTransparent PopupPage.HasKeyboardOffsetProperty PopupPage.HasKeyboardOffset PopupPage.KeyboardOffsetProperty PopupPage.KeyboardOffset PopupPage.OnBackButtonPressed() PopupPage.OnAppearingAnimationEnd() PopupPage.OnDisappearingAnimationBegin() PopupPage.OnDisappearingAnimationEnd() PopupPage.OnAppearingAnimationBeginAsync() PopupPage.OnAppearingAnimationEndAsync() PopupPage.OnDisappearingAnimationBeginAsync() PopupPage.OnDisappearingAnimationEndAsync() PopupPage.OnBackgroundClicked() ContentPage.ContentProperty ContentPage.OnBindingContextChanged() TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element) TemplatedPage.OnChildRemoved(Element, Int32) TemplatedPage.GetTemplateChild(String) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(String, String, String, String[]) Page.DisplayAlert(String, String, String) Page.DisplayAlert(String, String, String, String) Page.DisplayPromptAsync(String, String, String, String, String, Int32, Keyboard, String) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnAppearing() Page.OnChildMeasureInvalidated(Object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(Double, Double) Page.UpdateChildrenLayout() Page.On<T>() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.LayoutChanged Page.Appearing Page.Disappearing VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class BubblePopup : PopupBase, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, IPaddingElement, IControlTemplated, IPopup, IBackground, IShape, IElement, IDisposable Constructors BubblePopup(Segment, TimeSpan) Initializes a new instance of the BubblePopup class. Declaration public BubblePopup(Segment segment, TimeSpan popAfter = default(TimeSpan)) Parameters Type Name Description Segment segment TimeSpan popAfter BubblePopup(VisualElement, TimeSpan) Initializes a new instance of the BubblePopup class. Declaration public BubblePopup(VisualElement target, TimeSpan popAfter = default(TimeSpan)) Parameters Type Name Description VisualElement target Target. TimeSpan popAfter Pop after TimeSpan. BubblePopup(VisualElement, Point, TimeSpan) Initializes a new instance of the BubblePopup class. Declaration public BubblePopup(VisualElement target, Point point, TimeSpan popAfter = default(TimeSpan)) Parameters Type Name Description VisualElement target Target. Point point Point. TimeSpan popAfter Pop after TimeSpan. Fields PointerCornerRadiusProperty The pointer corner radius property. Defaults to OutlineCornerRadius if not set. Declaration public static readonly BindableProperty PointerCornerRadiusProperty Field Value Type Description BindableProperty PointerDirectionProperty Backing store for pointer direction property. Declaration public static readonly BindableProperty PointerDirectionProperty Field Value Type Description BindableProperty PointerLengthProperty Backing store for pointer length property. Declaration public static readonly BindableProperty PointerLengthProperty Field Value Type Description BindableProperty PointerTipRadiusProperty Backing store for pointer tip radius property. Declaration public static readonly BindableProperty PointerTipRadiusProperty Field Value Type Description BindableProperty PointProperty backing store for Point property Declaration public static readonly BindableProperty PointProperty Field Value Type Description BindableProperty PreferredPointerDirectionProperty backing store for PreferredPointerDirection property Declaration public static readonly BindableProperty PreferredPointerDirectionProperty Field Value Type Description BindableProperty TargetBiasProperty The target bias property backing Store. Declaration public static readonly BindableProperty TargetBiasProperty Field Value Type Description BindableProperty Properties Content Gets or sets the content of the FormsPopup.Modal. Declaration public View Content { get; set; } Property Value Type Description View The content. Point Gets/Sets the Point property Declaration public Point Point { get; set; } Property Value Type Description Point PointerCornerRadius Gets or sets the pointer corner radius. Declaration public float PointerCornerRadius { get; set; } Property Value Type Description Single The pointer corner radius. PointerDirection Gets or sets the direction in which the pointer pointing. Declaration public PointerDirection PointerDirection { get; set; } Property Value Type Description PointerDirection The pointer direction. PointerLength Gets or sets the length of the bubble layout's pointer. Declaration public float PointerLength { get; set; } Property Value Type Description Single The length of the pointer. PointerTipRadius Gets or sets the radius of the bubble's pointer tip. Declaration public float PointerTipRadius { get; set; } Property Value Type Description Single The pointer tip radius. PreferredPointerDirection Gets/Sets the PreferredPointerDirection property Declaration public PointerDirection PreferredPointerDirection { get; set; } Property Value Type Description PointerDirection TargetBias Gets or sets the bias (0.0 is start; 0.5 is center; 1.0 is end; greater than 1.0 is pixels from start; less than 0.0 is pixels from end)of the pointer relative to the chosen face on the target. Declaration public double TargetBias { get; set; } Property Value Type Description Double The target bias. UsePoint Gets or sets a value indicating whether this BubblePopup will target Point (a point in the target) vs. the border of the target. Declaration public bool UsePoint { get; set; } Property Value Type Description Boolean true if use point; otherwise, false . Methods Available(Double, Double, Rectangle) How much space is available for a popup of width and height? Declaration protected Thickness Available(double width, double height, Rectangle targetBounds) Parameters Type Name Description Double width Double height Rectangle targetBounds Returns Type Description Thickness LayoutChildren(Double, Double, Double, Double) Positions and sizes the children of a Layout. Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description Double x A value representing the x coordinate of the child region bounding box. Double y A value representing the y coordinate of the child region bounding box. Double width A value representing the width of the child region bounding box. Double height A value representing the height of the child region bounding box. Overrides PopupPage.LayoutChildren(Double, Double, Double, Double) Remarks Implementors wishing to change the default behavior of a Layout should override this method. It is suggested to still call the base method and modify its calculated results. OnAppearingAnimationBegin() Called when popup is starting to appear Declaration protected override void OnAppearingAnimationBegin() Overrides Forms9Patch.PopupBase.OnAppearingAnimationBegin() OnPropertyChanged(String) Call this method from a child class to notify that a change happened on a property. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName The name of the property that changed. Overrides Forms9Patch.PopupBase.OnPropertyChanged(System.String) Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.ILayout Xamarin.Forms.IPageController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.IElementConfiguration<TElement> IPopup IBackground IShape IElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(PopupBase) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.Button.html": {
    "href": "api/Forms9Patch.Button.html",
    "title": "Class Button | Forms9Patch",
    "keywords": "Class Button Forms9Patch Button. Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView ContentView Frame Button MaterialButton StateButton Implements INotifyPropertyChanged IAnimatable ITabStopElement IGestureController IGestureRecognizers ILayout ILayoutController ILayout IDisposable IButton IButtonController IViewController IVisualElementController IElementController IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Inherited Members ContentView.ContentProperty ContentView.IgnoreChildrenProperty ContentView.IgnoreChildren ContentView.BackgroundImageProperty ContentView.BackgroundImage ContentView.LimitMinSizeToBackgroundImageSizeProperty ContentView.LimitMinSizeToBackgroundImageSize ContentView.ShadowInvertedProperty ContentView.ShadowInverted ContentView.OutlineRadiusProperty ContentView.OutlineRadius ContentView.BorderRadiusProperty ContentView.BorderRadius ContentView.ElementShapeProperty ContentView.ElementShape ContentView.InstanceId ContentView._f9pId ContentView._fallbackBackgroundImage ContentView.CurrentBackgroundImage ContentView.BaseInternalChildren ContentView.Dispose() ContentView.Description() ContentView.ShouldInvalidateOnChildAdded(View) ContentView.ShouldInvalidateOnChildRemoved(View) ContentView.OnChildMeasureInvalidated() ContentView.OnSizeRequest(Double, Double) ContentView.LayoutChildren(Double, Double, Double, Double) ContentView.OnBindingContextChanged() TemplatedView.ControlTemplateProperty TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class Button : Frame, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated, ILayout, IDisposable, IButton, IButtonController, IViewController, IVisualElementController, IElementController, IButtonState, IBackground, IShape, ILabel, ILabelStyle, IFontElement, IElement Constructors Button() Initializes a new instance of the Button class. Declaration public Button() Button(String, Image) Instantiates an new Button and sets its Text and imageSource properties Declaration public Button(string text, Image image) Parameters Type Name Description String text Image image Button(String, String, Assembly) Instantiates a new Button and sets its Text and either its IconText or its IconImage, created using the provided embedded resource id Declaration public Button(string text, string icon, Assembly assembly = null) Parameters Type Name Description String text Button's text String icon Segments's icon (either EmbeddedResourceId or HtmlText) Assembly assembly Assembly that has EmbeddedResource used for Icon Button(String, ImageSource) Instantiates an new Button and sets its Text property and sets the IconImage to a new image, created using the provided ImageSource Declaration public Button(string text, ImageSource imageSource = null) Parameters Type Name Description String text ImageSource imageSource Fields _constructing The constructing. Declaration protected bool _constructing Field Value Type Description Boolean _gestureListener The gesture listener. Declaration protected Listener _gestureListener Field Value Type Description Listener _iconImage The image. Declaration protected Image _iconImage Field Value Type Description Image _iconLabel The icon label. Declaration protected Label _iconLabel Field Value Type Description Label _label The label. Declaration protected Label _label Field Value Type Description Label AlignmentProperty Backing store for the Button.Alignment bindable property Declaration public static BindableProperty AlignmentProperty Field Value Type Description BindableProperty AutoFitProperty The fit property. Declaration public static readonly BindableProperty AutoFitProperty Field Value Type Description BindableProperty BackgroundColorProperty Backing store for the BackgroundColor property Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty BorderColorProperty Backing store for Button's BorderColor property Declaration public static readonly BindableProperty BorderColorProperty Field Value Type Description BindableProperty BorderWidthProperty Backing store for Button's BorderWidth property Declaration public static readonly BindableProperty BorderWidthProperty Field Value Type Description BindableProperty CommandParameterProperty Backing store for the Button.CommandParameter bindable property. Declaration public static readonly BindableProperty CommandParameterProperty Field Value Type Description BindableProperty CommandProperty Backing store for the Button.Command bindable property. Declaration public static readonly BindableProperty CommandProperty Field Value Type Description BindableProperty DarkThemeProperty Backing store for the Button.DarkTheme property. Declaration public static readonly BindableProperty DarkThemeProperty Field Value Type Description BindableProperty FitProperty backing store for Fit property Declaration [Obsolete(\"FitProperty is obsolete. Use AutoFitProperty instead.\", true)] public static readonly BindableProperty FitProperty Field Value Type Description BindableProperty FontAttributesProperty Backing store for the Button.FontAttributes bindable property. Declaration public static readonly BindableProperty FontAttributesProperty Field Value Type Description BindableProperty FontColorProperty OBSOLETE: Use TextColorProperty Declaration [Obsolete(\"Use TextColorProperty\", true)] public static readonly BindableProperty FontColorProperty Field Value Type Description BindableProperty FontFamilyProperty Backing store for the Button.FontFamiily bindable property. Declaration public static readonly BindableProperty FontFamilyProperty Field Value Type Description BindableProperty FontSizeProperty Backing store for the Button.FontSize bindable property. Declaration public static readonly BindableProperty FontSizeProperty Field Value Type Description BindableProperty HapticEffectModeProperty The haptic mode property. Declaration public static readonly BindableProperty HapticEffectModeProperty Field Value Type Description BindableProperty HapticEffectProperty The haptic effect property. Declaration public static readonly BindableProperty HapticEffectProperty Field Value Type Description BindableProperty HasShadowProperty Backing store for the HasShadow property Declaration public static readonly BindableProperty HasShadowProperty Field Value Type Description BindableProperty HasTightSpacingProperty The has tight spacing property. Declaration public static readonly BindableProperty HasTightSpacingProperty Field Value Type Description BindableProperty HorizontalTextAlignmentProperty Backing store for the Button.Alignment bindable property Declaration public static BindableProperty HorizontalTextAlignmentProperty Field Value Type Description BindableProperty HtmlTextProperty Backing store for the formatted text property. Declaration public static readonly BindableProperty HtmlTextProperty Field Value Type Description BindableProperty IconColorProperty Backing store for Button IconColor property Declaration public static readonly BindableProperty IconColorProperty Field Value Type Description BindableProperty IconFontFamilyProperty Backing store for the icon font family property. Declaration public static readonly BindableProperty IconFontFamilyProperty Field Value Type Description BindableProperty IconFontSizeProperty Backing store for Button IconFontSize property Declaration public static readonly BindableProperty IconFontSizeProperty Field Value Type Description BindableProperty IconImageProperty Backing store for the IconImage property Declaration public static BindableProperty IconImageProperty Field Value Type Description BindableProperty IconTextProperty The image text property backing store Declaration public static readonly BindableProperty IconTextProperty Field Value Type Description BindableProperty ImageSourceProperty OBSOLETE: Use IconImageProperty Declaration [Obsolete(\"Use IconImageProperty\", true)] public static BindableProperty ImageSourceProperty Field Value Type Description BindableProperty IsClippedProperty Backing store for the IsClipped property. Declaration public static readonly BindableProperty IsClippedProperty Field Value Type Description BindableProperty IsEllipticalProperty backing store for IsEliptical property Declaration [Obsolete(\"Use ElementShapeProperty instead.\", true)] public static readonly BindableProperty IsEllipticalProperty Field Value Type Description BindableProperty IsLongPressEnabledProperty The is long press enabled property. Declaration public static readonly BindableProperty IsLongPressEnabledProperty Field Value Type Description BindableProperty IsSelectedProperty Backing store for the Button.IsSelected bindable property. Declaration public static BindableProperty IsSelectedProperty Field Value Type Description BindableProperty LineBreakModeProperty The line break mode property. Declaration public static readonly BindableProperty LineBreakModeProperty Field Value Type Description BindableProperty LinesProperty The lines property. Declaration public static readonly BindableProperty LinesProperty Field Value Type Description BindableProperty MinFontSizeProperty The backing store for the minimum font size property. Declaration public static readonly BindableProperty MinFontSizeProperty Field Value Type Description BindableProperty OrientationProperty Backing store for the Button's orientation property. Declaration public static BindableProperty OrientationProperty Field Value Type Description BindableProperty OutlineColorProperty Backing store for the OutlineColor property Declaration public static readonly BindableProperty OutlineColorProperty Field Value Type Description BindableProperty OutlineWidthProperty Backing store for the button's OutlineWidth property Declaration public static readonly BindableProperty OutlineWidthProperty Field Value Type Description BindableProperty SelectedBackgroundColorProperty Backing store for the Button.SelectedBackgroundColor bindable property. Declaration public static readonly BindableProperty SelectedBackgroundColorProperty Field Value Type Description BindableProperty SelectedFontColorProperty OBSOLETE: Use SelectedTextColorProperty Declaration [Obsolete(\"Use SelectedTextColorProperty\", true)] public static readonly BindableProperty SelectedFontColorProperty Field Value Type Description BindableProperty SelectedTextColorProperty Backing store for the SelectedTextColor property Declaration public static readonly BindableProperty SelectedTextColorProperty Field Value Type Description BindableProperty SoundEffectModeProperty The backing store for the sound effect mode property. Declaration public static readonly BindableProperty SoundEffectModeProperty Field Value Type Description BindableProperty SoundEffectProperty The sound effect property backing store Declaration public static readonly BindableProperty SoundEffectProperty Field Value Type Description BindableProperty SpacingProperty Backing store for the spacing property. Declaration public static readonly BindableProperty SpacingProperty Field Value Type Description BindableProperty StickyBehaviorProperty OBSOLETE: Use ToggleBehaviorProperty instead. Declaration [Obsolete(\"StickyBehavior property is obsolete, use ToggleBehavior instead\", true)] public static BindableProperty StickyBehaviorProperty Field Value Type Description BindableProperty TextColorProperty Backing store for the TextColor property Declaration public static readonly BindableProperty TextColorProperty Field Value Type Description BindableProperty TextProperty Backing store for the Button.Text bindable property. Declaration public static readonly BindableProperty TextProperty Field Value Type Description BindableProperty TintIconProperty The tint image property backing store. Declaration public static readonly BindableProperty TintIconProperty Field Value Type Description BindableProperty TintImageProperty OBSOLETE: Used TintIconProperty Declaration [Obsolete(\"Use TintIconProperty\", true)] public static readonly BindableProperty TintImageProperty Field Value Type Description BindableProperty ToggleBehaviorProperty Backing store for the Button.ToggleBehavior bindable property. Declaration public static BindableProperty ToggleBehaviorProperty Field Value Type Description BindableProperty TrailingIconProperty Backing store for the trailing image property. Declaration public static readonly BindableProperty TrailingIconProperty Field Value Type Description BindableProperty TrailingImageProperty OBSOLETE: Use TrailingIconProperty Declaration [Obsolete(\"Use TrailingIconProperty\", true)] public static readonly BindableProperty TrailingImageProperty Field Value Type Description BindableProperty VerticalTextAlignmentProperty Backing store for the vertical alignment property. Declaration public static readonly BindableProperty VerticalTextAlignmentProperty Field Value Type Description BindableProperty Properties Alignment Gets or sets the alignment of the image and text. Declaration [Obsolete(\"Alignment is obsolete, see HorizontalTextAlignment and VerticalTextAlignment\", true)] public TextAlignment Alignment { get; set; } Property Value Type Description TextAlignment The alignment (left, center, right). AutoFit Gets or sets the fit. Declaration public AutoFit AutoFit { get; set; } Property Value Type Description AutoFit The fit. BackgroundColor Gets or sets the button's background color Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color BorderColor controls value of .BorderColor property Declaration public Color BorderColor { get; set; } Property Value Type Description Color BorderWidth controls value of .BorderWidth property Declaration public float BorderWidth { get; set; } Property Value Type Description Single Command Gets or sets the command to invoke when the button is activated. This is a bindable property. Declaration public ICommand Command { get; set; } Property Value Type Description ICommand A command to invoke when the button is activated. The default value is null . Remarks This property is used to associate a command with an instance of a button. This property is most often set in the MVVM pattern to bind callbacks back into the ViewModel. IsEnabled is controlled by the Command if set. CommandParameter Gets or sets the parameter to pass to the Command property. This is a bindable property. Declaration public object CommandParameter { get; set; } Property Value Type Description Object A object to pass to the command property. The default value is null . Content Do not use Declaration [Obsolete(\"Content property is not supported\", true)] public VisualElement Content { get; set; } Property Value Type Description VisualElement DarkTheme Gets or sets a value indicating whether this Button if for a dark theme. Declaration public bool DarkTheme { get; set; } Property Value Type Description Boolean true if dark theme; otherwise, false . Fit Gets/Sets the Fit property Declaration [Obsolete(\"Fit property is obsolete. Use AutoFit property instead.\", true)] public LabelFit Fit { get; set; } Property Value Type Description LabelFit FittedFontSize Gets the FittedFontSize of the button's text (assuming it hasn't been overridden by SychronizedFontSize Declaration public double FittedFontSize { get; } Property Value Type Description Double FontAttributes Gets or sets the font attributes. Declaration public FontAttributes FontAttributes { get; set; } Property Value Type Description FontAttributes The font attributes. FontColor OBSOLETE: Use TextColor Declaration [Obsolete(\"Use TextColor\", true)] public Color FontColor { get; set; } Property Value Type Description Color The color of the font. FontFamily Gets or sets the font family. Declaration public string FontFamily { get; set; } Property Value Type Description String The font family. FontSize Gets or sets the size of the font. Declaration public double FontSize { get; set; } Property Value Type Description Double The size of the font. HapticEffect Gets or sets the haptic effect. Declaration public HapticEffect HapticEffect { get; set; } Property Value Type Description HapticEffect The haptic effect. HapticEffectMode Gets or sets the haptic mode. Declaration public EffectMode HapticEffectMode { get; set; } Property Value Type Description EffectMode The haptic mode. HasShadow controls if the button has a shadow Declaration public bool HasShadow { get; set; } Property Value Type Description Boolean HasTightSpacing Gets or sets if the Icon/Image is close (TightSpacing) to text or at edge (not TightSpacing) of button. Declaration public bool HasTightSpacing { get; set; } Property Value Type Description Boolean true if has tight spacing; otherwise, false . HorizontalTextAlignment Gets or sets the alignment of the image and text. Declaration public TextAlignment HorizontalTextAlignment { get; set; } Property Value Type Description TextAlignment The alignment (left, center, right). HtmlText Gets or sets the formatted text. Declaration public string HtmlText { get; set; } Property Value Type Description String The formatted text. IconColor Overrides the icon color as provided by the Button's TextColor (if TintIcon=true), the default TextColor (if IconText != null), or the IconImage colors Declaration public Color IconColor { get; set; } Property Value Type Description Color IconFontFamily Gets or sets the font family for the IconText Declaration public string IconFontFamily { get; set; } Property Value Type Description String The icon font family. IconFontSize Overrides the default icon font size (the button's FontSize). Declaration public double IconFontSize { get; set; } Property Value Type Description Double IconImage Gets or sets the icon image. Alternatively, use IconText Declaration public Image IconImage { get; set; } Property Value Type Description Image IconText Gets or sets the image text - use this to specify the image as an HTML markup string. Declaration public string IconText { get; set; } Property Value Type Description String The image text. ImageSource OBSOLETE: Use IconImage. Declaration [Obsolete(\"Use IconImage\", true)] public ImageSource ImageSource { get; set; } Property Value Type Description ImageSource The image. IsClipped Gets or sets a value indicating whether the contents of this Button is clipped. Declaration public bool IsClipped { get; } Property Value Type Description Boolean true if is clipped; otherwise, false . IsElliptical Gets/Sets the IsEliptical property Declaration [Obsolete(\"Use ElementShape property instead.\", true)] public bool IsElliptical { get; set; } Property Value Type Description Boolean IsLongPressEnabled Gets or sets a value indicating whether this Button has long press enabled. Declaration public bool IsLongPressEnabled { get; set; } Property Value Type Description Boolean true if is long press enabled; otherwise, false . IsSelected Gets or sets a value indicating whether this Button is selected. Declaration public bool IsSelected { get; set; } Property Value Type Description Boolean true if selected; otherwise, false . LineBreakMode Gets or sets the line break mode. Declaration public LineBreakMode LineBreakMode { get; set; } Property Value Type Description LineBreakMode The line break mode. Lines Gets or sets the lines. Declaration public int Lines { get; set; } Property Value Type Description Int32 The lines. MinFontSize Gets or sets the minimum size of the font allowed during an autofit. Declaration public double MinFontSize { get; set; } Property Value Type Description Double The minimum size of the font. Default=4 Orientation Gets or sets the orientation of the iamge and label. Declaration public StackOrientation Orientation { get; set; } Property Value Type Description StackOrientation The image and label orientation. OutlineColor controls the outline color of the button Declaration public Color OutlineColor { get; set; } Property Value Type Description Color OutlineWidth controls the width of the button's outline Declaration public float OutlineWidth { get; set; } Property Value Type Description Single SelectedBackgroundColor Gets or sets the background color used when selected. Declaration public Color SelectedBackgroundColor { get; set; } Property Value Type Description Color The selected background. SelectedFontColor OBSOLETE: Use SelectedTextColor Declaration [Obsolete(\"Use SelectedTextColor\", true)] public Color SelectedFontColor { get; set; } Property Value Type Description Color The color of the font. SelectedTextColor Gets or sets the font color of the Text or the base font color of the HtmlText for when the button is selected Declaration public Color SelectedTextColor { get; set; } Property Value Type Description Color SoundEffect Gets or sets the sound effect. Declaration public SoundEffect SoundEffect { get; set; } Property Value Type Description SoundEffect The sound effect. SoundEffectMode Gets or sets the sound effect mode. Declaration public EffectMode SoundEffectMode { get; set; } Property Value Type Description EffectMode The sound effect mode. Spacing Gets or sets the spacing. Declaration public double Spacing { get; set; } Property Value Type Description Double The spacing. StickyBehavior OBSOLETE: Use ToggleBehavior instead. Declaration [Obsolete(\"StickyBehavior property is obsolete, use ToggleBehavior instead\", true)] public bool StickyBehavior { get; set; } Property Value Type Description Boolean SynchronizedFontSize Overrides the button's label's FontSize for the purpose of synchronization between Declaration public double SynchronizedFontSize { get; set; } Property Value Type Description Double Text Gets or sets the text. Declaration public string Text { get; set; } Property Value Type Description String The text. TextColor Gets or sets the font color of the Text or the base font color of the HtmlText Declaration public Color TextColor { get; set; } Property Value Type Description Color TintIcon Will the TextColor be used to tint the IconImage? Declaration public bool TintIcon { get; set; } Property Value Type Description Boolean true tint IconImage with TextColor; otherwise, false . TintImage OBSOLETE: Use TintIcon property Declaration [Obsolete(\"Use TintIcon\", true)] public bool TintImage { get; set; } Property Value Type Description Boolean ToggleBehavior Gets or sets a value indicating whether this Button will stay selected or unselected after a tap. Declaration public bool ToggleBehavior { get; set; } Property Value Type Description Boolean true if togglable; otherwise, false . TrailingIcon Gets or sets if the image is to be rendered after the text. Declaration public bool TrailingIcon { get; set; } Property Value Type Description Boolean default=false TrailingImage OBSOLETE: Use TrailingIcon Declaration [Obsolete(\"Use TrailingIcon\", true)] public bool TrailingImage { get; set; } Property Value Type Description Boolean VerticalTextAlignment Gets or sets the vertical alignment. Declaration public TextAlignment VerticalTextAlignment { get; set; } Property Value Type Description TextAlignment The vertical alignment. Methods CheckIsClipped(Double, Double) Test if the segment contents are clipped Declaration public bool CheckIsClipped(double width = -1, double height = -1) Parameters Type Name Description Double width Double height Returns Type Description Boolean Dispose(Boolean) Dispose the specified disposing. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Disposing. Overrides ContentView.Dispose(Boolean) GetMinSize() What is the smallest that this button can be rendered (in one line of text) Declaration public Size GetMinSize() Returns Type Description Size InvokeLongPressed(Object, EventArgs) Invokes the long pressed. Declaration protected void InvokeLongPressed(object sender, EventArgs args) Parameters Type Name Description Object sender Sender. EventArgs args Arguments. InvokeLongPressing(Object, EventArgs) Invokes the long pressing. Declaration protected void InvokeLongPressing(object sender, EventArgs args) Parameters Type Name Description Object sender Sender. EventArgs args Arguments. InvokeSelected(Object, EventArgs) Invokes the selected. Declaration protected void InvokeSelected(object sender, EventArgs args) Parameters Type Name Description Object sender Sender. EventArgs args Arguments. InvokeTapped(Object, EventArgs) Invokes the tapped. Declaration protected void InvokeTapped(object sender, EventArgs args) Parameters Type Name Description Object sender Sender. EventArgs args Arguments. OnDown(Object, DownUpEventArgs) Called when button is pressed down Declaration protected virtual void OnDown(object sender, DownUpEventArgs e) Parameters Type Name Description Object sender DownUpEventArgs e OnLongPressed(Object, LongPressEventArgs) Called whe button is released after long press Declaration protected virtual void OnLongPressed(object sender, LongPressEventArgs e) Parameters Type Name Description Object sender LongPressEventArgs e OnLongPressing(Object, LongPressEventArgs) Called whe button has been long pressed Declaration protected virtual void OnLongPressing(object sender, LongPressEventArgs e) Parameters Type Name Description Object sender LongPressEventArgs e OnPropertyChanged(String) Call this method from a child class to notify that a change happened on a property. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName The name of the changed property. Overrides Frame.OnPropertyChanged(String) Remarks A Button triggers this by itself. An inheritor only need to call this for properties without BindableProperty as backend store. OnPropertyChanging(String) Call this method from a child class to notify that a change happened on a property. Declaration protected override void OnPropertyChanging(string propertyName = null) Parameters Type Name Description String propertyName The name of the changed property. Overrides BindableObject.OnPropertyChanging(String) Remarks A Button triggers this by itself. An inheritor only need to call this for properties without BindableProperty as backend store. OnTapped(Object, TapEventArgs) Called when button is tapped Declaration protected virtual void OnTapped(object sender, TapEventArgs e) Parameters Type Name Description Object sender TapEventArgs e OnUp(Object, DownUpEventArgs) Called when button is released Declaration protected virtual void OnUp(object sender, DownUpEventArgs e) Parameters Type Name Description Object sender DownUpEventArgs e SendClicked() Xamarin.Forms.IButtonController SendClicked method Declaration public void SendClicked() SendTapped() Sends the tapped. Declaration protected void SendTapped() Tap() Tap this instance. Declaration public void Tap() ToString() Returns a String that represents the current Button . Declaration public override string ToString() Returns Type Description String A String that represents the current Button . Overrides ContentView.ToString() UpdateElements(Boolean) Updates the elements in the button Declaration protected virtual void UpdateElements(bool isSegment = false) Parameters Type Name Description Boolean isSegment Events Clicked Xamarin.Forms.IButton Clicked event Declaration public event EventHandler Clicked Event Type Type Description EventHandler LongPressed Occurs when long pressed has completed. Declaration public event EventHandler LongPressed Event Type Type Description EventHandler LongPressing Occurs when button is actively being long pressed Declaration public event EventHandler LongPressing Event Type Type Description EventHandler Pressed Xamarin.Forms.IButton Pressed event Declaration public event EventHandler Pressed Event Type Type Description EventHandler Released Xamarin.Forms.IButton Released event Declaration public event EventHandler Released Event Type Type Description EventHandler Selected Occurs when transitioned to IsSelected=true. Declaration public event EventHandler Selected Event Type Type Description EventHandler Tapped Occurs when the Button is clicked. Declaration public event EventHandler Tapped Event Type Type Description EventHandler Remarks The user may be able to raise the clicked event using accessibility or keyboard controls when the Button has focus. Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController ILayout System.IDisposable IButton Xamarin.Forms.IButtonController Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.ButtonState.html": {
    "href": "api/Forms9Patch.ButtonState.html",
    "title": "Class ButtonState | Forms9Patch",
    "keywords": "Class ButtonState Describes the properties of a StateButton for a given state. Inheritance Object BindableObject ButtonState ImageButtonState Implements INotifyPropertyChanged IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Inherited Members BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [ContentProperty(\"HtmlText\")] public class ButtonState : BindableObject, INotifyPropertyChanged, IDynamicResourceHandler, IButtonState, IBackground, IShape, ILabel, ILabelStyle, IFontElement, IElement Constructors ButtonState() Initializes a new instance of the ButtonState class. Declaration public ButtonState() ButtonState(ButtonState) Initializes a new instance of the ButtonState class to the same properties of Source instance. Declaration public ButtonState(ButtonState source) Parameters Type Name Description ButtonState source Source instance. Fields AutoFitProperty The fit property. Declaration public static readonly BindableProperty AutoFitProperty Field Value Type Description BindableProperty BackgroundColorProperty Backing store for the BackgroundColor bindable property. Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty BackgroundImageProperty Backing store for the BackgroundImage bindable property. Declaration public static BindableProperty BackgroundImageProperty Field Value Type Description BindableProperty BorderColorProperty The border color property. Declaration public static readonly BindableProperty BorderColorProperty Field Value Type Description BindableProperty BorderRadiusProperty The border radius property. Declaration public static readonly BindableProperty BorderRadiusProperty Field Value Type Description BindableProperty BorderWidthProperty The border width property. Declaration public static readonly BindableProperty BorderWidthProperty Field Value Type Description BindableProperty ElementShapeProperty Backing store for the ElementShape property Declaration public static readonly BindableProperty ElementShapeProperty Field Value Type Description BindableProperty FontAttributesProperty Backing store for the FontAttributes bindable property. Declaration public static readonly BindableProperty FontAttributesProperty Field Value Type Description BindableProperty FontColorProperty OBSOLETE: Use TextColorProperty Declaration [Obsolete(\"Use TextColorProperty\")] public static readonly BindableProperty FontColorProperty Field Value Type Description BindableProperty FontFamilyProperty Backing store for the FontFamiily bindable property. Declaration public static readonly BindableProperty FontFamilyProperty Field Value Type Description BindableProperty FontSizeProperty Backing store for the FontSize bindable property. Declaration public static readonly BindableProperty FontSizeProperty Field Value Type Description BindableProperty HasShadowProperty Backing store for the HasShadow property Declaration public static readonly BindableProperty HasShadowProperty Field Value Type Description BindableProperty HasTightSpacingProperty The has tight spacing property. Declaration public static readonly BindableProperty HasTightSpacingProperty Field Value Type Description BindableProperty HorizontalTextAlignmentProperty Backing store for the Button.Alignment bindable property Declaration public static BindableProperty HorizontalTextAlignmentProperty Field Value Type Description BindableProperty HtmlTextProperty The formatted text property backing store. Declaration public static readonly BindableProperty HtmlTextProperty Field Value Type Description BindableProperty IconColorProperty Backing store for ButtonState IconColor property Declaration public static readonly BindableProperty IconColorProperty Field Value Type Description BindableProperty IconFontFamilyProperty backing store for the IconFontFamily property Declaration public static readonly BindableProperty IconFontFamilyProperty Field Value Type Description BindableProperty IconFontSizeProperty Backing store for ButtonState IconFontSize property Declaration public static readonly BindableProperty IconFontSizeProperty Field Value Type Description BindableProperty IconImageProperty Backing store for the Image bindable property. Declaration public static BindableProperty IconImageProperty Field Value Type Description BindableProperty IconTextProperty Backing store for IconText property Declaration public static readonly BindableProperty IconTextProperty Field Value Type Description BindableProperty ImageProperty OBSOLETE: Use IconImageProperty Declaration [Obsolete(\"Use IconImageProperty\")] public static BindableProperty ImageProperty Field Value Type Description BindableProperty LineBreakModeProperty The line break mode property. Declaration public static readonly BindableProperty LineBreakModeProperty Field Value Type Description BindableProperty LinesProperty The lines property. Declaration public static readonly BindableProperty LinesProperty Field Value Type Description BindableProperty MinFontSizeProperty The backing store for the minimum font size property. Declaration public static readonly BindableProperty MinFontSizeProperty Field Value Type Description BindableProperty OrientationProperty Backing store for the Button's orientation property. Declaration public static BindableProperty OrientationProperty Field Value Type Description BindableProperty OutlineColorProperty Backging store for the OutlineColor property Declaration public static readonly BindableProperty OutlineColorProperty Field Value Type Description BindableProperty OutlineRadiusProperty Backing store for the OutlineRadius bindable property. Declaration public static readonly BindableProperty OutlineRadiusProperty Field Value Type Description BindableProperty OutlineWidthProperty Backing store for the OutlineWidth bindable property. Declaration public static readonly BindableProperty OutlineWidthProperty Field Value Type Description BindableProperty ShadowInvertedProperty Backing store for the ShadowInverted bindable property. Declaration public static readonly BindableProperty ShadowInvertedProperty Field Value Type Description BindableProperty SpacingProperty Backing store for the spacing property. Declaration public static readonly BindableProperty SpacingProperty Field Value Type Description BindableProperty TextColorProperty Backing store for the FontColor bindable property. Declaration public static readonly BindableProperty TextColorProperty Field Value Type Description BindableProperty TextProperty Backing store for the Text bindable property. Declaration public static readonly BindableProperty TextProperty Field Value Type Description BindableProperty TintIconProperty Backing store for the TintIcon property Declaration public static readonly BindableProperty TintIconProperty Field Value Type Description BindableProperty TrailingIconProperty Backing store for the TrailiingImage property Declaration public static readonly BindableProperty TrailingIconProperty Field Value Type Description BindableProperty VerticalTextAlignmentProperty Backing store for the vertical alignment property. Declaration public static readonly BindableProperty VerticalTextAlignmentProperty Field Value Type Description BindableProperty Properties AutoFit Gets or sets the fit. Declaration public AutoFit AutoFit { get; set; } Property Value Type Description AutoFit The fit. BackgroundColor Gets or sets the color of the background. Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color The color of the background. BackgroundImage Gets or sets the background image. Declaration public Image BackgroundImage { get; set; } Property Value Type Description Image The background image. BorderColor Gets or sets the color of the border. Declaration public Color BorderColor { get; set; } Property Value Type Description Color The color of the border. BorderRadius Gets or sets the border radius. Declaration public float BorderRadius { get; set; } Property Value Type Description Single The border radius. BorderWidth Gets or sets the width of the border. Declaration public float BorderWidth { get; set; } Property Value Type Description Single The width of the border. ElementShape controls the shape of a Declaration public ElementShape ElementShape { get; set; } Property Value Type Description ElementShape FontAttributes Gets or sets the font attributes. Declaration public FontAttributes FontAttributes { get; set; } Property Value Type Description FontAttributes The font attributes. FontColor OBSOLETE: Use TextColor Declaration [Obsolete(\"Use TextColor\")] public Color FontColor { get; set; } Property Value Type Description Color FontFamily Gets or sets the font family. Declaration public string FontFamily { get; set; } Property Value Type Description String The font family. FontSize Gets or sets the size of the font. Declaration public double FontSize { get; set; } Property Value Type Description Double The size of the font. HasShadow Gets and sets if the button casts a shadow Declaration public bool HasShadow { get; set; } Property Value Type Description Boolean HasTightSpacing Gets or sets if the Icon/Image is close (TightSpacing) to text or at edge (not TightSpacing) of button. Declaration public bool HasTightSpacing { get; set; } Property Value Type Description Boolean true if has tight spacing; otherwise, false . HorizontalTextAlignment Gets or sets the alignment of the image and text. Declaration public TextAlignment HorizontalTextAlignment { get; set; } Property Value Type Description TextAlignment The alignment (left, center, right). HtmlText Gets or sets the formatted text. Declaration public string HtmlText { get; set; } Property Value Type Description String The formatted text. IconColor Overrides this icon color as provided by the Button's TextColor (if TintIcon=true), the default TextColor (if IconText != null), or the IconImage colors Declaration public Color IconColor { get; set; } Property Value Type Description Color IconFontFamily The font used to render the IconText Declaration public string IconFontFamily { get; set; } Property Value Type Description String IconFontSize controls value of .IconFontSize property Declaration public double IconFontSize { get; set; } Property Value Type Description Double IconImage Gets or sets the companion image. Declaration public Image IconImage { get; set; } Property Value Type Description Image The image. IconText Gets/Sets the IconText (Alternative to IconImage). Declaration public string IconText { get; set; } Property Value Type Description String Image OBSOLETE: Use IconImage Declaration [Obsolete(\"Use IconImage\")] public Image Image { get; set; } Property Value Type Description Image InstanceId returns instance index (starts at 0) Declaration public int InstanceId { get; set; } Property Value Type Description Int32 LineBreakMode Gets or sets the line break mode. Declaration public LineBreakMode LineBreakMode { get; set; } Property Value Type Description LineBreakMode The line break mode. Lines Gets or sets the lines. Declaration public int Lines { get; set; } Property Value Type Description Int32 The lines. MinFontSize Gets or sets the minimum size of the font allowed during an autofit. Declaration public double MinFontSize { get; set; } Property Value Type Description Double The minimum size of the font. Default=4 Orientation Gets or sets the orientation of the iamge and label. Declaration public StackOrientation Orientation { get; set; } Property Value Type Description StackOrientation The image and label orientation. OutlineColor Gets/sets the button's outline color Declaration public Color OutlineColor { get; set; } Property Value Type Description Color OutlineRadius Gets or sets the outline radius. Declaration public float OutlineRadius { get; set; } Property Value Type Description Single The outline radius. OutlineWidth Gets or sets the width of the outline. Declaration public float OutlineWidth { get; set; } Property Value Type Description Single The width of the outline. ShadowInverted Gets or sets a flag indicating if the Frame's shadow is inverted. This is a bindable property. Declaration public bool ShadowInverted { get; set; } Property Value Type Description Boolean true if this instance's shadow is inverted; otherwise, false . Spacing Gets or sets the spacing. Declaration public double Spacing { get; set; } Property Value Type Description Double The spacing. Text Gets or sets the text. Declaration public string Text { get; set; } Property Value Type Description String The text. TextColor Gets or sets the color of the font. Declaration public Color TextColor { get; set; } Property Value Type Description Color The color of the font. TintIcon Gets or sets if the button's Icon will be tinted with the TextColor Declaration public bool TintIcon { get; set; } Property Value Type Description Boolean TrailingIcon Gets or sets if the IconImage / IconText will be before or after the button's text Declaration public bool TrailingIcon { get; set; } Property Value Type Description Boolean VerticalTextAlignment Gets or sets the vertical alignment. Declaration public TextAlignment VerticalTextAlignment { get; set; } Property Value Type Description TextAlignment The vertical alignment. Methods OnPropertyChanged(String) Call this method from a child class to notify that a change happened on a property. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName The name of the property that changed. Overrides BindableObject.OnPropertyChanged(String) Operators Explicit(ButtonState to String) Declaration public static explicit operator string (ButtonState state) Parameters Type Name Description ButtonState state State. Returns Type Description String Explicit Interface Implementations ILabel.FittedFontSize Declaration double ILabel.FittedFontSize { get; } Returns Type Description Double ILabel.SynchronizedFontSize Declaration double ILabel.SynchronizedFontSize { get; set; } Returns Type Description Double Implements System.ComponentModel.INotifyPropertyChanged IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Extension Methods FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement)"
  },
  "api/Forms9Patch.Clipboard.html": {
    "href": "api/Forms9Patch.Clipboard.html",
    "title": "Class Clipboard | Forms9Patch",
    "keywords": "Class Clipboard Forms9Patch.Clipboard class Inheritance Object Clipboard Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class Clipboard Properties Entry Gets/Sets the current Entry on the clipboard Declaration public static IMimeItemCollection Entry { get; set; } Property Value Type Description IMimeItemCollection EntryCaching Turns of caching latest clipboard entry (for speed, of course). Mostly for test purposes. Declaration public static bool EntryCaching { get; set; } Property Value Type Description Boolean true if the latest clipboard entry is cached; otherwise, false . Events ContentChanged Event fired when the content on the clipboard has changed Declaration public static event EventHandler ContentChanged Event Type Type Description EventHandler"
  },
  "api/Forms9Patch.ColorExtension.html": {
    "href": "api/Forms9Patch.ColorExtension.html",
    "title": "Class ColorExtension | Forms9Patch",
    "keywords": "Class ColorExtension Color extension. Inheritance Object ColorExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class ColorExtension Methods ByteA(Color) Returns a Xamarin.Forms.Color's alpha (opacity) value in byte form Declaration public static byte ByteA(this Color color) Parameters Type Name Description Color color Returns Type Description Byte ByteB(Color) Returns a Xamarin.Forms.Color's blue value in byte form Declaration public static byte ByteB(this Color color) Parameters Type Name Description Color color Returns Type Description Byte ByteG(Color) Returns a Xamarin.Forms.Color's green value in byte form Declaration public static byte ByteG(this Color color) Parameters Type Name Description Color color Returns Type Description Byte ByteR(Color) Returns a Xamarin.Forms.Color's red value in byte form Declaration public static byte ByteR(this Color color) Parameters Type Name Description Color color Returns Type Description Byte IsDefault(Color) Tests if the color is one of the default values Declaration public static bool IsDefault(this Color c) Parameters Type Name Description Color c Returns Type Description Boolean IsDefaultOrTransparent(Color) Tests if the color is a default or is transparent Declaration public static bool IsDefaultOrTransparent(this Color c) Parameters Type Name Description Color c Returns Type Description Boolean RgbaBlend(Color, Color, Double) Interpolates between two colors Declaration public static Color RgbaBlend(this Color c1, Color c2, double percent) Parameters Type Name Description Color c1 Color c2 Double percent Returns Type Description Color RgbHybridBlend(Color, Color, Double) Interpolates between two colors - keeping the Alpha of the first (unless it's transparent ... then its white with alpha 0); Declaration public static Color RgbHybridBlend(this Color c, Color c2, double percent) Parameters Type Name Description Color c C. Color c2 C2. Double percent Percent. Returns Type Description Color The blend. ToColor(String) Takes a color string, typical of an HTML tag's color attribute, and coverts it to a Xamarin.Forms color. Declaration public static Color ToColor(this string s) Parameters Type Name Description String s the color string Returns Type Description Color The color. ToHexArgbColorString(Color) Returns a 4 character hexadecimal string of a color's ARGB value Declaration public static string ToHexArgbColorString(this Color color) Parameters Type Name Description Color color Color. Returns Type Description String The hex rgb color string. ToHexRgbColorString(Color) Returns a 3 character hexadecimal string of a color's RGB value Declaration public static string ToHexRgbColorString(this Color color) Parameters Type Name Description Color color Color. Returns Type Description String The hex rgb color string. ToHexRrggbbColorString(Color) Returns a 6 character hexadecimal string of a color's RRGGBB value Declaration public static string ToHexRrggbbColorString(this Color color) Parameters Type Name Description Color color Color. Returns Type Description String The hex rgb color string. ToHextAarrggbbColorString(Color) Returns a 8 character hexadecimal string of a color's AARRGGBB value Declaration public static string ToHextAarrggbbColorString(this Color color) Parameters Type Name Description Color color Color. Returns Type Description String The hex rgb color string. ToIntRgbaColorString(Color) Returns a sring with comma separated, 0-255, integer values for color's RGBA Declaration public static string ToIntRgbaColorString(this Color color) Parameters Type Name Description Color color Returns Type Description String ToIntRgbColorString(Color) Returns a string with comma separated, 0-255, integer values for color's RGB Declaration public static string ToIntRgbColorString(this Color color) Parameters Type Name Description Color color Color. Returns Type Description String The int rgb color string. ToRgbaColorString(Color) Returns a string with comma separated, 0-255, integer values for color's RGBA Declaration public static string ToRgbaColorString(this Color color) Parameters Type Name Description Color color Color. Returns Type Description String The int rgb color string. WithAlpha(Color, Double) Withs the alpha. Declaration public static Color WithAlpha(this Color c, double alpha) Parameters Type Name Description Color c C. Double alpha Alpha. Returns Type Description Color The alpha."
  },
  "api/Forms9Patch.ColorGradientBox.html": {
    "href": "api/Forms9Patch.ColorGradientBox.html",
    "title": "Class ColorGradientBox | Forms9Patch",
    "keywords": "Class ColorGradientBox Box view with a color gradient fill. Don't count on this element sticking around for too long. Inheritance Object BindableObject Element NavigableElement VisualElement View ColorGradientBox Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers Inherited Members View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.OnBindingContextChanged() View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildRemoved(Element) VisualElement.OnChildRemoved(Element, Int32) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.OnSizeAllocated(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.OnPropertyChanged(String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class ColorGradientBox : View, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers Fields EndColorProperty The end color property. Declaration public static readonly BindableProperty EndColorProperty Field Value Type Description BindableProperty OrientationProperty The orientation property. Declaration public static readonly BindableProperty OrientationProperty Field Value Type Description BindableProperty StartColorProperty The start color property. Declaration public static readonly BindableProperty StartColorProperty Field Value Type Description BindableProperty Properties EndColor Gets or sets the end color. Declaration public Color EndColor { get; set; } Property Value Type Description Color The end color. Orientation Gets or sets the orientation. Declaration public StackOrientation Orientation { get; set; } Property Value Type Description StackOrientation The orientation. StartColor Gets or sets the start color. Declaration public Color StartColor { get; set; } Property Value Type Description Color The start color. Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.ContentView.html": {
    "href": "api/Forms9Patch.ContentView.html",
    "title": "Class ContentView | Forms9Patch",
    "keywords": "Class ContentView Forms9Patch ContentView. Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView ContentView Frame Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers ILayout ILayoutController ILayout IBackground IShape IElement IDisposable Inherited Members ContentView.OnBindingContextChanged() TemplatedView.ControlTemplateProperty TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class ContentView : ContentView, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated, ILayout, IBackground, IShape, IElement, IDisposable Constructors ContentView() Initializes a new instance of the ContentView class. Forms9Patch.ContentView is same as Forms9Patch.Frame - but with different default values. Declaration public ContentView() Fields _f9pId INTERNAL USE ONLY Declaration protected readonly int _f9pId Field Value Type Description Int32 _fallbackBackgroundImage INTERNAL USE ONLY Declaration protected readonly Image _fallbackBackgroundImage Field Value Type Description Image BackgroundColorProperty Backing store for the background color property. Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty BackgroundImageProperty Backing store for the background image property. Declaration public static readonly BindableProperty BackgroundImageProperty Field Value Type Description BindableProperty BorderColorProperty The boarder color property. Declaration public static readonly BindableProperty BorderColorProperty Field Value Type Description BindableProperty BorderRadiusProperty The boarder radius property. Declaration public static readonly BindableProperty BorderRadiusProperty Field Value Type Description BindableProperty BorderWidthProperty The boarder width property. Declaration public static readonly BindableProperty BorderWidthProperty Field Value Type Description BindableProperty ContentProperty Backing store key for Content Declaration public static readonly BindableProperty ContentProperty Field Value Type Description BindableProperty ElementShapeProperty Backing store for the element shape property. Declaration public static readonly BindableProperty ElementShapeProperty Field Value Type Description BindableProperty HasShadowProperty Backing store for the has shadow property. Declaration public static readonly BindableProperty HasShadowProperty Field Value Type Description BindableProperty IgnoreChildrenProperty Backing store for the ignore children property. Declaration public static readonly BindableProperty IgnoreChildrenProperty Field Value Type Description BindableProperty LimitMinSizeToBackgroundImageSizeProperty Backing store for the limit minimum size to background image size property. Declaration public static readonly BindableProperty LimitMinSizeToBackgroundImageSizeProperty Field Value Type Description BindableProperty OutlineColorProperty Backing store for the outline color property. Declaration public static readonly BindableProperty OutlineColorProperty Field Value Type Description BindableProperty OutlineRadiusProperty Backing store for the outline radius property. Declaration public static readonly BindableProperty OutlineRadiusProperty Field Value Type Description BindableProperty OutlineWidthProperty Backing store for the outline width property. Declaration public static readonly BindableProperty OutlineWidthProperty Field Value Type Description BindableProperty ShadowInvertedProperty Backing store for the shadow inverted property. Declaration public static readonly BindableProperty ShadowInvertedProperty Field Value Type Description BindableProperty Properties BackgroundColor Gets or sets the color of the background. Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color The color of the background. BackgroundImage Gets or sets the background image. Declaration public Image BackgroundImage { get; set; } Property Value Type Description Image The background image. BaseInternalChildren INTERNAL USE ONLY Declaration protected ObservableCollection<Element> BaseInternalChildren { get; } Property Value Type Description ObservableCollection < Element > BorderColor Gets or sets the color of the boarder. Declaration public Color BorderColor { get; set; } Property Value Type Description Color The color of the boarder. BorderRadius Gets or sets the boarder radius. Declaration public float BorderRadius { get; set; } Property Value Type Description Single The boarder radius. BorderWidth Gets or sets the width of the boarder. Declaration public float BorderWidth { get; set; } Property Value Type Description Single The width of the boarder. Content Content of Layout Declaration public View Content { get; set; } Property Value Type Description View CurrentBackgroundImage INTERNAL USE ONLY Declaration protected Image CurrentBackgroundImage { get; } Property Value Type Description Image ElementShape Gets or sets the element shape. Declaration public ElementShape ElementShape { get; set; } Property Value Type Description ElementShape The element shape. HasShadow Gets or sets a value indicating whether this ContentView has a shadow. Declaration public bool HasShadow { get; set; } Property Value Type Description Boolean true if has shadow; otherwise, false . IgnoreChildren Gets or sets a value indicating whether this ContentView ignore children. Declaration public bool IgnoreChildren { get; set; } Property Value Type Description Boolean true if ignore children; otherwise, false . InstanceId INTERNAL USE ONLY Declaration public int InstanceId { get; } Property Value Type Description Int32 LimitMinSizeToBackgroundImageSize Gets or sets a value indicating whether this ContentView will limit its minimum size to background image size. Declaration public bool LimitMinSizeToBackgroundImageSize { get; set; } Property Value Type Description Boolean true if limit minimum size to background image size; otherwise, false . OutlineColor Gets or sets the color of the outline. Declaration public Color OutlineColor { get; set; } Property Value Type Description Color The color of the outline. OutlineRadius Gets or sets the outline radius. Declaration public float OutlineRadius { get; set; } Property Value Type Description Single The outline radius. OutlineWidth Gets or sets the width of the outline. Declaration public float OutlineWidth { get; set; } Property Value Type Description Single The width of the outline. ShadowInverted Gets or sets a value indicating whether the shadow is inverted for this ContentView . Declaration public bool ShadowInverted { get; set; } Property Value Type Description Boolean true if shadow inverted; otherwise, false . Methods Description() Returns a String that describes the current Frame . Declaration public string Description() Returns Type Description String A String that describes the current Frame . Dispose() Disposed the layout and its contents Declaration public void Dispose() Dispose(Boolean) Dispose the layout and its contents Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing LayoutChildren(Double, Double, Double, Double) Layout out children of this element Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description Double x Double y Double width Double height Overrides TemplatedView.LayoutChildren(Double, Double, Double, Double) OnChildMeasureInvalidated() Ons the child measure invalidated. Declaration protected override void OnChildMeasureInvalidated() Overrides Layout.OnChildMeasureInvalidated() OnPropertyChanged(String) Called when a property has changed Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Overrides Element.OnPropertyChanged(String) OnSizeRequest(Double, Double) Called when Xamarin.Forms requests size of this element Declaration protected override SizeRequest OnSizeRequest(double widthConstraint, double heightConstraint) Parameters Type Name Description Double widthConstraint Double heightConstraint Returns Type Description SizeRequest Overrides TemplatedView.OnSizeRequest(Double, Double) ShouldInvalidateOnChildAdded(View) Shoulds the invalidate on child added. Declaration protected override bool ShouldInvalidateOnChildAdded(View child) Parameters Type Name Description View child Child. Returns Type Description Boolean true , if invalidate on child added was shoulded, false otherwise. Overrides Layout.ShouldInvalidateOnChildAdded(View) ShouldInvalidateOnChildRemoved(View) Shoulds the invalidate on child removed. Declaration protected override bool ShouldInvalidateOnChildRemoved(View child) Parameters Type Name Description View child Child. Returns Type Description Boolean true , if invalidate on child removed was shoulded, false otherwise. Overrides Layout.ShouldInvalidateOnChildRemoved(View) ToString() Returns a String that describes the current Frame . Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController ILayout IBackground IShape IElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.DataTemplateSelector.html": {
    "href": "api/Forms9Patch.DataTemplateSelector.html",
    "title": "Class DataTemplateSelector | Forms9Patch",
    "keywords": "Class DataTemplateSelector The Forms9Patch Data template selector. Inheritance Object ElementTemplate DataTemplate DataTemplateSelector TemplateSelectorBase DataTemplateSelector Inherited Members TemplateSelectorBase._cellTemplates TemplateSelectorBase.RemoveFactoryDefaults() TemplateSelectorBase.Clear() TemplateSelectorBase.OnSelectTemplate(Object, BindableObject) DataTemplateSelector.SelectTemplate(Object, BindableObject) DataTemplate.SetBinding(BindableProperty, BindingBase) DataTemplate.SetValue(BindableProperty, Object) DataTemplate.Bindings DataTemplate.Values ElementTemplate.CreateContent() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class DataTemplateSelector : TemplateSelectorBase, IElement, IDataTemplate, IDataTemplateController Constructors DataTemplateSelector() Initializes a new instance of the DataTemplateSelector class. Declaration public DataTemplateSelector() Methods Add(Type, Type) Add the specified itemBaseType and viewType. Declaration public void Add(Type itemBaseType, Type viewType) Parameters Type Name Description Type itemBaseType Item base type. Type viewType View type."
  },
  "api/Forms9Patch.Debug.html": {
    "href": "api/Forms9Patch.Debug.html",
    "title": "Class Debug | Forms9Patch",
    "keywords": "Class Debug Class with helper methods intended to ask for user assistance in debugging application using Forms9Patch Inheritance Object Debug Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class Debug Fields IsRequestUserHelpEnabled Enable ability to email user for help when unusual crash is encountered Declaration public static bool IsRequestUserHelpEnabled Field Value Type Description Boolean RequestUserHelpEmailToAddress Email address to which to send requests Declaration public static string RequestUserHelpEmailToAddress Field Value Type Description String RequestUserHelpMissiveMessage Body of PermissionPopup presented to user where \"YES\" would send an email asking for help with bug Declaration public static string RequestUserHelpMissiveMessage Field Value Type Description String RequestUserHelpMissiveTitle Title of PermissionPopup presented to user where \"YES\" would send an email asking for help with bug Declaration public static string RequestUserHelpMissiveTitle Field Value Type Description String Methods RequestUserHelp(Exception, String, String, Int32, String) Used internally to communicate with user when perplexing exception is triggered; Declaration public static Task RequestUserHelp(Exception e, string additionalInfo = null, string path = null, int lineNumber = -1, string methodName = null) Parameters Type Name Description Exception e Exception thrown that prompted request for help String additionalInfo Any additional info you would like shared with you String path Path to file where this request was called Int32 lineNumber Linenumber of where this request was called String methodName Name of method from which this request was called Returns Type Description Task"
  },
  "api/Forms9Patch.Display.html": {
    "href": "api/Forms9Patch.Display.html",
    "title": "Class Display | Forms9Patch",
    "keywords": "Class Display Provides characteristics of the display in which the app is presented Inheritance Object Display Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class Display Properties Height The hieght (pixels) of the screen Declaration public static float Height { get; } Property Value Type Description Single screen height (pixels) IsLandscape Gets a value indicating whether this Display is landscape. Declaration public static bool IsLandscape { get; } Property Value Type Description Boolean true if is landscape; otherwise, false . IsPortrait Gets a value indicating whether this Display is portrait. Declaration public static bool IsPortrait { get; } Property Value Type Description Boolean true if is portrait; otherwise, false . Orientation Gets the orientation. Declaration public static DisplayOrientation Orientation { get; } Property Value Type Description DisplayOrientation The orientation. SafeAreaInset Gets or sets the safe area inset (I'm looking at you, iPhone X). Declaration public static Thickness SafeAreaInset { get; } Property Value Type Description Thickness The safe area inset. Scale The scale (relative to 160 dpi) of the screen Declaration public static float Scale { get; } Property Value Type Description Single screen scale (1x=160dpi) StatusBarOffset Gets the status bar offset - the offset needed for MainPage to be in the right place at app start. Declaration public static double StatusBarOffset { get; } Property Value Type Description Double The status bar offset. Width The width (pixels) of the screen Declaration public static float Width { get; } Property Value Type Description Single screen width (pixels)"
  },
  "api/Forms9Patch.EffectMode.html": {
    "href": "api/Forms9Patch.EffectMode.html",
    "title": "Enum EffectMode | Forms9Patch",
    "keywords": "Enum EffectMode Will a sound effect play? Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum EffectMode Fields Name Description Default Will play depending on the Forms9Patch setting Off Will not play On Will play"
  },
  "api/Forms9Patch.ElementExtensions.html": {
    "href": "api/Forms9Patch.ElementExtensions.html",
    "title": "Class ElementExtensions | Forms9Patch",
    "keywords": "Class ElementExtensions Visual element extensions. Inheritance Object ElementExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class ElementExtensions Methods Ancestor<T>(Element) Finds Ancestor element of the given type Declaration public static T Ancestor<T>(this Element element) where T : Element Parameters Type Name Description Element element Returns Type Description T Type Parameters Name Description T AncestorOfBaseType<T>(Element) Fine an ancestor of this element of a type that is inherited from T Declaration public static T AncestorOfBaseType<T>(this Element element) where T : Element Parameters Type Name Description Element element Returns Type Description T Type Parameters Name Description T GetRenderer(VisualElement) Returns platform renderer for VisualElement (or null) Declaration public static object GetRenderer(this VisualElement element) Parameters Type Name Description VisualElement element Returns Type Description Object HasRenderer(VisualElement) Tests if VisualElement has a Xamarin.Forms platform renderer attached Declaration public static bool HasRenderer(this VisualElement element) Parameters Type Name Description VisualElement element Returns Type Description Boolean IsInNativeLayout(VisualElement) Declaration public static bool IsInNativeLayout(this VisualElement e) Parameters Type Name Description VisualElement e Returns Type Description Boolean SetIsInNativeLayout(VisualElement, Boolean) Declaration public static void SetIsInNativeLayout(this VisualElement e, bool value) Parameters Type Name Description VisualElement e Boolean value"
  },
  "api/Forms9Patch.Elements.Popups.Core.AllPagesPoppedEventArgs.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.AllPagesPoppedEventArgs.html",
    "title": "Class AllPagesPoppedEventArgs | Forms9Patch",
    "keywords": "Class AllPagesPoppedEventArgs Event arguments when all popups are popped Inheritance Object EventArgs AllPagesPoppedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch.Elements.Popups.Core Assembly : Forms9Patch.dll Syntax public class AllPagesPoppedEventArgs : EventArgs Constructors AllPagesPoppedEventArgs(IEnumerable<Page>) Constructor Declaration public AllPagesPoppedEventArgs(IEnumerable<Page> poppedPages) Parameters Type Name Description IEnumerable < Page > poppedPages Properties PoppedPages Popped popups Declaration public IEnumerable<Page> PoppedPages { get; } Property Value Type Description IEnumerable < Page >"
  },
  "api/Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.html",
    "title": "Class BaseAnimation | Forms9Patch",
    "keywords": "Class BaseAnimation Base class of Popup Animations Inheritance Object BaseAnimation FadeBackgroundAnimation FadeAnimation Implements IPopupAnimation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch.Elements.Popups.Core.Animations.Base Assembly : Forms9Patch.dll Syntax public abstract class BaseAnimation : IPopupAnimation Properties DurationIn Duration of appearing animation Declaration [TypeConverter(typeof(UintTypeConverter))] public uint DurationIn { get; set; } Property Value Type Description UInt32 DurationOut Duration of disappearing animation Declaration [TypeConverter(typeof(UintTypeConverter))] public uint DurationOut { get; set; } Property Value Type Description UInt32 EasingIn Motion profile for appearing animation Declaration [TypeConverter(typeof(EasingTypeConverter))] public Easing EasingIn { get; set; } Property Value Type Description Easing EasingOut Motion profile for disappearing animation Declaration [TypeConverter(typeof(EasingTypeConverter))] public Easing EasingOut { get; set; } Property Value Type Description Easing Methods Appearing(View, PopupPage) Called when animating the popup's appearance Declaration public abstract Task Appearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Disappearing(View, PopupPage) Called when animating the popup's disappearance Declaration public abstract Task Disappearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Disposing(View, PopupPage) Called after the Popup disappears Declaration public abstract void Disposing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page GetLeftOffset(View, Page) Called when calculating the left edge of the popup Declaration protected virtual int GetLeftOffset(View content, Page page) Parameters Type Name Description View content Page page Returns Type Description Int32 GetTopOffset(View, Page) Called when calculating the top edge of the popup Declaration protected virtual int GetTopOffset(View content, Page page) Parameters Type Name Description View content Page page Returns Type Description Int32 HidePage(Page) Use this method for avoiding the problem with blinking animation on iOS See https://github.com/rotorgames/Rg.Plugins.Popup/issues/404 Declaration protected virtual void HidePage(Page page) Parameters Type Name Description Page page Page. Preparing(View, PopupPage) Called before Popup appears Declaration public abstract void Preparing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page ShowPage(Page) Use this method for avoiding the problem with blinking animation on iOS See https://github.com/rotorgames/Rg.Plugins.Popup/issues/404 Declaration protected virtual void ShowPage(Page page) Parameters Type Name Description Page page Page. Implements IPopupAnimation"
  },
  "api/Forms9Patch.Elements.Popups.Core.Animations.Base.FadeBackgroundAnimation.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.Animations.Base.FadeBackgroundAnimation.html",
    "title": "Class FadeBackgroundAnimation | Forms9Patch",
    "keywords": "Class FadeBackgroundAnimation Animation to fade popup's background Inheritance Object BaseAnimation FadeBackgroundAnimation MoveAnimation Implements IPopupAnimation Inherited Members BaseAnimation.DurationIn BaseAnimation.DurationOut BaseAnimation.EasingIn BaseAnimation.EasingOut BaseAnimation.GetTopOffset(View, Page) BaseAnimation.GetLeftOffset(View, Page) BaseAnimation.HidePage(Page) BaseAnimation.ShowPage(Page) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch.Elements.Popups.Core.Animations.Base Assembly : Forms9Patch.dll Syntax public abstract class FadeBackgroundAnimation : BaseAnimation, IPopupAnimation Properties HasBackgroundAnimation Huh? Declaration public bool HasBackgroundAnimation { get; set; } Property Value Type Description Boolean Methods Appearing(View, PopupPage) Called when animating the popup's appearance Declaration public override Task Appearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Overrides BaseAnimation.Appearing(View, PopupPage) Disappearing(View, PopupPage) Called when animating the popup's disappearance Declaration public override Task Disappearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Overrides BaseAnimation.Disappearing(View, PopupPage) Disposing(View, PopupPage) Called after the Popup disappears Declaration public override void Disposing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Overrides BaseAnimation.Disposing(View, PopupPage) Preparing(View, PopupPage) Called before Popup appears Declaration public override void Preparing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Overrides BaseAnimation.Preparing(View, PopupPage) Implements IPopupAnimation"
  },
  "api/Forms9Patch.Elements.Popups.Core.Animations.Base.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.Animations.Base.html",
    "title": "Namespace Forms9Patch.Elements.Popups.Core.Animations.Base | Forms9Patch",
    "keywords": "Namespace Forms9Patch.Elements.Popups.Core.Animations.Base Classes BaseAnimation Base class of Popup Animations FadeBackgroundAnimation Animation to fade popup's background"
  },
  "api/Forms9Patch.Elements.Popups.Core.Animations.FadeAnimation.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.Animations.FadeAnimation.html",
    "title": "Class FadeAnimation | Forms9Patch",
    "keywords": "Class FadeAnimation Popup fade animation Inheritance Object BaseAnimation FadeAnimation ScaleAnimation Implements IPopupAnimation Inherited Members BaseAnimation.DurationIn BaseAnimation.DurationOut BaseAnimation.EasingIn BaseAnimation.EasingOut BaseAnimation.GetTopOffset(View, Page) BaseAnimation.GetLeftOffset(View, Page) BaseAnimation.HidePage(Page) BaseAnimation.ShowPage(Page) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch.Elements.Popups.Core.Animations Assembly : Forms9Patch.dll Syntax public class FadeAnimation : BaseAnimation, IPopupAnimation Properties HasBackgroundAnimation Huh? Declaration public bool HasBackgroundAnimation { get; set; } Property Value Type Description Boolean Methods Appearing(View, PopupPage) Called when animating the popup's appearance Declaration public override Task Appearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Overrides BaseAnimation.Appearing(View, PopupPage) Disappearing(View, PopupPage) Called when animating the popup's disappearance Declaration public override Task Disappearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Overrides BaseAnimation.Disappearing(View, PopupPage) Disposing(View, PopupPage) Called after the Popup disappears Declaration public override void Disposing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Overrides BaseAnimation.Disposing(View, PopupPage) Preparing(View, PopupPage) Called before Popup appears Declaration public override void Preparing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Overrides BaseAnimation.Preparing(View, PopupPage) Implements IPopupAnimation"
  },
  "api/Forms9Patch.Elements.Popups.Core.Animations.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.Animations.html",
    "title": "Namespace Forms9Patch.Elements.Popups.Core.Animations | Forms9Patch",
    "keywords": "Namespace Forms9Patch.Elements.Popups.Core.Animations Classes FadeAnimation Popup fade animation MoveAnimation Used for sweep animation of popups ScaleAnimation Popup scale animation"
  },
  "api/Forms9Patch.Elements.Popups.Core.Animations.MoveAnimation.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.Animations.MoveAnimation.html",
    "title": "Class MoveAnimation | Forms9Patch",
    "keywords": "Class MoveAnimation Used for sweep animation of popups Inheritance Object BaseAnimation FadeBackgroundAnimation MoveAnimation Implements IPopupAnimation Inherited Members FadeBackgroundAnimation.HasBackgroundAnimation BaseAnimation.DurationIn BaseAnimation.DurationOut BaseAnimation.EasingIn BaseAnimation.EasingOut BaseAnimation.GetTopOffset(View, Page) BaseAnimation.GetLeftOffset(View, Page) BaseAnimation.HidePage(Page) BaseAnimation.ShowPage(Page) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch.Elements.Popups.Core.Animations Assembly : Forms9Patch.dll Syntax public class MoveAnimation : FadeBackgroundAnimation, IPopupAnimation Constructors MoveAnimation() The move animation for popups Declaration public MoveAnimation() MoveAnimation(MoveAnimationOptions, MoveAnimationOptions) The move animation for popups Declaration public MoveAnimation(MoveAnimationOptions positionIn, MoveAnimationOptions positionOut) Parameters Type Name Description MoveAnimationOptions positionIn MoveAnimationOptions positionOut Properties PositionIn Start position for appearing Declaration public MoveAnimationOptions PositionIn { get; set; } Property Value Type Description MoveAnimationOptions PositionOut End position for disappearing Declaration public MoveAnimationOptions PositionOut { get; set; } Property Value Type Description MoveAnimationOptions Methods Appearing(View, PopupPage) Called when animating the popup's appearance Declaration public override Task Appearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Overrides FadeBackgroundAnimation.Appearing(View, PopupPage) Disappearing(View, PopupPage) Called when animating the popup's disappearance Declaration public override Task Disappearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Overrides FadeBackgroundAnimation.Disappearing(View, PopupPage) Disposing(View, PopupPage) Called after the Popup disappears Declaration public override void Disposing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Overrides FadeBackgroundAnimation.Disposing(View, PopupPage) Preparing(View, PopupPage) Called before Popup appears Declaration public override void Preparing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Overrides FadeBackgroundAnimation.Preparing(View, PopupPage) Implements IPopupAnimation"
  },
  "api/Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.html",
    "title": "Class ScaleAnimation | Forms9Patch",
    "keywords": "Class ScaleAnimation Popup scale animation Inheritance Object BaseAnimation FadeAnimation ScaleAnimation Implements IPopupAnimation Inherited Members FadeAnimation.HasBackgroundAnimation BaseAnimation.DurationIn BaseAnimation.DurationOut BaseAnimation.EasingIn BaseAnimation.EasingOut BaseAnimation.GetTopOffset(View, Page) BaseAnimation.GetLeftOffset(View, Page) BaseAnimation.HidePage(Page) BaseAnimation.ShowPage(Page) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch.Elements.Popups.Core.Animations Assembly : Forms9Patch.dll Syntax public class ScaleAnimation : FadeAnimation, IPopupAnimation Constructors ScaleAnimation() Popup scale animation Declaration public ScaleAnimation() ScaleAnimation(MoveAnimationOptions, MoveAnimationOptions) Popup scale animation Declaration public ScaleAnimation(MoveAnimationOptions positionIn, MoveAnimationOptions positionOut) Parameters Type Name Description MoveAnimationOptions positionIn MoveAnimationOptions positionOut Properties PositionIn Position at beginning of appearing Declaration public MoveAnimationOptions PositionIn { get; set; } Property Value Type Description MoveAnimationOptions PositionOut Position at end of disappearing Declaration public MoveAnimationOptions PositionOut { get; set; } Property Value Type Description MoveAnimationOptions ScaleIn Scale at beginning of appearing Declaration public double ScaleIn { get; set; } Property Value Type Description Double ScaleOut Scale at end of disappearing Declaration public double ScaleOut { get; set; } Property Value Type Description Double Methods Appearing(View, PopupPage) Called when animating the popup's appearance Declaration public override Task Appearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Overrides FadeAnimation.Appearing(View, PopupPage) Disappearing(View, PopupPage) Called when animating the popup's disappearance Declaration public override Task Disappearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Overrides FadeAnimation.Disappearing(View, PopupPage) Disposing(View, PopupPage) Called after the Popup disappears Declaration public override void Disposing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Overrides FadeAnimation.Disposing(View, PopupPage) Preparing(View, PopupPage) Called before Popup appears Declaration public override void Preparing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Overrides FadeAnimation.Preparing(View, PopupPage) Implements IPopupAnimation"
  },
  "api/Forms9Patch.Elements.Popups.Core.Converters.TypeConverters.EasingTypeConverter.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.Converters.TypeConverters.EasingTypeConverter.html",
    "title": "Class EasingTypeConverter | Forms9Patch",
    "keywords": "Class EasingTypeConverter Popup type converter Inheritance Object TypeConverter EasingTypeConverter Inherited Members TypeConverter.CanConvertFrom(Type) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch.Elements.Popups.Core.Converters.TypeConverters Assembly : Forms9Patch.dll Syntax public class EasingTypeConverter : TypeConverter Methods ConvertFromInvariantString(String) String to Easing Type Declaration public override object ConvertFromInvariantString(string value) Parameters Type Name Description String value Returns Type Description Object Overrides TypeConverter.ConvertFromInvariantString(String)"
  },
  "api/Forms9Patch.Elements.Popups.Core.Converters.TypeConverters.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.Converters.TypeConverters.html",
    "title": "Namespace Forms9Patch.Elements.Popups.Core.Converters.TypeConverters | Forms9Patch",
    "keywords": "Namespace Forms9Patch.Elements.Popups.Core.Converters.TypeConverters Classes EasingTypeConverter Popup type converter UintTypeConverter Popup unit type converter"
  },
  "api/Forms9Patch.Elements.Popups.Core.Converters.TypeConverters.UintTypeConverter.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.Converters.TypeConverters.UintTypeConverter.html",
    "title": "Class UintTypeConverter | Forms9Patch",
    "keywords": "Class UintTypeConverter Popup unit type converter Inheritance Object TypeConverter UintTypeConverter Inherited Members TypeConverter.CanConvertFrom(Type) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch.Elements.Popups.Core.Converters.TypeConverters Assembly : Forms9Patch.dll Syntax public class UintTypeConverter : TypeConverter Methods ConvertFromInvariantString(String) String to unit type converter Declaration public override object ConvertFromInvariantString(string value) Parameters Type Name Description String value Returns Type Description Object Overrides TypeConverter.ConvertFromInvariantString(String)"
  },
  "api/Forms9Patch.Elements.Popups.Core.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.html",
    "title": "Namespace Forms9Patch.Elements.Popups.Core | Forms9Patch",
    "keywords": "Namespace Forms9Patch.Elements.Popups.Core Classes AllPagesPoppedEventArgs Event arguments when all popups are popped NavigationExtension Navigation extensions PopupNavigation Popup navigation manager PopupPage Foundation for Popups Interfaces IPopupAnimation Popup animation interface IPopupNavigation Popup navigation interface Enums MoveAnimationOptions Options for move animations PaddingSide Determines side of popup to which padding applies"
  },
  "api/Forms9Patch.Elements.Popups.Core.IPopupAnimation.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.IPopupAnimation.html",
    "title": "Interface IPopupAnimation | Forms9Patch",
    "keywords": "Interface IPopupAnimation Popup animation interface Namespace : Forms9Patch.Elements.Popups.Core Assembly : Forms9Patch.dll Syntax public interface IPopupAnimation Methods Appearing(View, PopupPage) Called when animating the popup's appearance Declaration Task Appearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Disappearing(View, PopupPage) Called when animating the popup's disappearance Declaration Task Disappearing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Returns Type Description Task Disposing(View, PopupPage) Called after the Popup disappears Declaration void Disposing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page Preparing(View, PopupPage) Called before Popup appears Declaration void Preparing(View content, PopupPage page) Parameters Type Name Description View content PopupPage page"
  },
  "api/Forms9Patch.Elements.Popups.Core.IPopupNavigation.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.IPopupNavigation.html",
    "title": "Interface IPopupNavigation | Forms9Patch",
    "keywords": "Interface IPopupNavigation Popup navigation interface Namespace : Forms9Patch.Elements.Popups.Core Assembly : Forms9Patch.dll Syntax public interface IPopupNavigation Properties PopupStack The stack of popups Declaration IReadOnlyList<PopupPage> PopupStack { get; } Property Value Type Description IReadOnlyList < PopupPage > Methods PopAllAsync(Boolean) Clear all popups Declaration Task PopAllAsync(bool animate = true) Parameters Type Name Description Boolean animate Returns Type Description Task PopAsync(Boolean) Remove popup from stack Declaration Task PopAsync(bool animate = true) Parameters Type Name Description Boolean animate Returns Type Description Task PushAsync(PopupPage, Boolean) Add popup to stack Declaration Task PushAsync(PopupPage page, bool animate = true) Parameters Type Name Description PopupPage page Boolean animate Returns Type Description Task RemovePageAsync(PopupPage, Boolean) Remove a particular page from stack Declaration Task RemovePageAsync(PopupPage page, bool animate = true) Parameters Type Name Description PopupPage page Boolean animate Returns Type Description Task Events Popped Triggered when a popup is popped Declaration event EventHandler<NavigationEventArgs> Popped Event Type Type Description EventHandler < NavigationEventArgs > PoppedAll Triggered when all popups are popped Declaration event EventHandler<AllPagesPoppedEventArgs> PoppedAll Event Type Type Description EventHandler < AllPagesPoppedEventArgs > Pushed Triggered when a popup is pushed Declaration event EventHandler<NavigationEventArgs> Pushed Event Type Type Description EventHandler < NavigationEventArgs >"
  },
  "api/Forms9Patch.Elements.Popups.Core.MoveAnimationOptions.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.MoveAnimationOptions.html",
    "title": "Enum MoveAnimationOptions | Forms9Patch",
    "keywords": "Enum MoveAnimationOptions Options for move animations Namespace : Forms9Patch.Elements.Popups.Core Assembly : Forms9Patch.dll Syntax public enum MoveAnimationOptions Fields Name Description Bottom Animate Bottom Center Animate Center Left Animate Left Right Animate Right Top Animate Top"
  },
  "api/Forms9Patch.Elements.Popups.Core.NavigationExtension.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.NavigationExtension.html",
    "title": "Class NavigationExtension | Forms9Patch",
    "keywords": "Class NavigationExtension Navigation extensions Inheritance Object NavigationExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch.Elements.Popups.Core Assembly : Forms9Patch.dll Syntax public static class NavigationExtension Methods PopAllPopupAsync(INavigation, Boolean) Remove all popups Declaration public static Task PopAllPopupAsync(this INavigation sender, bool animate = true) Parameters Type Name Description INavigation sender Boolean animate Returns Type Description Task PopPopupAsync(INavigation, Boolean) Remove popup Declaration public static Task PopPopupAsync(this INavigation sender, bool animate = true) Parameters Type Name Description INavigation sender Boolean animate Returns Type Description Task PushPopupAsync(INavigation, PopupPage, Boolean) Display popup Declaration public static Task PushPopupAsync(this INavigation sender, PopupPage page, bool animate = true) Parameters Type Name Description INavigation sender PopupPage page Boolean animate Returns Type Description Task RemovePopupPageAsync(INavigation, PopupPage, Boolean) Remove a particular popup Declaration public static Task RemovePopupPageAsync(this INavigation sender, PopupPage page, bool animate = true) Parameters Type Name Description INavigation sender PopupPage page Boolean animate Returns Type Description Task"
  },
  "api/Forms9Patch.Elements.Popups.Core.PaddingSide.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.PaddingSide.html",
    "title": "Enum PaddingSide | Forms9Patch",
    "keywords": "Enum PaddingSide Determines side of popup to which padding applies Namespace : Forms9Patch.Elements.Popups.Core Assembly : Forms9Patch.dll Syntax [Flags] public enum PaddingSide Fields Name Description All All sides Bottom Bottom Horizontal Horizontal Left Left Right Right Top Top Vertical Vertical"
  },
  "api/Forms9Patch.Elements.Popups.Core.PopupNavigation.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.PopupNavigation.html",
    "title": "Class PopupNavigation | Forms9Patch",
    "keywords": "Class PopupNavigation Popup navigation manager Inheritance Object PopupNavigation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch.Elements.Popups.Core Assembly : Forms9Patch.dll Syntax public static class PopupNavigation Properties Instance Singleton Declaration public static IPopupNavigation Instance { get; } Property Value Type Description IPopupNavigation PopupStack The stack Declaration public static IReadOnlyList<PopupPage> PopupStack { get; } Property Value Type Description IReadOnlyList < PopupPage > Methods PopAllAsync(Boolean) Remove all popups Declaration public static Task PopAllAsync(bool animate = true) Parameters Type Name Description Boolean animate Returns Type Description Task PopAsync(Boolean) Remove a popup Declaration public static Task PopAsync(bool animate = true) Parameters Type Name Description Boolean animate Returns Type Description Task PushAsync(PopupPage, Boolean) Display a popup Declaration public static Task PushAsync(PopupPage page, bool animate = true) Parameters Type Name Description PopupPage page Boolean animate Returns Type Description Task RemovePageAsync(PopupPage, Boolean) Remove a particular popup Declaration public static Task RemovePageAsync(PopupPage page, bool animate = true) Parameters Type Name Description PopupPage page Boolean animate Returns Type Description Task"
  },
  "api/Forms9Patch.Elements.Popups.Core.PopupPage.html": {
    "href": "api/Forms9Patch.Elements.Popups.Core.PopupPage.html",
    "title": "Class PopupPage | Forms9Patch",
    "keywords": "Class PopupPage Foundation for Popups Inheritance Object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage PopupPage Implements INotifyPropertyChanged IAnimatable ITabStopElement ILayout IPageController IVisualElementController IElementController IElementConfiguration < Page > Inherited Members ContentPage.ContentProperty ContentPage.OnBindingContextChanged() ContentPage.Content TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element) TemplatedPage.OnChildRemoved(Element, Int32) TemplatedPage.GetTemplateChild(String) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(String, String, String, String[]) Page.DisplayAlert(String, String, String) Page.DisplayAlert(String, String, String, String) Page.DisplayPromptAsync(String, String, String, String, String, Int32, Keyboard, String) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnAppearing() Page.OnChildMeasureInvalidated(Object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(Double, Double) Page.UpdateChildrenLayout() Page.On<T>() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.LayoutChanged Page.Appearing Page.Disappearing VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch.Elements.Popups.Core Assembly : Forms9Patch.dll Syntax public class PopupPage : ContentPage, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, IPaddingElement, IControlTemplated Constructors PopupPage() Constructor Declaration public PopupPage() Fields AnimationProperty BindableProperty for Animation property Declaration public static readonly BindableProperty AnimationProperty Field Value Type Description BindableProperty BackgroundInputTransparentProperty BindableProperty for BackgroundInputTransparent property Declaration public static readonly BindableProperty BackgroundInputTransparentProperty Field Value Type Description BindableProperty CloseWhenBackgroundIsClickedProperty BindableProperty for CloseWhen BackgroundIsClicked property Declaration public static readonly BindableProperty CloseWhenBackgroundIsClickedProperty Field Value Type Description BindableProperty HasKeyboardOffsetProperty BindableProperty for HasKeyboardOffset property Declaration public static readonly BindableProperty HasKeyboardOffsetProperty Field Value Type Description BindableProperty HasSystemPaddingProperty BindableProperty for HasSystemPadding property Declaration public static readonly BindableProperty HasSystemPaddingProperty Field Value Type Description BindableProperty IsAnimationEnabledProperty BindableProperty for IsAnmiationEnabled property Declaration public static readonly BindableProperty IsAnimationEnabledProperty Field Value Type Description BindableProperty KeyboardOffsetProperty BindableProperty for KeyboardOffset property Declaration public static readonly BindableProperty KeyboardOffsetProperty Field Value Type Description BindableProperty SystemPaddingProperty BindableProperty for SystemPadding property Declaration public static readonly BindableProperty SystemPaddingProperty Field Value Type Description BindableProperty SystemPaddingSidesProperty BindableProperty for SystemPaddingSides property Declaration public static readonly BindableProperty SystemPaddingSidesProperty Field Value Type Description BindableProperty Properties Animation Sets the animation Declaration public IPopupAnimation Animation { get; set; } Property Value Type Description IPopupAnimation BackgroundInputTransparent Passes gestures to page below background Declaration public bool BackgroundInputTransparent { get; set; } Property Value Type Description Boolean CloseWhenBackgroundIsClicked Closes popup when background is clicked Declaration public bool CloseWhenBackgroundIsClicked { get; set; } Property Value Type Description Boolean HasKeyboardOffset enables automated keyboard offset Declaration public bool HasKeyboardOffset { get; set; } Property Value Type Description Boolean HasSystemPadding Enables use of system padding Declaration public bool HasSystemPadding { get; set; } Property Value Type Description Boolean IsAnimationEnabled Enables animation Declaration public bool IsAnimationEnabled { get; set; } Property Value Type Description Boolean KeyboardOffset Gets the current keyboard offset Declaration public double KeyboardOffset { get; } Property Value Type Description Double SystemPadding Sets the system padding Declaration public Thickness SystemPadding { get; } Property Value Type Description Thickness SystemPaddingSides Sets the sides for the system padding Declaration public PaddingSide SystemPaddingSides { get; set; } Property Value Type Description PaddingSide Methods LayoutChildren(Double, Double, Double, Double) Invoked upon layout Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description Double x Double y Double width Double height Overrides Page.LayoutChildren(Double, Double, Double, Double) OnAppearingAnimationBegin() Invoked at beginning of appearing animation Declaration protected virtual void OnAppearingAnimationBegin() OnAppearingAnimationBeginAsync() Invoked at start on appearing animation Declaration protected virtual Task OnAppearingAnimationBeginAsync() Returns Type Description Task OnAppearingAnimationEnd() Invoked at end of appearing animation Declaration protected virtual void OnAppearingAnimationEnd() OnAppearingAnimationEndAsync() Invoked at end of appearing animation Declaration protected virtual Task OnAppearingAnimationEndAsync() Returns Type Description Task OnBackButtonPressed() Invoked when back button has been pressed Declaration protected override bool OnBackButtonPressed() Returns Type Description Boolean Overrides Page.OnBackButtonPressed() OnBackgroundClicked() Invoked when background is clicked Declaration protected virtual bool OnBackgroundClicked() Returns Type Description Boolean OnDisappearingAnimationBegin() Invoked at start of disappearing animation Declaration protected virtual void OnDisappearingAnimationBegin() OnDisappearingAnimationBeginAsync() Invoked at start of disappearing animation Declaration protected virtual Task OnDisappearingAnimationBeginAsync() Returns Type Description Task OnDisappearingAnimationEnd() Invoked at end of disappearing animation Declaration protected virtual void OnDisappearingAnimationEnd() OnDisappearingAnimationEndAsync() Invoked at end of disappearing animation Declaration protected virtual Task OnDisappearingAnimationEndAsync() Returns Type Description Task OnPropertyChanged(String) Invoked when property has changed Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Overrides Element.OnPropertyChanged(String) Events BackgroundClicked Triggered when popup's background is clicked Declaration public event EventHandler BackgroundClicked Event Type Type Description EventHandler Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.ILayout Xamarin.Forms.IPageController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.IElementConfiguration<TElement> Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.ElementShape.html": {
    "href": "api/Forms9Patch.ElementShape.html",
    "title": "Enum ElementShape | Forms9Patch",
    "keywords": "Enum ElementShape Shape of Forms9Patch Image, Button, or Layout element Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum ElementShape Fields Name Description Circle Circle Elliptical Ellipse Obround Obround (rectangle with circular ends) Rectangle Rectangle Square Square"
  },
  "api/Forms9Patch.EmbeddedHtmlViewSource.html": {
    "href": "api/Forms9Patch.EmbeddedHtmlViewSource.html",
    "title": "Class EmbeddedHtmlViewSource | Forms9Patch",
    "keywords": "Class EmbeddedHtmlViewSource WebSource for EmbeddedResources Inheritance Object BindableObject WebViewSource HtmlWebViewSource EmbeddedHtmlViewSource Implements INotifyPropertyChanged IDisposable Inherited Members HtmlWebViewSource.HtmlProperty HtmlWebViewSource.BaseUrlProperty HtmlWebViewSource.BaseUrl HtmlWebViewSource.Html WebViewSource.OnSourceChanged() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(String) BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class EmbeddedHtmlViewSource : HtmlWebViewSource, INotifyPropertyChanged, IDynamicResourceHandler, IDisposable Fields EmbeddedResourceFolderProperty EmbeddedResourceFolder BindableProperty Declaration public static readonly BindableProperty EmbeddedResourceFolderProperty Field Value Type Description BindableProperty HtmlDocEmbeddedResourceIdProperty HtmlDocEmbeddedResourceId BindableProperty Declaration public static readonly BindableProperty HtmlDocEmbeddedResourceIdProperty Field Value Type Description BindableProperty Properties EmbeddedResourceFolder The portion of the EmbeddedResource path under which lies all content for the WebViewSource Declaration public string EmbeddedResourceFolder { get; set; } Property Value Type Description String HtmlDocEmbeddedResourceId The EmbeddedResourceId of the html document to display Declaration public string HtmlDocEmbeddedResourceId { get; set; } Property Value Type Description String Methods Clear(String, Assembly) A way to clear any embedded resource files that have been cached locally. Declaration public static void Clear(string embeddedResourceFolder, Assembly assembly) Parameters Type Name Description String embeddedResourceFolder Assembly assembly Create(String, String, Assembly) Primary method of creation Declaration public static Task<EmbeddedHtmlViewSource> Create(string embeddedResourceFolder, string htmlDocEmbeddedResourceId, Assembly assembly = null) Parameters Type Name Description String embeddedResourceFolder String htmlDocEmbeddedResourceId Assembly assembly Returns Type Description Task < EmbeddedHtmlViewSource > Dispose() Disposal Declaration public void Dispose() Dispose(Boolean) Dispose Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Initialize() A way to generate the content of EmbeddedHtmlViewSource Declaration public Task Initialize() Returns Type Description Task Implements System.ComponentModel.INotifyPropertyChanged System.IDisposable"
  },
  "api/Forms9Patch.EmbeddedResourceExtensions.html": {
    "href": "api/Forms9Patch.EmbeddedResourceExtensions.html",
    "title": "Class EmbeddedResourceExtensions | Forms9Patch",
    "keywords": "Class EmbeddedResourceExtensions Embedded Resource extension methods Inheritance Object EmbeddedResourceExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class EmbeddedResourceExtensions Methods FindAssemblyForMultiResource(String, Assembly) Finds a Forms9Patch Declaration public static Assembly FindAssemblyForMultiResource(string resourceId, Assembly assembly = null) Parameters Type Name Description String resourceId Assembly assembly Returns Type Description Assembly FindAssemblyForResource(String, Assembly) Finds the assembly that contains an embedded resource matching the resourceId Declaration public static Assembly FindAssemblyForResource(string resourceId, Assembly assembly = null) Parameters Type Name Description String resourceId Assembly assembly Returns Type Description Assembly"
  },
  "api/Forms9Patch.EmbeddedResourceFontEffect.html": {
    "href": "api/Forms9Patch.EmbeddedResourceFontEffect.html",
    "title": "Class EmbeddedResourceFontEffect | Forms9Patch",
    "keywords": "Class EmbeddedResourceFontEffect Enable EmbeddedResource fonts to be used with Xamarin elements Inheritance Object Effect RoutingEffect EmbeddedResourceFontEffect Inherited Members RoutingEffect.OnAttached() RoutingEffect.OnDetached() Effect.Resolve(String) Effect.Element Effect.IsAttached Effect.ResolveId Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class EmbeddedResourceFontEffect : RoutingEffect Constructors EmbeddedResourceFontEffect(Assembly) Constructor for Forms9Patch.EmbeddedResourceFontEffect Declaration public EmbeddedResourceFontEffect(Assembly assembly = null) Parameters Type Name Description Assembly assembly Methods ApplyTo(VisualElement, Assembly) Applies EmbeddedResourceFontEffect to a Xamarin.Forms.VisualElement Declaration public static bool ApplyTo(VisualElement element, Assembly assembly = null) Parameters Type Name Description VisualElement element Element. Assembly assembly Assembly. Returns Type Description Boolean true , if to was applyed, false otherwise."
  },
  "api/Forms9Patch.EntryClearButtonEffect.html": {
    "href": "api/Forms9Patch.EntryClearButtonEffect.html",
    "title": "Class EntryClearButtonEffect | Forms9Patch",
    "keywords": "Class EntryClearButtonEffect Adds a clear button to a Xamarin.Forms.Entry Inheritance Object Effect RoutingEffect EntryClearButtonEffect Inherited Members RoutingEffect.OnAttached() RoutingEffect.OnDetached() Effect.Resolve(String) Effect.Element Effect.IsAttached Effect.ResolveId Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class EntryClearButtonEffect : RoutingEffect Constructors EntryClearButtonEffect() Constructor Declaration protected EntryClearButtonEffect() Methods ApplyTo(Entry) Applies EntryClearButtonEffect to a Xamarin.Forms.Entry Declaration public static bool ApplyTo(Entry entry) Parameters Type Name Description Entry entry Returns Type Description Boolean true if the effect was applied or is already present"
  },
  "api/Forms9Patch.EntryNoUnderlineEffect.html": {
    "href": "api/Forms9Patch.EntryNoUnderlineEffect.html",
    "title": "Class EntryNoUnderlineEffect | Forms9Patch",
    "keywords": "Class EntryNoUnderlineEffect Removed underline from a Xamarin.Forms.Entry Inheritance Object Effect RoutingEffect EntryNoUnderlineEffect Inherited Members RoutingEffect.OnAttached() RoutingEffect.OnDetached() Effect.Resolve(String) Effect.Element Effect.IsAttached Effect.ResolveId Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class EntryNoUnderlineEffect : RoutingEffect Constructors EntryNoUnderlineEffect() Constructor Declaration protected EntryNoUnderlineEffect() Methods ApplyTo(Entry) Applies EntryNoUnderlineEffect to a Xamarin.Forms.Entry Declaration public static bool ApplyTo(Entry entry) Parameters Type Name Description Entry entry Returns Type Description Boolean true if the effect was applied or is already present"
  },
  "api/Forms9Patch.ExtendedElementShape.html": {
    "href": "api/Forms9Patch.ExtendedElementShape.html",
    "title": "Enum ExtendedElementShape | Forms9Patch",
    "keywords": "Enum ExtendedElementShape For Forms9Patch internal use. Good luck! Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum ExtendedElementShape Fields Name Description Circle Elliptical Obround Rectangle SegmentEnd SegmentMid SegmentStart Square"
  },
  "api/Forms9Patch.FailAction.html": {
    "href": "api/Forms9Patch.FailAction.html",
    "title": "Enum FailAction | Forms9Patch",
    "keywords": "Enum FailAction Options for how Forms9Patch reacts to a failure Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum FailAction Fields Name Description Ignore Ignore the failure ShowAlert Show a Alert or Toast Popup ThrowException Throw an exception"
  },
  "api/Forms9Patch.Fill.html": {
    "href": "api/Forms9Patch.Fill.html",
    "title": "Enum Fill | Forms9Patch",
    "keywords": "Enum Fill Forms9Patch Aspect mode for Image Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum Fill Fields Name Description AspectFill Scale the image to fill the view. Some parts may be clipped in order to fill the view. AspectFit Scale the image to fit the view. Some parts may be left empty (letter boxing). Fill Scale the image so it exactly fill the view. Scaling may not be uniform in X and Y. Tile Tile the unscaled image within the view's boundaries."
  },
  "api/Forms9Patch.FlyoutAlignment.html": {
    "href": "api/Forms9Patch.FlyoutAlignment.html",
    "title": "Enum FlyoutAlignment | Forms9Patch",
    "keywords": "Enum FlyoutAlignment Determines where a FlyoutPopup will appear relative to the axis of its Orientation Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum FlyoutAlignment Fields Name Description End FlyoutPopup will appear at the End of its axis of Orientation Start FlyoutPopup will appear at the Start of its axis of Orientation"
  },
  "api/Forms9Patch.FlyoutPopup.html": {
    "href": "api/Forms9Patch.FlyoutPopup.html",
    "title": "Class FlyoutPopup | Forms9Patch",
    "keywords": "Class FlyoutPopup A popup that enters from the side of the screen and stops at the same side. Great for notificaitons or menus. Inheritance Object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage PopupPage Forms9Patch.PopupBase FlyoutPopup Implements INotifyPropertyChanged IAnimatable ITabStopElement ILayout IPageController IVisualElementController IElementController IElementConfiguration < Page > IPopup IBackground IShape IElement IDisposable Inherited Members PopupPage.BackgroundClicked PopupPage.IsAnimationEnabledProperty PopupPage.IsAnimationEnabled PopupPage.HasSystemPaddingProperty PopupPage.HasSystemPadding PopupPage.AnimationProperty PopupPage.Animation PopupPage.SystemPaddingProperty PopupPage.SystemPadding PopupPage.SystemPaddingSidesProperty PopupPage.SystemPaddingSides PopupPage.CloseWhenBackgroundIsClickedProperty PopupPage.CloseWhenBackgroundIsClicked PopupPage.BackgroundInputTransparentProperty PopupPage.BackgroundInputTransparent PopupPage.HasKeyboardOffsetProperty PopupPage.HasKeyboardOffset PopupPage.KeyboardOffsetProperty PopupPage.KeyboardOffset PopupPage.OnBackButtonPressed() PopupPage.OnAppearingAnimationBegin() PopupPage.OnAppearingAnimationEnd() PopupPage.OnDisappearingAnimationBegin() PopupPage.OnDisappearingAnimationEnd() PopupPage.OnAppearingAnimationBeginAsync() PopupPage.OnAppearingAnimationEndAsync() PopupPage.OnDisappearingAnimationBeginAsync() PopupPage.OnDisappearingAnimationEndAsync() PopupPage.OnBackgroundClicked() ContentPage.ContentProperty ContentPage.OnBindingContextChanged() TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element) TemplatedPage.OnChildRemoved(Element, Int32) TemplatedPage.GetTemplateChild(String) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(String, String, String, String[]) Page.DisplayAlert(String, String, String) Page.DisplayAlert(String, String, String, String) Page.DisplayPromptAsync(String, String, String, String, String, Int32, Keyboard, String) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnAppearing() Page.OnChildMeasureInvalidated(Object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(Double, Double) Page.UpdateChildrenLayout() Page.On<T>() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.LayoutChanged Page.Appearing Page.Disappearing VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class FlyoutPopup : PopupBase, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, IPaddingElement, IControlTemplated, IPopup, IBackground, IShape, IElement, IDisposable Constructors FlyoutPopup(TimeSpan) Construct new FlyoutPopup Declaration public FlyoutPopup(TimeSpan popAfter = default(TimeSpan)) Parameters Type Name Description TimeSpan popAfter Flyout will dissappear after popAfter Fields AlignmentProperty Backing store for the alignment property. Declaration public static readonly BindableProperty AlignmentProperty Field Value Type Description BindableProperty OrientationProperty Backing store for the orientation property. Declaration public static readonly BindableProperty OrientationProperty Field Value Type Description BindableProperty Properties Alignment Gets or sets the alignment of the flyout along the Orientation axis Declaration public FlyoutAlignment Alignment { get; set; } Property Value Type Description FlyoutAlignment The alignment. Content Gets or sets the content of the FormsPopup.Modal. Declaration public View Content { get; set; } Property Value Type Description View The content. Orientation Gets or sets the orientation of the flyout (along which axis does the fly out action occur?). Declaration public StackOrientation Orientation { get; set; } Property Value Type Description StackOrientation The orientation. Methods Dispose(Boolean) Dispose FlyoutPopup Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides Forms9Patch.PopupBase.Dispose(System.Boolean) LayoutChildren(Double, Double, Double, Double) Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description Double x Double y Double width Double height Overrides PopupPage.LayoutChildren(Double, Double, Double, Double) OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Overrides Forms9Patch.PopupBase.OnPropertyChanged(System.String) Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.ILayout Xamarin.Forms.IPageController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.IElementConfiguration<TElement> IPopup IBackground IShape IElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(PopupBase) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.FocusMonitor.html": {
    "href": "api/Forms9Patch.FocusMonitor.html",
    "title": "Class FocusMonitor | Forms9Patch",
    "keywords": "Class FocusMonitor Focus monitor: Helps you keep up with what VisualElement currently has focus Inheritance Object FocusMonitor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class FocusMonitor Properties Enabled Gets or sets a value indicating whether this FocusMonitor is enabled. Declaration public static bool Enabled { get; set; } Property Value Type Description Boolean true if enabled; otherwise, false . FocusedElement Gets or sets the focused element. Declaration public static VisualElement FocusedElement { get; set; } Property Value Type Description VisualElement The focused element. Methods Start(VisualElement) Starts monitoring a VisualElement and all of its decendants Declaration public static void Start(VisualElement element) Parameters Type Name Description VisualElement element Element. Stop(VisualElement) Stops monitoring a VisualElement and all of its decendants Declaration public static void Stop(VisualElement element) Parameters Type Name Description VisualElement element Element. Events FocusedElementChanged Occurs when focused element changed. Declaration public static event EventHandler<VisualElement> FocusedElementChanged Event Type Type Description EventHandler < VisualElement >"
  },
  "api/Forms9Patch.FontExtensions.html": {
    "href": "api/Forms9Patch.FontExtensions.html",
    "title": "Class FontExtensions | Forms9Patch",
    "keywords": "Class FontExtensions Font extensions. Inheritance Object FontExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class FontExtensions Methods InMathAlphanumericBlock(Int32) Is Int32 char in the Unicode math alphanumeric block. Declaration public static bool InMathAlphanumericBlock(this int utf32Char) Parameters Type Name Description Int32 utf32Char Utf32 char. Returns Type Description Boolean true , if math alphanumeric block was ined, false otherwise. LineHeight(IFontElement) Height of a line of text for the given font. Declaration public static double LineHeight(this IFontElement element) Parameters Type Name Description IFontElement element Element. Returns Type Description Double The height. LineHeight(String, Double, FontAttributes) Height of a line of text for the given font. Declaration public static double LineHeight(string fontFamily, double fontSize, FontAttributes fontAttributes) Parameters Type Name Description String fontFamily Font family. Double fontSize Font size. FontAttributes fontAttributes Font attributes. Returns Type Description Double The height. LineHeight(Font) Height of a line of text for the given font. Declaration public static double LineHeight(this Font font) Parameters Type Name Description Font font Font. Returns Type Description Double The height. LineSpace(IFontElement) Lines the space. Declaration public static double LineSpace(this IFontElement element) Parameters Type Name Description IFontElement element Element. Returns Type Description Double The space. LineSpace(String, Double, FontAttributes) Lines the space. Declaration public static double LineSpace(string fontFamily, double fontSize, FontAttributes fontAttributes) Parameters Type Name Description String fontFamily Font family. Double fontSize Font size. FontAttributes fontAttributes Font attributes. Returns Type Description Double The space. LineSpace(Font) Lines the space. Declaration public static double LineSpace(this Font font) Parameters Type Name Description Font font Font. Returns Type Description Double The space. LoadedFontFamilies() Provides a list of the currently loaded font families (included embedded resources) that are available. Declaration public static List<string> LoadedFontFamilies() Returns Type Description List < String > The font families."
  },
  "api/Forms9Patch.Frame.html": {
    "href": "api/Forms9Patch.Frame.html",
    "title": "Class Frame | Forms9Patch",
    "keywords": "Class Frame Forms9Patch Frame layout. Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView ContentView Frame Button ListView Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers ILayout ILayoutController ILayout IBackground IShape IElement IDisposable Inherited Members ContentView.ContentProperty ContentView.Content ContentView.IgnoreChildrenProperty ContentView.IgnoreChildren ContentView.BackgroundImageProperty ContentView.BackgroundImage ContentView.LimitMinSizeToBackgroundImageSizeProperty ContentView.LimitMinSizeToBackgroundImageSize ContentView.BackgroundColorProperty ContentView.BackgroundColor ContentView.HasShadowProperty ContentView.HasShadow ContentView.ShadowInvertedProperty ContentView.ShadowInverted ContentView.OutlineColorProperty ContentView.OutlineColor ContentView.BorderColorProperty ContentView.BorderColor ContentView.OutlineRadiusProperty ContentView.OutlineRadius ContentView.BorderRadiusProperty ContentView.BorderRadius ContentView.OutlineWidthProperty ContentView.OutlineWidth ContentView.BorderWidthProperty ContentView.BorderWidth ContentView.ElementShapeProperty ContentView.ElementShape ContentView.InstanceId ContentView._f9pId ContentView._fallbackBackgroundImage ContentView.CurrentBackgroundImage ContentView.BaseInternalChildren ContentView.Dispose(Boolean) ContentView.Dispose() ContentView.Description() ContentView.ToString() ContentView.ShouldInvalidateOnChildAdded(View) ContentView.ShouldInvalidateOnChildRemoved(View) ContentView.OnChildMeasureInvalidated() ContentView.OnSizeRequest(Double, Double) ContentView.LayoutChildren(Double, Double, Double, Double) ContentView.OnBindingContextChanged() TemplatedView.ControlTemplateProperty TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class Frame : ContentView, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated, ILayout, IBackground, IShape, IElement, IDisposable Constructors Frame() Initializes an instance of the Frame class. Declaration public Frame() Methods OnPropertyChanged(String) Called when a property has changed Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Overrides ContentView.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController ILayout IBackground IShape IElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.Grid.html": {
    "href": "api/Forms9Patch.Grid.html",
    "title": "Class Grid | Forms9Patch",
    "keywords": "Class Grid Forms9Patch Grid layout. Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView ContentView Frame Forms9Patch.BindableObject < Grid > Forms9Patch.Element < Grid > Forms9Patch.VisualElement < Grid > Forms9Patch.View < Grid > Forms9Patch.BaseLayout < Grid > Forms9Patch.Layout < Grid > Grid Implements INotifyPropertyChanged IAnimatable ITabStopElement IGestureController IGestureRecognizers IDisposable IViewController IVisualElementController IElementController ILayout IBackground IShape IElement ILayout ILayoutController IViewContainer < View > IGridController IElementConfiguration < Grid > IElementConfiguration < Grid > Inherited Members Frame.OnPropertyChanged(String) ContentView.ContentProperty ContentView.Content ContentView.IgnoreChildrenProperty ContentView.IgnoreChildren ContentView.BackgroundImageProperty ContentView.BackgroundImage ContentView.LimitMinSizeToBackgroundImageSizeProperty ContentView.LimitMinSizeToBackgroundImageSize ContentView.BackgroundColorProperty ContentView.BackgroundColor ContentView.HasShadowProperty ContentView.HasShadow ContentView.ShadowInvertedProperty ContentView.ShadowInverted ContentView.OutlineColorProperty ContentView.OutlineColor ContentView.BorderColorProperty ContentView.BorderColor ContentView.OutlineRadiusProperty ContentView.OutlineRadius ContentView.BorderRadiusProperty ContentView.BorderRadius ContentView.OutlineWidthProperty ContentView.OutlineWidth ContentView.BorderWidthProperty ContentView.BorderWidth ContentView.ElementShapeProperty ContentView.ElementShape ContentView.InstanceId ContentView._f9pId ContentView._fallbackBackgroundImage ContentView.CurrentBackgroundImage ContentView.BaseInternalChildren ContentView.Dispose(Boolean) ContentView.Dispose() ContentView.Description() ContentView.ToString() ContentView.ShouldInvalidateOnChildAdded(View) ContentView.ShouldInvalidateOnChildRemoved(View) ContentView.OnChildMeasureInvalidated() ContentView.OnSizeRequest(Double, Double) ContentView.LayoutChildren(Double, Double, Double, Double) ContentView.OnBindingContextChanged() TemplatedView.ControlTemplateProperty TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class Grid : Layout<Grid>, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IGestureController, IGestureRecognizers, IPaddingElement, IControlTemplated, IDisposable, IViewController, IVisualElementController, IElementController, ILayout, IBackground, IShape, IElement, ILayout, ILayoutController, IViewContainer<View>, IGridController, IElementConfiguration<Grid>, IElementConfiguration<Grid> Fields ColumnDefinitionsProperty Backing store for the column definitions property. Declaration public static readonly BindableProperty ColumnDefinitionsProperty Field Value Type Description BindableProperty ColumnSpacingProperty Backing store for the column spacing property. Declaration public static readonly BindableProperty ColumnSpacingProperty Field Value Type Description BindableProperty RowDefinitionsProperty Backing store for the row definitions property. Declaration public static readonly BindableProperty RowDefinitionsProperty Field Value Type Description BindableProperty RowSpacingProperty Backing store for the row spacing property. Declaration public static readonly BindableProperty RowSpacingProperty Field Value Type Description BindableProperty Properties Children Children of Grid Declaration public Grid.IGridList<View> Children { get; } Property Value Type Description Grid.IGridList < View > ColumnDefinitions Gets or sets the column definitions. Declaration public ColumnDefinitionCollection ColumnDefinitions { get; set; } Property Value Type Description ColumnDefinitionCollection The column definitions. ColumnSpacing Gets or sets the column spacing. Declaration public double ColumnSpacing { get; set; } Property Value Type Description Double The column spacing. RowDefinitions Gets or sets the row definitions. Declaration public RowDefinitionCollection RowDefinitions { get; set; } Property Value Type Description RowDefinitionCollection The row definitions. RowSpacing Gets or sets the row spacing. Declaration public double RowSpacing { get; set; } Property Value Type Description Double The row spacing. Methods GetColumn(BindableObject) Gets the column of element in Grid Declaration public static int GetColumn(BindableObject bindable) Parameters Type Name Description BindableObject bindable Bindable. Returns Type Description Int32 The column. GetColumnSpan(BindableObject) Gets the column span of element in Grid Declaration public static int GetColumnSpan(BindableObject bindable) Parameters Type Name Description BindableObject bindable Bindable. Returns Type Description Int32 The column span. GetRow(BindableObject) Gets the row of element in Grid Declaration public static int GetRow(BindableObject bindable) Parameters Type Name Description BindableObject bindable Bindable. Returns Type Description Int32 The row. GetRowSpan(BindableObject) Gets the row span of element in Grid Declaration public static int GetRowSpan(BindableObject bindable) Parameters Type Name Description BindableObject bindable Bindable. Returns Type Description Int32 The row span. InvalidateMeasureInernalNonVirtual(InvalidationTrigger) Invalidates the measure inernal non virtual. Declaration public void InvalidateMeasureInernalNonVirtual(InvalidationTrigger trigger) Parameters Type Name Description InvalidationTrigger trigger Trigger. On<T>() Marker interface for returning platform-specific configuration elements. Declaration public IPlatformElementConfiguration<T, Grid> On<T>() where T : IConfigPlatform Returns Type Description IPlatformElementConfiguration <T, Grid > Type Parameters Name Description T SetColumn(BindableObject, Int32) Sets the column of element in Grid Declaration public static void SetColumn(BindableObject bindable, int value) Parameters Type Name Description BindableObject bindable Bindable. Int32 value Value. SetColumnSpan(BindableObject, Int32) Sets the column span of element in Grid Declaration public static void SetColumnSpan(BindableObject bindable, int value) Parameters Type Name Description BindableObject bindable Bindable. Int32 value Value. SetRow(BindableObject, Int32) Sets the row of element in Grid Declaration public static void SetRow(BindableObject bindable, int value) Parameters Type Name Description BindableObject bindable Bindable. Int32 value Value. SetRowSpan(BindableObject, Int32) Sets the row span of element in Grid Declaration public static void SetRowSpan(BindableObject bindable, int value) Parameters Type Name Description BindableObject bindable Bindable. Int32 value Value. Explicit Interface Implementations IElementConfiguration<Grid>.On<T>() Declaration IPlatformElementConfiguration<T, Grid> IElementConfiguration<Grid>.On<T>() where T : IConfigPlatform Returns Type Description IPlatformElementConfiguration <T, Grid > Type Parameters Name Description T Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers System.IDisposable Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController ILayout IBackground IShape IElement Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Xamarin.Forms.IViewContainer<T> Xamarin.Forms.IGridController Xamarin.Forms.IElementConfiguration<TElement> Xamarin.Forms.IElementConfiguration<TElement> Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.GroupHeaderTemplate.html": {
    "href": "api/Forms9Patch.GroupHeaderTemplate.html",
    "title": "Class GroupHeaderTemplate | Forms9Patch",
    "keywords": "Class GroupHeaderTemplate Group header template. Inheritance Object ElementTemplate DataTemplate GroupHeaderTemplate Inherited Members DataTemplate.SetBinding(BindableProperty, BindingBase) DataTemplate.SetValue(BindableProperty, Object) DataTemplate.Bindings DataTemplate.Values ElementTemplate.CreateContent() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class GroupHeaderTemplate : DataTemplate, IElement, IDataTemplate, IDataTemplateController Constructors GroupHeaderTemplate(Type) Initializes a new instance of the GroupHeaderTemplate class. Declaration public GroupHeaderTemplate(Type groupHeaderViewType) Parameters Type Name Description Type groupHeaderViewType Group header view type."
  },
  "api/Forms9Patch.GroupHeaderView.html": {
    "href": "api/Forms9Patch.GroupHeaderView.html",
    "title": "Class GroupHeaderView | Forms9Patch",
    "keywords": "Class GroupHeaderView FormsDragNDropListView Group header view. Inheritance Object BindableObject Element Cell ViewCell GroupHeaderView Implements INotifyPropertyChanged IElementController ICellController Inherited Members ViewCell.View Cell.DefaultCellHeight Cell.IsEnabledProperty Cell.ForceUpdateSize() Cell.OnTapped() Cell.OnAppearing() Cell.OnDisappearing() Cell.OnParentSet() Cell.OnPropertyChanging(String) Cell.On<T>() Cell.ContextActions Cell.HasContextActions Cell.IsContextActionsLegacyModeEnabled Cell.Height Cell.IsEnabled Cell.RenderHeight Cell.Appearing Cell.Disappearing Cell.Tapped Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.OnChildAdded(Element) Element.OnChildRemoved(Element) Element.OnChildRemoved(Element, Int32) Element.OnPropertyChanged(String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Preserve(AllMembers = true)] public class GroupHeaderView : ViewCell, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, IElementController, IStyleSelectable, ICellController, IFlowDirectionController, IPropertyPropagationController, IVisualController Methods OnBindingContextChanged() Triggered by a changing in the binding context. Declaration protected override void OnBindingContextChanged() Overrides Cell.OnBindingContextChanged() Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IElementController Xamarin.Forms.ICellController Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element)"
  },
  "api/Forms9Patch.GroupToggleBehavior.html": {
    "href": "api/Forms9Patch.GroupToggleBehavior.html",
    "title": "Enum GroupToggleBehavior | Forms9Patch",
    "keywords": "Enum GroupToggleBehavior What happens when a segment is selected Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum GroupToggleBehavior Fields Name Description Multiselect None, any or all the buttons can be in the selected state None No buttons are Toggle Radio Only one button can be in the selected state Extension Methods GroupToggleBehaviorExtensions.ToXfSelectionMode()"
  },
  "api/Forms9Patch.GroupToggleBehaviorExtensions.html": {
    "href": "api/Forms9Patch.GroupToggleBehaviorExtensions.html",
    "title": "Class GroupToggleBehaviorExtensions | Forms9Patch",
    "keywords": "Class GroupToggleBehaviorExtensions Extensions to Forms9Patch.GroupToggleBehavior Inheritance Object GroupToggleBehaviorExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class GroupToggleBehaviorExtensions Methods ToXfSelectionMode(GroupToggleBehavior) Converts a Forms9Patch.GroupToggleBehavior to a Xamarin.Forms.SelectionMode Declaration public static SelectionMode ToXfSelectionMode(this GroupToggleBehavior behavior) Parameters Type Name Description GroupToggleBehavior behavior Returns Type Description SelectionMode"
  },
  "api/Forms9Patch.HapticEffect.html": {
    "href": "api/Forms9Patch.HapticEffect.html",
    "title": "Enum HapticEffect | Forms9Patch",
    "keywords": "Enum HapticEffect Haptic effect used if haptics is enabled Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum HapticEffect Fields Name Description ErrorNotification A notification feedback type, indicating that a task has failed. HeavyImpact A collision between big, heavy user interface elements. LightImpact A collision between small, light user interface elements. MediumImpact A collision between moderately sized user interface elements. None I'll just sit here quietly. Selection Use this feedback generator for a selection actively changing such as picking an item from a list. SuccessNotification A notification feedback type, indicating that a task has completed successfully. WarningNotification A notification feedback type, indicating that a task has produced a warning."
  },
  "api/Forms9Patch.Haptics.html": {
    "href": "api/Forms9Patch.Haptics.html",
    "title": "Class Haptics | Forms9Patch",
    "keywords": "Class Haptics Access to device's haptic feedback system Inheritance Object Haptics Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class Haptics Methods Feedback(HapticEffect, EffectMode) Invoke haptic feedback Declaration public static void Feedback(HapticEffect effect, EffectMode mode = EffectMode.Off) Parameters Type Name Description HapticEffect effect EffectMode mode"
  },
  "api/Forms9Patch.HardwareKey.html": {
    "href": "api/Forms9Patch.HardwareKey.html",
    "title": "Class HardwareKey | Forms9Patch",
    "keywords": "Class HardwareKey Hardware key: Defines a key stroke for which to be listened Inheritance Object BindableObject HardwareKey Implements INotifyPropertyChanged IEquatable < HardwareKey > Inherited Members BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(String) BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class HardwareKey : BindableObject, INotifyPropertyChanged, IDynamicResourceHandler, IEquatable<HardwareKey> Constructors HardwareKey(String, HardwareKeyModifierKeys, String) Initializes a new instance of the HardwareKey class. Declaration public HardwareKey(string keyInput, HardwareKeyModifierKeys modifierKeys = HardwareKeyModifierKeys.None, string discoverableTitle = null) Parameters Type Name Description String keyInput KeyInput. HardwareKeyModifierKeys modifierKeys Modifier keys. String discoverableTitle Discoverable title. Fields BackspaceDeleteKeyInput The backspace delete key HardwareKey.KeyInput. Declaration public const string BackspaceDeleteKeyInput = \"⌫\" Field Value Type Description String ClearKeyInput The clear key HardwareKey.KeyInput. Declaration public const string ClearKeyInput = \"⌧\" Field Value Type Description String DiscoverableTitleProperty Backing store for the DiscoverableTitle property Declaration public static readonly BindableProperty DiscoverableTitleProperty Field Value Type Description BindableProperty DownArrowKeyInput Down arrow key HardwareKey.KeyInput Declaration public const string DownArrowKeyInput = \"↓\" Field Value Type Description String EndKeyInput The end key HardwareKey.KeyInput. Declaration public const string EndKeyInput = \"⇨\" Field Value Type Description String EnterReturnKeyInput The enter return key HardwareKey.KeyInput. Declaration public const string EnterReturnKeyInput = \"⏎\" Field Value Type Description String EscapeKeyInput Escape key HardwareKey.KeyInput Declaration public const string EscapeKeyInput = \"␛\" Field Value Type Description String F10KeyInput The f10 key HardwareKey.KeyInput. Declaration public const string F10KeyInput = \"⑩\" Field Value Type Description String F11KeyInput The f11 key HardwareKey.KeyInput. Declaration public const string F11KeyInput = \"⑪\" Field Value Type Description String F12KeyInput The f12 key HardwareKey.KeyInput. Declaration public const string F12KeyInput = \"⑫\" Field Value Type Description String F1KeyInput The f1 key HardwareKey.KeyInput. Declaration public const string F1KeyInput = \"①\" Field Value Type Description String F2KeyInput The f2 key HardwareKey.KeyInput. Declaration public const string F2KeyInput = \"②\" Field Value Type Description String F3KeyInput The f3 key HardwareKey.KeyInput. Declaration public const string F3KeyInput = \"③\" Field Value Type Description String F4KeyInput The f4 key HardwareKey.KeyInput. Declaration public const string F4KeyInput = \"④\" Field Value Type Description String F5KeyInput The f5 key HardwareKey.KeyInput. Declaration public const string F5KeyInput = \"⑤\" Field Value Type Description String F6KeyInput The f6 key HardwareKey.KeyInput. Declaration public const string F6KeyInput = \"⑥\" Field Value Type Description String F7KeyInput The f7 key HardwareKey.KeyInput. Declaration public const string F7KeyInput = \"⑦\" Field Value Type Description String F8KeyInput The f8 key HardwareKey.KeyInput. Declaration public const string F8KeyInput = \"⑧\" Field Value Type Description String F9KeyInput The f9 key HardwareKey.KeyInput. Declaration public const string F9KeyInput = \"⑨\" Field Value Type Description String ForwardDeleteKeyInput The forward delete key HardwareKey.KeyInput. Declaration public const string ForwardDeleteKeyInput = \"⌦\" Field Value Type Description String HomeKeyInput The home key HardwareKey.KeyInput. Declaration public const string HomeKeyInput = \"⇦\" Field Value Type Description String InsertKeyInput The insert key HardwareKey.KeyInput. Declaration public const string InsertKeyInput = \"⤹\" Field Value Type Description String KeyInputProperty Backing store for the KeyInput property Declaration public static readonly BindableProperty KeyInputProperty Field Value Type Description BindableProperty LeftArrowKeyInput Left arrow key HardwareKey.KeyInput Declaration public const string LeftArrowKeyInput = \"←\" Field Value Type Description String ModifierKeysProperty Backing store for the ModifierKeys property Declaration public static readonly BindableProperty ModifierKeysProperty Field Value Type Description BindableProperty PageDownKeyInput The page down key HardwareKey.KeyInput. Declaration public const string PageDownKeyInput = \"⇩\" Field Value Type Description String PageUpKeyInput The page up key HardwareKey.KeyInput. Declaration public const string PageUpKeyInput = \"⇧\" Field Value Type Description String RightArrowKeyInput Right arrow key HardwareKey.KeyInput Declaration public const string RightArrowKeyInput = \"→\" Field Value Type Description String TabKeyInput The tab key HardwareKey.KeyInput. Declaration public const string TabKeyInput = \"⇥\" Field Value Type Description String UpArrowKeyInput Up arrow key HardwareKey.KeyInput Declaration public const string UpArrowKeyInput = \"↑\" Field Value Type Description String Properties DiscoverableTitle The text shown, during a modifier key long press, indicating that this key is one that is available with this key press Declaration public string DiscoverableTitle { get; set; } Property Value Type Description String The discoverable title. KeyInput A case sensitive string representing the key pressed. Declaration public string KeyInput { get; set; } Property Value Type Description String The input. ModifierKeys Flags representing which (if any) modifier keys occompany the pressed key Declaration public HardwareKeyModifierKeys ModifierKeys { get; set; } Property Value Type Description HardwareKeyModifierKeys The modifier keys. Methods Equals(HardwareKey) Determines whether the specified HardwareKey is equal to the current HardwareKey . Declaration public bool Equals(HardwareKey other) Parameters Type Name Description HardwareKey other The HardwareKey to compare with the current HardwareKey . Returns Type Description Boolean true if the specified HardwareKey is equal to the current HardwareKey ; otherwise, false . Equals(Object) Determines whether the specified Object is equal to the current HardwareKey . Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with the current HardwareKey . Returns Type Description Boolean true if the specified Object is equal to the current HardwareKey ; otherwise, false . Overrides Object.Equals(Object) GetHashCode() Serves as a hash function for a HardwareKey object. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a hash table. Overrides Object.GetHashCode() ToString() Returns a String that represents the current HardwareKey . Declaration public override string ToString() Returns Type Description String A String that represents the current HardwareKey . Overrides Object.ToString() Operators Equality(HardwareKey, HardwareKey) Determines whether a specified instance of HardwareKey is equal to another specified HardwareKey . Declaration public static bool operator ==(HardwareKey a, HardwareKey b) Parameters Type Name Description HardwareKey a The first HardwareKey to compare. HardwareKey b The second HardwareKey to compare. Returns Type Description Boolean true if a and b are equal; otherwise, false . Inequality(HardwareKey, HardwareKey) Determines whether a specified instance of HardwareKey is not equal to another specified HardwareKey . Declaration public static bool operator !=(HardwareKey a, HardwareKey b) Parameters Type Name Description HardwareKey a The first HardwareKey to compare. HardwareKey b The second HardwareKey to compare. Returns Type Description Boolean true if a and b are not equal; otherwise, false . Implements System.ComponentModel.INotifyPropertyChanged System.IEquatable<T>"
  },
  "api/Forms9Patch.HardwareKeyEventArgs.html": {
    "href": "api/Forms9Patch.HardwareKeyEventArgs.html",
    "title": "Class HardwareKeyEventArgs | Forms9Patch",
    "keywords": "Class HardwareKeyEventArgs Hardware key event arguments. Inheritance Object EventArgs HardwareKeyEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class HardwareKeyEventArgs : EventArgs Constructors HardwareKeyEventArgs(HardwareKey, VisualElement) Initializes a new instance of the HardwareKeyEventArgs class. Declaration public HardwareKeyEventArgs(HardwareKey hardwareKey, VisualElement visualElement) Parameters Type Name Description HardwareKey hardwareKey Hardware key. VisualElement visualElement Visual element. Properties HardwareKey Gets the hardware key that was pressed Declaration public HardwareKey HardwareKey { get; } Property Value Type Description HardwareKey The hardware key. VisualElement Gets the visual element that is listening for this hardware key press event Declaration public VisualElement VisualElement { get; } Property Value Type Description VisualElement The visual element."
  },
  "api/Forms9Patch.HardwareKeyListener.html": {
    "href": "api/Forms9Patch.HardwareKeyListener.html",
    "title": "Class HardwareKeyListener | Forms9Patch",
    "keywords": "Class HardwareKeyListener Hardware key listener: Configures what key stroke to listen for and what to do when it's heard. Inheritance Object BindableObject HardwareKeyListener Implements INotifyPropertyChanged Inherited Members BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(String) BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class HardwareKeyListener : BindableObject, INotifyPropertyChanged, IDynamicResourceHandler Constructors HardwareKeyListener(HardwareKey, EventHandler<HardwareKeyEventArgs>) Initializes a new instance of the HardwareKeyListener class. Declaration public HardwareKeyListener(HardwareKey hardwareKey, EventHandler<HardwareKeyEventArgs> onPressed = null) Parameters Type Name Description HardwareKey hardwareKey Hardware key. EventHandler < HardwareKeyEventArgs > onPressed On pressed. Fields CommandParameterProperty The CommandParameter backing store Declaration public static readonly BindableProperty CommandParameterProperty Field Value Type Description BindableProperty CommandProperty Backing store for the Command property Declaration public static readonly BindableProperty CommandProperty Field Value Type Description BindableProperty HardwareKeyProperty Backing store for the HardwareKey property. Declaration public static readonly BindableProperty HardwareKeyProperty Field Value Type Description BindableProperty Pressed The event that is triggered when this hardware key is pressed. Declaration public EventHandler<HardwareKeyEventArgs> Pressed Field Value Type Description EventHandler < HardwareKeyEventArgs > Properties Command Gets or sets the command to be invoked when the HardwareKey is pressed Declaration public ICommand Command { get; set; } Property Value Type Description ICommand The command. CommandParameter Gets or sets the command parameter sent with the command that is invoked when the key is pressed. Declaration public object CommandParameter { get; set; } Property Value Type Description Object The command parameter. HardwareKey Gets or sets the hardware key for which to be listened. Declaration public HardwareKey HardwareKey { get; set; } Property Value Type Description HardwareKey The hardware key. Methods ToString() Returns a String that represents the current HardwareKeyListener . Declaration public override string ToString() Returns Type Description String A String that represents the current HardwareKeyListener . Overrides Object.ToString() Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Forms9Patch.HardwareKeyListenerExtensions.html": {
    "href": "api/Forms9Patch.HardwareKeyListenerExtensions.html",
    "title": "Class HardwareKeyListenerExtensions | Forms9Patch",
    "keywords": "Class HardwareKeyListenerExtensions Making it easier to manage HardwareKeyListeners Inheritance Object HardwareKeyListenerExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class HardwareKeyListenerExtensions Methods AddHardwareKeyListener(HardwareKeyPage, HardwareKeyListener) Adds a hardware key listener to this ContentPage. Declaration public static HardwareKeyListener AddHardwareKeyListener(this HardwareKeyPage page, HardwareKeyListener hardwareKeyListener) Parameters Type Name Description HardwareKeyPage page Forms9Patch.HardwareKeyPage. HardwareKeyListener hardwareKeyListener Hardware key listener. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(HardwareKeyPage, String) Adds a hardware key listener to HardwareKeyPage. Declaration public static HardwareKeyListener AddHardwareKeyListener(this HardwareKeyPage page, string keyInput) Parameters Type Name Description HardwareKeyPage page Page. String keyInput Key input. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(HardwareKeyPage, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) Adds a hardware key listener to a HardwareKeyPage. Declaration public static HardwareKeyListener AddHardwareKeyListener(this HardwareKeyPage page, string keyInput, HardwareKeyModifierKeys hardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs> onPressed = null) Parameters Type Name Description HardwareKeyPage page Page. String keyInput Key input. HardwareKeyModifierKeys hardwareKeyModifierKeys Hardware key modifier keys. EventHandler < HardwareKeyEventArgs > onPressed On pressed. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(HardwareKeyPage, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) Adds a hardware key listener to a HardwareKeyPage. Declaration public static HardwareKeyListener AddHardwareKeyListener(this HardwareKeyPage page, string keyInput, HardwareKeyModifierKeys hardwareKeyModifierKeys, string discoverableTitle, EventHandler<HardwareKeyEventArgs> onPressed = null) Parameters Type Name Description HardwareKeyPage page Page. String keyInput Key input. HardwareKeyModifierKeys hardwareKeyModifierKeys Hardware key modifier keys. String discoverableTitle Discoverable title. EventHandler < HardwareKeyEventArgs > onPressed On pressed. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(HardwareKeyPage, String, EventHandler<HardwareKeyEventArgs>) Adds a hardware key listener to a HardwareKeyPage. Declaration public static HardwareKeyListener AddHardwareKeyListener(this HardwareKeyPage page, string keyInput, EventHandler<HardwareKeyEventArgs> onPressed) Parameters Type Name Description HardwareKeyPage page Page. String keyInput Key input. EventHandler < HardwareKeyEventArgs > onPressed On pressed. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(PopupBase, HardwareKeyListener) Adds a hardware key listener to this ContentPage. Declaration public static HardwareKeyListener AddHardwareKeyListener(this PopupBase page, HardwareKeyListener hardwareKeyListener) Parameters Type Name Description Forms9Patch.PopupBase page Forms9Patch.HardwareKeyPage. HardwareKeyListener hardwareKeyListener Hardware key listener. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(PopupBase, String) Adds a hardware key listener to HardwareKeyPage. Declaration public static HardwareKeyListener AddHardwareKeyListener(this PopupBase page, string keyInput) Parameters Type Name Description Forms9Patch.PopupBase page Page. String keyInput Key input. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) Adds a hardware key listener to a HardwareKeyPage. Declaration public static HardwareKeyListener AddHardwareKeyListener(this PopupBase page, string keyInput, HardwareKeyModifierKeys hardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs> onPressed = null) Parameters Type Name Description Forms9Patch.PopupBase page Page. String keyInput Key input. HardwareKeyModifierKeys hardwareKeyModifierKeys Hardware key modifier keys. EventHandler < HardwareKeyEventArgs > onPressed On pressed. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) Adds a hardware key listener to a HardwareKeyPage. Declaration public static HardwareKeyListener AddHardwareKeyListener(this PopupBase page, string keyInput, HardwareKeyModifierKeys hardwareKeyModifierKeys, string discoverableTitle, EventHandler<HardwareKeyEventArgs> onPressed = null) Parameters Type Name Description Forms9Patch.PopupBase page Page. String keyInput Key input. HardwareKeyModifierKeys hardwareKeyModifierKeys Hardware key modifier keys. String discoverableTitle Discoverable title. EventHandler < HardwareKeyEventArgs > onPressed On pressed. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(PopupBase, String, EventHandler<HardwareKeyEventArgs>) Adds a hardware key listener to a HardwareKeyPage. Declaration public static HardwareKeyListener AddHardwareKeyListener(this PopupBase page, string keyInput, EventHandler<HardwareKeyEventArgs> onPressed) Parameters Type Name Description Forms9Patch.PopupBase page Page. String keyInput Key input. EventHandler < HardwareKeyEventArgs > onPressed On pressed. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(View, HardwareKeyListener) Adds a hardware key listener to this Xamarin.Forms.View. Declaration public static HardwareKeyListener AddHardwareKeyListener(this View view, HardwareKeyListener hardwareKeyListener) Parameters Type Name Description View view Xamarin.Forms.View. HardwareKeyListener hardwareKeyListener Hardware key listener. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(View, String) Adds the hardware key listener to a View. Declaration public static HardwareKeyListener AddHardwareKeyListener(this View view, string keyInput) Parameters Type Name Description View view View. String keyInput Key input. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) Adds the hardware key listener to a View. Declaration public static HardwareKeyListener AddHardwareKeyListener(this View view, string keyInput, HardwareKeyModifierKeys hardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs> onPressed = null) Parameters Type Name Description View view View. String keyInput Key input. HardwareKeyModifierKeys hardwareKeyModifierKeys Hardware key modifier keys. EventHandler < HardwareKeyEventArgs > onPressed On pressed. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) Adds the hardware key listener to a View. Declaration public static HardwareKeyListener AddHardwareKeyListener(this View view, string keyInput, HardwareKeyModifierKeys hardwareKeyModifierKeys, string discoverableTitle, EventHandler<HardwareKeyEventArgs> onPressed = null) Parameters Type Name Description View view View. String keyInput Key input. HardwareKeyModifierKeys hardwareKeyModifierKeys Hardware key modifier keys. String discoverableTitle Discoverable title. EventHandler < HardwareKeyEventArgs > onPressed On pressed. Returns Type Description HardwareKeyListener The hardware key listener. AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) Adds the hardware key listener to a View. Declaration public static HardwareKeyListener AddHardwareKeyListener(this View view, string keyInput, EventHandler<HardwareKeyEventArgs> onPressed) Parameters Type Name Description View view View. String keyInput Key input. EventHandler < HardwareKeyEventArgs > onPressed On pressed. Returns Type Description HardwareKeyListener The hardware key listener. ClearHardwareKeyListeners(HardwareKeyPage) Clears the hardware key listeners for this HardwareKeyPage. Declaration public static void ClearHardwareKeyListeners(this HardwareKeyPage page) Parameters Type Name Description HardwareKeyPage page Page. ClearHardwareKeyListeners(PopupBase) Clears the hardware key listeners for this HardwareKeyPage. Declaration public static void ClearHardwareKeyListeners(this PopupBase page) Parameters Type Name Description Forms9Patch.PopupBase page Page. ClearHardwareKeyListeners(View) Clears the hardware key listeners for this View. Declaration public static void ClearHardwareKeyListeners(this View view) Parameters Type Name Description View view View. GetHardwareKeyListeners(HardwareKeyPage) Gets the collection of hardware key listeners for this ContentPage Declaration public static ObservableCollection<HardwareKeyListener> GetHardwareKeyListeners(this HardwareKeyPage page) Parameters Type Name Description HardwareKeyPage page Forms9Patch.HardwareKeyPage. Returns Type Description ObservableCollection < HardwareKeyListener > The hardware key listeners. GetHardwareKeyListeners(PopupBase) Gets the collection of hardware key listeners for this ContentPage Declaration public static ObservableCollection<HardwareKeyListener> GetHardwareKeyListeners(this PopupBase page) Parameters Type Name Description Forms9Patch.PopupBase page Forms9Patch.HardwareKeyPage. Returns Type Description ObservableCollection < HardwareKeyListener > The hardware key listeners. GetHardwareKeyListeners(View) Gets the collection of hardware key listeners for this Xamarin.Forms.View Declaration public static ObservableCollection<HardwareKeyListener> GetHardwareKeyListeners(this View view) Parameters Type Name Description View view Xamarin.Forms.View. Returns Type Description ObservableCollection < HardwareKeyListener > The hardware key listeners. HardwareKeyFocus(HardwareKeyPage) Sets the HardwareKeyFocus to this page. Declaration public static void HardwareKeyFocus(this HardwareKeyPage page) Parameters Type Name Description HardwareKeyPage page Page. HardwareKeyFocus(PopupBase) Sets the HardwareKeyFocus to this page. Declaration public static void HardwareKeyFocus(this PopupBase page) Parameters Type Name Description Forms9Patch.PopupBase page Page. HardwareKeyFocus(View) Sets the HardwareKeyFocus to this view. Declaration public static void HardwareKeyFocus(this View view) Parameters Type Name Description View view View. HardwareKeyUnfocus(VisualElement) Removes the hardware key focus from this VisualElement Declaration public static void HardwareKeyUnfocus(this VisualElement visualElement) Parameters Type Name Description VisualElement visualElement Visual element. RemoveHardwareKeyListener(HardwareKeyPage, HardwareKeyListener) Removes a hardware key listener from this Xamarin.Forms.View. Declaration public static void RemoveHardwareKeyListener(this HardwareKeyPage page, HardwareKeyListener listener) Parameters Type Name Description HardwareKeyPage page Forms9Patch.HardwareKeyPage. HardwareKeyListener listener Listener. RemoveHardwareKeyListener(HardwareKeyPage, String, HardwareKeyModifierKeys) Matches a hardware key listener and, if found, removes it from this ContentPage. Declaration public static void RemoveHardwareKeyListener(this HardwareKeyPage page, string keyInput, HardwareKeyModifierKeys hardwareKeyModifierKeys = HardwareKeyModifierKeys.None) Parameters Type Name Description HardwareKeyPage page Forms9Patch.HardwareKeyPage. String keyInput Key Label. HardwareKeyModifierKeys hardwareKeyModifierKeys Hardware key modifier keys. RemoveHardwareKeyListener(PopupBase, HardwareKeyListener) Removes a hardware key listener from this Xamarin.Forms.View. Declaration public static void RemoveHardwareKeyListener(this PopupBase page, HardwareKeyListener listener) Parameters Type Name Description Forms9Patch.PopupBase page Forms9Patch.HardwareKeyPage. HardwareKeyListener listener Listener. RemoveHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys) Matches a hardware key listener and, if found, removes it from this ContentPage. Declaration public static void RemoveHardwareKeyListener(this PopupBase page, string keyInput, HardwareKeyModifierKeys hardwareKeyModifierKeys = HardwareKeyModifierKeys.None) Parameters Type Name Description Forms9Patch.PopupBase page Forms9Patch.HardwareKeyPage. String keyInput Key Label. HardwareKeyModifierKeys hardwareKeyModifierKeys Hardware key modifier keys. RemoveHardwareKeyListener(View, HardwareKeyListener) Removes a hardware key listener from this ContentPage. Declaration public static void RemoveHardwareKeyListener(this View view, HardwareKeyListener listener) Parameters Type Name Description View view View. HardwareKeyListener listener Listener. RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) Matches a hardware key listener and, if found, removes it from this Xamarin.Forms.View. Declaration public static void RemoveHardwareKeyListener(this View view, string keyInput, HardwareKeyModifierKeys hardwareKeyModifierKeys = HardwareKeyModifierKeys.None) Parameters Type Name Description View view Xamarin.Forms.View. String keyInput Key Label. HardwareKeyModifierKeys hardwareKeyModifierKeys Hardware key modifier keys."
  },
  "api/Forms9Patch.HardwareKeyModifierKeys.html": {
    "href": "api/Forms9Patch.HardwareKeyModifierKeys.html",
    "title": "Enum HardwareKeyModifierKeys | Forms9Patch",
    "keywords": "Enum HardwareKeyModifierKeys Hardware key modifier keys. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Flags] public enum HardwareKeyModifierKeys Fields Name Description Alternate The alternate (traditional [Alt] or Apple [option]) key was pressed at the same time the hardware key was pressed Any Match any modifier key combination CapsLock The caps lock [Caps] is on when the hardware key was pressed Control The control [Ctrl] key was pressed at the same time the hardware key was pressed FunctionKey Was the key press occompanied by the function [fn] key? None No modifier keys (default) NumericPadKey Did the key press come from a key on the numberic key pad? PlatformKey The platform key (Windows menu [⊞] or Apple [⌘ command]) Shift The shift key was pressed at the same time the hardware key was pressed"
  },
  "api/Forms9Patch.HardwareKeyPage.html": {
    "href": "api/Forms9Patch.HardwareKeyPage.html",
    "title": "Class HardwareKeyPage | Forms9Patch",
    "keywords": "Class HardwareKeyPage Required to enable Hardware Key Listening capability Inheritance Object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage HardwareKeyPage Implements INotifyPropertyChanged IAnimatable ITabStopElement ILayout IPageController IVisualElementController IElementController IElementConfiguration < Page > Inherited Members ContentPage.ContentProperty ContentPage.OnBindingContextChanged() ContentPage.Content TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element) TemplatedPage.OnChildRemoved(Element, Int32) TemplatedPage.GetTemplateChild(String) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(String, String, String, String[]) Page.DisplayAlert(String, String, String) Page.DisplayAlert(String, String, String, String) Page.DisplayPromptAsync(String, String, String, String, String, Int32, Keyboard, String) Page.ForceLayout() Page.SendBackButtonPressed() Page.LayoutChildren(Double, Double, Double, Double) Page.OnBackButtonPressed() Page.OnChildMeasureInvalidated(Object, EventArgs) Page.OnParentSet() Page.OnSizeAllocated(Double, Double) Page.UpdateChildrenLayout() Page.On<T>() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.LayoutChanged Page.Appearing Page.Disappearing VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.OnPropertyChanged(String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class HardwareKeyPage : ContentPage, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, IPaddingElement, IControlTemplated Properties DefaultFocusedElement Gets or sets the default focused element - the element who's HardwareKeyListeners are active if no element has focus Declaration public static VisualElement DefaultFocusedElement { get; set; } Property Value Type Description VisualElement The default focused element. FocusedElement Gets or sets the currently focused element - the element who'sHardwareKeyListeners are currently active Declaration public static VisualElement FocusedElement { get; set; } Property Value Type Description VisualElement The focused element. Methods OnAppearing() Called when the HardwareKeyPage appears Declaration protected override void OnAppearing() Overrides Page.OnAppearing() OnDisappearing() Called when the HardwareKeyPage disappers Declaration protected override void OnDisappearing() Overrides Page.OnDisappearing() Events FocusedElementChanged Event called when the HardwareKay.FocusedElement has changed Declaration public static event EventHandler FocusedElementChanged Event Type Type Description EventHandler Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.ILayout Xamarin.Forms.IPageController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.IElementConfiguration<TElement> Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(HardwareKeyPage) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(HardwareKeyPage) HardwareKeyListenerExtensions.AddHardwareKeyListener(HardwareKeyPage, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(HardwareKeyPage, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(HardwareKeyPage, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(HardwareKeyPage, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(HardwareKeyPage, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(HardwareKeyPage, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(HardwareKeyPage, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(HardwareKeyPage) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.html": {
    "href": "api/Forms9Patch.html",
    "title": "Namespace Forms9Patch | Forms9Patch",
    "keywords": "Namespace Forms9Patch Classes AbsoluteLayout Forms9Patch.AbsoluteLayout ActionTagEventArgs Action tag event arguments. ActivityIndicatorPopup Activity indicator full page overlay. Alert Permission popup. Analytics Interface to allow Forms9Patch events to be shared with an analytics provider used by the host application ApplicationExtensions Application extensions. ApplicationInfoService Application infomation service. AspectExtension Forms9Patch Aspect extension. Audio Audio system BaseMimeItemCollection Do not use! Use MimeItemCollection instead! BasePickerDataTemplateSelector Template Picker BubblePopup Forms9Patch Bubble pop-up. Button Forms9Patch Button. ButtonState Describes the properties of a StateButton for a given state. Clipboard Forms9Patch.Clipboard class ColorExtension Color extension. ColorGradientBox Box view with a color gradient fill. Don't count on this element sticking around for too long. ContentView Forms9Patch ContentView. DataTemplateSelector The Forms9Patch Data template selector. Debug Class with helper methods intended to ask for user assistance in debugging application using Forms9Patch Display Provides characteristics of the display in which the app is presented ElementExtensions Visual element extensions. EmbeddedHtmlViewSource WebSource for EmbeddedResources EmbeddedResourceExtensions Embedded Resource extension methods EmbeddedResourceFontEffect Enable EmbeddedResource fonts to be used with Xamarin elements EntryClearButtonEffect Adds a clear button to a Xamarin.Forms.Entry EntryNoUnderlineEffect Removed underline from a Xamarin.Forms.Entry FlyoutPopup A popup that enters from the side of the screen and stops at the same side. Great for notificaitons or menus. FocusMonitor Focus monitor: Helps you keep up with what VisualElement currently has focus FontExtensions Font extensions. Frame Forms9Patch Frame layout. Grid Forms9Patch Grid layout. GroupHeaderTemplate Group header template. GroupHeaderView FormsDragNDropListView Group header view. GroupToggleBehaviorExtensions Extensions to Forms9Patch.GroupToggleBehavior Haptics Access to device's haptic feedback system HardwareKey Hardware key: Defines a key stroke for which to be listened HardwareKeyEventArgs Hardware key event arguments. HardwareKeyListener Hardware key listener: Configures what key stroke to listen for and what to do when it's heard. HardwareKeyListenerExtensions Making it easier to manage HardwareKeyListeners HardwareKeyPage Required to enable Hardware Key Listening capability Image Forms9Patch.Image element ImageButton Depricated: Use StateButton ImageButtonState OBSOLETE: Use ButtonState ImageSource Forms9Patch ImageSource. ImageSourceExtensions ImageSource extension methods IMimeItemCollectionExtensions Interface for MimeItemCollections ItemTappedEventArgs Item tapped event arguments. KeyboardService Keyboard service. Label Forms9Patch.Label LayoutOptionsExtensions Layout options extensions. ListView FormsDragNDropListView List view. ManualLayout Manual layout. ManualLayoutEventArgs Manual layout event arguments. MaterialButton DEPRICATED: Use Button MaterialSegmentedControl DEPRICATED: USE SegmentedControl MimeItem Base class for a MimeItem MimeItem<T> MimeItem class MimeItemCollection Class used to supply data to Clipboard and Interapp Sharing ModalPopup Forms9Patch Modal popup. MultiComponentPicker Multi component picker. MultiComponentPicker.SelectionChangedEventArgs Selection changed event arguments. MultiPicker Multi picker. MultiPicker.MultiPickerCellContentView MultiPicker cell content view MultiPicker.MultiPickerHtmlCellContentView MultiPicker HTML cell content view OsInfoService Provides information about the operating system in which the app is running PageMargin Class to specify ths margins (in points) of a PDF page PageSize Helper class used to specify media size used in the generation of PDF documents PermissionPopup Permission popup. PointerDirectionExtensions Pointer direction extensions. PopupPoppedEventArgs Event arguments passed by Popped event and DelayUntilPoppedAsyc() method in Forms9Patch popups. PrintService Extensions to XF WebView RectangleExtensions Rectangle extensions. RelativeLayout Forms9Patch RelativeLayout. ScrollViewExtensions Scroll helper extensions Segment Model for Segment. SegmentedControl Forms9Patch Material Segmented Control. SegmentedControlEventArgs Segment tapped event arguments. SelectedItemChangedEventArgs Selected item changed event arguments. Settings Forms9Patch Settings (for use by Forms9Patch PCL code). ShapeBase Rounded box base. Sharing Forms9Patch.Clipboard class SinglePicker Single picker. SinglePicker.SinglePickerCellContentView Contents of a SinglePicker Cell SinglePicker.SinglePickerHtmlCellContentView Contents of a SinglePicker HTML cell SkiaColorExtensions Making using Skia just a little easier SKRectExtensions Making using Skia just a little easier SliderStepSizeEffect Enabled StepSize control of Xamarin.Forms.Slider element StackLayout Forms9Patch StackLayout. StateButton Image button. StringExtensions Forms9Patch String extensions. SwipeMenuItem Describes a Swipe action button that appears when a cell is swiped SwipeMenuItemTappedArgs Cell swipe menu item tapped arguments. TargetedMenu Forms9Patch.TargetedMenu class TargetedToast A simple toast that points to an element TemplateSelectorBase Data template selector: Used to match types of objects with the types of views that will be used to display them in a ListView. ThicknessExtension Forms9Patch Thickness extension. Toast Toast Popup: Plain and simple ToFileResult Result from ToPng and ToPdf processes ToPdfService Html string extensions. ToPngService Html string extensions. WebViewPrintEffect Effect required to enable Printing of content of Xamarin.Forms.WebView XamarinEssentialsExtensions Extension methods to make using Xamarin.Essentials just a tiny bit easier to use. Interfaces IApplicationInfoService Application info service. IBackground Interface for Forms9Patch elements with background features IButton Interface for Forms9Patch button elements IButtonState Interface for the state of a button ICellContentView Interface to set the cell height for a cell that contains the content of a Forms9Patch ListView cell. ICellSwipeMenus Interface to implement Swipe Menus in content views for Forms9Patch ListView cells IElement The foundation of Forms9Patch visual elements IExtendedShape INTERNAL USE ONLY IFontElement Interface for Forms9Patch elements with Fonts. IFontFamilies Font families interface used for backing service. IIsSelectedAble Assures a class has the IsSelected property. IKeyboardService Keyboard service. ILabel Interface for Forms9Patch elements that have labels ILabelStyle Interface for Forms9Patch Label styling ILayout Interface for Forms9Patch layout elements IMenuItem Menu item. IMimeItem Interface for a MimeItem IMimeItem<T> Generic Interface for ClipboardEntryITem IMimeItemCollection Interface for a Forms9Patch.ClipboardEntry IPopup Forms9Patch Popup Interface. IPrintService Print service. ISegment Interface for Forms9Patch.Segment elements ISettings Interface for platform settings IShape Forms9Patch RoundedBox interface IText Internal Use ONLY IToPdfService Html to pdf service. IToPngService Html to pdf service. Enums AccessoryPosition Accessory position. AutoFit Label fit options. EffectMode Will a sound effect play? ElementShape Shape of Forms9Patch Image, Button, or Layout element ExtendedElementShape For Forms9Patch internal use. Good luck! FailAction Options for how Forms9Patch reacts to a failure Fill Forms9Patch Aspect mode for Image FlyoutAlignment Determines where a FlyoutPopup will appear relative to the axis of its Orientation GroupToggleBehavior What happens when a segment is selected HapticEffect Haptic effect used if haptics is enabled HardwareKeyModifierKeys Hardware key modifier keys. KeyboardVisibilityChange Keyboard visibility change. KeyClicks The different haptic modes LabelFit OBSOLETE: USE AutoFit PermissionState State of permission popup permission process PointerDirection BubblePopup Pointer direction. PopupPoppedCause Causes for Forms9Patch popup being popped Proximity The position of a cell being dragged relative to the cell it is hovering over SoundEffect System Sound Effects Delegates Analytics.TrackEventDelegate Delegate definition for publishing a Forms9Patch analytics event to an application's analytics provider Analytics.TrackExceptionDelegate Delegate definition for publishing a Forms9Patch exception to an application's analytics provider SegmentedControlEventHandler Segment tapped event handler."
  },
  "api/Forms9Patch.IApplicationInfoService.html": {
    "href": "api/Forms9Patch.IApplicationInfoService.html",
    "title": "Interface IApplicationInfoService | Forms9Patch",
    "keywords": "Interface IApplicationInfoService Application info service. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IApplicationInfoService Properties Build Gets the build. Declaration int Build { get; } Property Value Type Description Int32 The build. Fingerprint Gets the fingerprint. Declaration string Fingerprint { get; } Property Value Type Description String The fingerprint. Identifier Gets the identifier. Declaration string Identifier { get; } Property Value Type Description String The identifier. Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. Version Gets the version. Declaration string Version { get; } Property Value Type Description String The version."
  },
  "api/Forms9Patch.IBackground.html": {
    "href": "api/Forms9Patch.IBackground.html",
    "title": "Interface IBackground | Forms9Patch",
    "keywords": "Interface IBackground Interface for Forms9Patch elements with background features Inherited Members IShape.BackgroundColor IShape.HasShadow IShape.ShadowInverted IShape.OutlineColor IShape.OutlineRadius IShape.OutlineWidth IShape.BorderColor IShape.BorderRadius IShape.BorderWidth IShape.ElementShape IElement.InstanceId Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IBackground : IShape, IElement Properties BackgroundImage Gets or Sets the Background Image Declaration Image BackgroundImage { get; set; } Property Value Type Description Image"
  },
  "api/Forms9Patch.IButton.html": {
    "href": "api/Forms9Patch.IButton.html",
    "title": "Interface IButton | Forms9Patch",
    "keywords": "Interface IButton Interface for Forms9Patch button elements Inherited Members IButtonController.SendClicked() IButtonController.SendPressed() IButtonController.SendReleased() IVisualElementController.NativeSizeChanged() IVisualElementController.InvalidateMeasure(InvalidationTrigger) IVisualElementController.Batched IVisualElementController.DisableLayout IVisualElementController.EffectiveFlowDirection IVisualElementController.IsInNativeLayout IVisualElementController.IsNativeStateConsistent IVisualElementController.IsPlatformEnabled IVisualElementController.NavigationProxy IVisualElementController.BatchCommitted IVisualElementController.FocusChangeRequested IElementController.EffectIsAttached(String) IElementController.SetValueFromRenderer(BindableProperty, Object) IElementController.SetValueFromRenderer(BindablePropertyKey, Object) IElementController.Descendants() IElementController.EffectControlProvider IElementController.LogicalChildren IElementController.RealParent IButtonState.IconImage IButtonState.IconText IButtonState.TrailingIcon IButtonState.TintIcon IButtonState.IconColor IButtonState.IconFontFamily IButtonState.IconFontSize IButtonState.HasTightSpacing IButtonState.Spacing IButtonState.Orientation IBackground.BackgroundImage IShape.BackgroundColor IShape.HasShadow IShape.ShadowInverted IShape.OutlineColor IShape.OutlineRadius IShape.OutlineWidth IShape.BorderColor IShape.BorderRadius IShape.BorderWidth IShape.ElementShape ILabel.Text ILabel.HtmlText ILabel.FittedFontSize ILabel.SynchronizedFontSize ILabelStyle.TextColor ILabelStyle.HorizontalTextAlignment ILabelStyle.VerticalTextAlignment ILabelStyle.LineBreakMode ILabelStyle.AutoFit ILabelStyle.Lines ILabelStyle.MinFontSize IFontElement.FontAttributes IFontElement.FontFamily IFontElement.FontSize IElement.InstanceId Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IButton : IButtonController, IViewController, IVisualElementController, IElementController, IButtonState, IBackground, IShape, ILabel, ILabelStyle, IFontElement, IElement Properties Command Gets/Sets ICommand invoked when button is clicked Declaration ICommand Command { get; set; } Property Value Type Description ICommand CommandParameter Gets/Sets command parameter used when Command is invoked Declaration object CommandParameter { get; set; } Property Value Type Description Object HapticEffect Get/Sets the haptic effect to be performed when button is clicked Declaration HapticEffect HapticEffect { get; set; } Property Value Type Description HapticEffect HapticEffectMode Gets/Sets the haptic mode used to determine if a HapticEffect will occur when button is clicked Declaration EffectMode HapticEffectMode { get; set; } Property Value Type Description EffectMode IsEnabled Gets/Sets if the button is enabled Declaration bool IsEnabled { get; set; } Property Value Type Description Boolean IsSelected Gets/Sets if the button is selected Declaration bool IsSelected { get; set; } Property Value Type Description Boolean SelectedBackgroundColor Gets/Sets background color used when button is selected Declaration Color SelectedBackgroundColor { get; set; } Property Value Type Description Color SelectedTextColor Gets/Sets color of text when button is selected Declaration Color SelectedTextColor { get; set; } Property Value Type Description Color SoundEffect Get/Sets the sound effect to be performed when button is clicked Declaration SoundEffect SoundEffect { get; set; } Property Value Type Description SoundEffect SoundEffectMode Gets/Sets the sound mode used to determine if a SoundEffect will occur when button is clicked Declaration EffectMode SoundEffectMode { get; set; } Property Value Type Description EffectMode ToggleBehavior Gets/Sets if button stays in selected or unselected state with one click and requires a second click to return Declaration bool ToggleBehavior { get; set; } Property Value Type Description Boolean Extension Methods FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement)"
  },
  "api/Forms9Patch.IButtonState.html": {
    "href": "api/Forms9Patch.IButtonState.html",
    "title": "Interface IButtonState | Forms9Patch",
    "keywords": "Interface IButtonState Interface for the state of a button Inherited Members IBackground.BackgroundImage IShape.BackgroundColor IShape.HasShadow IShape.ShadowInverted IShape.OutlineColor IShape.OutlineRadius IShape.OutlineWidth IShape.BorderColor IShape.BorderRadius IShape.BorderWidth IShape.ElementShape ILabel.Text ILabel.HtmlText ILabel.FittedFontSize ILabel.SynchronizedFontSize ILabelStyle.TextColor ILabelStyle.HorizontalTextAlignment ILabelStyle.VerticalTextAlignment ILabelStyle.LineBreakMode ILabelStyle.AutoFit ILabelStyle.Lines ILabelStyle.MinFontSize IFontElement.FontAttributes IFontElement.FontFamily IFontElement.FontSize IElement.InstanceId Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IButtonState : IBackground, IShape, ILabel, ILabelStyle, IFontElement, IElement Properties HasTightSpacing controls if the button's icon will be justified to the edge of the button (false) or to be next to the button's text (true) Declaration bool HasTightSpacing { get; set; } Property Value Type Description Boolean IconColor Overrides the icon color as provided by the Button's TextColor (if TintIcon=true), the default TextColor (if IconText != null), or the IconImage colors Declaration Color IconColor { get; set; } Property Value Type Description Color IconFontFamily Gets or sets the font family for the IconText Declaration string IconFontFamily { get; set; } Property Value Type Description String IconFontSize Overrides the default icon font size (the button's FontSize). Declaration double IconFontSize { get; set; } Property Value Type Description Double IconImage gets/sets Forms9Patch.Image used for the button's icon Declaration Image IconImage { get; set; } Property Value Type Description Image IconText gets/sets HtmlText used to create the button's icon Declaration string IconText { get; set; } Property Value Type Description String Orientation controls if the button's text and icon are arranged horizontally or vertically Declaration StackOrientation Orientation { get; set; } Property Value Type Description StackOrientation Spacing controls the pixels between the button's icon and text (if HasTightSpacing is true) Declaration double Spacing { get; set; } Property Value Type Description Double TintIcon controls if the button's icon is tinted to match the button's TextColor Declaration bool TintIcon { get; set; } Property Value Type Description Boolean TrailingIcon controls if the button's icon is before or after the button's text Declaration bool TrailingIcon { get; set; } Property Value Type Description Boolean Extension Methods FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement)"
  },
  "api/Forms9Patch.ICellContentView.html": {
    "href": "api/Forms9Patch.ICellContentView.html",
    "title": "Interface ICellContentView | Forms9Patch",
    "keywords": "Interface ICellContentView Interface to set the cell height for a cell that contains the content of a Forms9Patch ListView cell. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface ICellContentView Properties CellHeight Gets the height of the cell if the list HasUnevenRows=true. Declaration double CellHeight { get; } Property Value Type Description Double The height of the cell. Methods OnAppearing() Called when cell is appearing Declaration void OnAppearing() OnDisappearing() Called when cell is disappearing Declaration void OnDisappearing()"
  },
  "api/Forms9Patch.ICellSwipeMenus.html": {
    "href": "api/Forms9Patch.ICellSwipeMenus.html",
    "title": "Interface ICellSwipeMenus | Forms9Patch",
    "keywords": "Interface ICellSwipeMenus Interface to implement Swipe Menus in content views for Forms9Patch ListView cells Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface ICellSwipeMenus Properties EndSwipeMenu Gets the end swipe menu items. Declaration List<SwipeMenuItem> EndSwipeMenu { get; } Property Value Type Description List < SwipeMenuItem > The end swipe menu. StartSwipeMenu Gets the start swipe menu items. Declaration List<SwipeMenuItem> StartSwipeMenu { get; } Property Value Type Description List < SwipeMenuItem > The start swipe menu. Methods OnSwipeMenuItemButtonTapped(Object, SwipeMenuItemTappedArgs) Ons the swipe menu item button tapped. Declaration void OnSwipeMenuItemButtonTapped(object sender, SwipeMenuItemTappedArgs args) Parameters Type Name Description Object sender Sender. SwipeMenuItemTappedArgs args Arguments."
  },
  "api/Forms9Patch.IElement.html": {
    "href": "api/Forms9Patch.IElement.html",
    "title": "Interface IElement | Forms9Patch",
    "keywords": "Interface IElement The foundation of Forms9Patch visual elements Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IElement Properties InstanceId Incremental instance id (starting at zero, increasing by one for each new instance) Declaration int InstanceId { get; } Property Value Type Description Int32"
  },
  "api/Forms9Patch.IExtendedShape.html": {
    "href": "api/Forms9Patch.IExtendedShape.html",
    "title": "Interface IExtendedShape | Forms9Patch",
    "keywords": "Interface IExtendedShape INTERNAL USE ONLY Inherited Members IShape.BackgroundColor IShape.HasShadow IShape.ShadowInverted IShape.OutlineColor IShape.OutlineRadius IShape.OutlineWidth IShape.BorderColor IShape.BorderRadius IShape.BorderWidth IShape.ElementShape IElement.InstanceId Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IExtendedShape : IShape, IElement Properties ExtendedElementSeparatorWidth INTERNAL USE ONLY Declaration float ExtendedElementSeparatorWidth { get; set; } Property Value Type Description Single ExtendedElementShape For internal use only. Goes beyond ElementShape to allow setting of segment shapes Declaration ExtendedElementShape ExtendedElementShape { get; set; } Property Value Type Description ExtendedElementShape ExtendedElementShapeOrientation Gets or sets the orientation of the elments outline shape. Declaration StackOrientation ExtendedElementShapeOrientation { get; set; } Property Value Type Description StackOrientation The shape orientation."
  },
  "api/Forms9Patch.IFontElement.html": {
    "href": "api/Forms9Patch.IFontElement.html",
    "title": "Interface IFontElement | Forms9Patch",
    "keywords": "Interface IFontElement Interface for Forms9Patch elements with Fonts. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IFontElement Properties FontAttributes Gets the font attributes. Declaration FontAttributes FontAttributes { get; } Property Value Type Description FontAttributes The font attributes. FontFamily Gets the font family. Declaration string FontFamily { get; } Property Value Type Description String The font family. FontSize Gets the size of the font. Declaration double FontSize { get; } Property Value Type Description Double The size of the font. Extension Methods FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement)"
  },
  "api/Forms9Patch.IFontFamilies.html": {
    "href": "api/Forms9Patch.IFontFamilies.html",
    "title": "Interface IFontFamilies | Forms9Patch",
    "keywords": "Interface IFontFamilies Font families interface used for backing service. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IFontFamilies Methods FontFamilies() primary method in FontFamilies interface. Declaration List<string> FontFamilies() Returns Type Description List < String > The families."
  },
  "api/Forms9Patch.IIsSelectedAble.html": {
    "href": "api/Forms9Patch.IIsSelectedAble.html",
    "title": "Interface IIsSelectedAble | Forms9Patch",
    "keywords": "Interface IIsSelectedAble Assures a class has the IsSelected property. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IIsSelectedAble Properties IsSelected Gets or sets a value indicating whether this IIsSelectedAble is selected. Declaration bool IsSelected { get; set; } Property Value Type Description Boolean true if is selected; otherwise, false ."
  },
  "api/Forms9Patch.IKeyboardService.html": {
    "href": "api/Forms9Patch.IKeyboardService.html",
    "title": "Interface IKeyboardService | Forms9Patch",
    "keywords": "Interface IKeyboardService Keyboard service. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IKeyboardService Properties Height Gets the current height of the on-screen keyboard Declaration double Height { get; } Property Value Type Description Double The height. IsHardwareKeyboardActive Gets a value indicating whether the hardware keyboard active. Declaration bool IsHardwareKeyboardActive { get; } Property Value Type Description Boolean true if is hardware keyboard active; otherwise, false . LanguageRegion Gets the language region. Declaration string LanguageRegion { get; } Property Value Type Description String The language region. Methods Hide() Forces the device's on screen keyboard to be hidden. Declaration void Hide()"
  },
  "api/Forms9Patch.ILabel.html": {
    "href": "api/Forms9Patch.ILabel.html",
    "title": "Interface ILabel | Forms9Patch",
    "keywords": "Interface ILabel Interface for Forms9Patch elements that have labels Inherited Members ILabelStyle.TextColor ILabelStyle.HorizontalTextAlignment ILabelStyle.VerticalTextAlignment ILabelStyle.LineBreakMode ILabelStyle.AutoFit ILabelStyle.Lines ILabelStyle.MinFontSize IFontElement.FontAttributes IFontElement.FontFamily IFontElement.FontSize IElement.InstanceId Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface ILabel : ILabelStyle, IFontElement, IElement Properties FittedFontSize gets the size of the rendered font IF it was changed per AutoFit (-1 if it was not changed) Declaration double FittedFontSize { get; } Property Value Type Description Double HtmlText Alternative Markup text Declaration string HtmlText { get; set; } Property Value Type Description String SynchronizedFontSize Allows manual override of FontSize and FittedFontSize to allow manual control of rendered font size Declaration double SynchronizedFontSize { get; set; } Property Value Type Description Double Text Plain text Declaration string Text { get; set; } Property Value Type Description String Extension Methods FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement)"
  },
  "api/Forms9Patch.ILabelStyle.html": {
    "href": "api/Forms9Patch.ILabelStyle.html",
    "title": "Interface ILabelStyle | Forms9Patch",
    "keywords": "Interface ILabelStyle Interface for Forms9Patch Label styling Inherited Members IFontElement.FontAttributes IFontElement.FontFamily IFontElement.FontSize Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface ILabelStyle : IFontElement Properties AutoFit Label's AutoFit algorithm Declaration AutoFit AutoFit { get; set; } Property Value Type Description AutoFit HorizontalTextAlignment Label's horizontal alignment Declaration TextAlignment HorizontalTextAlignment { get; set; } Property Value Type Description TextAlignment LineBreakMode Label's line break mode Declaration LineBreakMode LineBreakMode { get; set; } Property Value Type Description LineBreakMode Lines Manual override for number of lines to AutoFit or truncate Declaration int Lines { get; set; } Property Value Type Description Int32 MinFontSize Lower limit of AutoFit font size Declaration double MinFontSize { get; set; } Property Value Type Description Double TextColor Color of label's text Declaration Color TextColor { get; set; } Property Value Type Description Color VerticalTextAlignment Labe's vertical alignment Declaration TextAlignment VerticalTextAlignment { get; set; } Property Value Type Description TextAlignment Extension Methods FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement)"
  },
  "api/Forms9Patch.ILayout.html": {
    "href": "api/Forms9Patch.ILayout.html",
    "title": "Interface ILayout | Forms9Patch",
    "keywords": "Interface ILayout Interface for Forms9Patch layout elements Inherited Members IBackground.BackgroundImage IShape.BackgroundColor IShape.HasShadow IShape.ShadowInverted IShape.OutlineColor IShape.OutlineRadius IShape.OutlineWidth IShape.BorderColor IShape.BorderRadius IShape.BorderWidth IShape.ElementShape IElement.InstanceId Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface ILayout : IBackground, IShape, IElement Properties IgnoreChildren Don't relayout layout if child's layout/size changes Declaration bool IgnoreChildren { get; set; } Property Value Type Description Boolean Padding Padding Declaration Thickness Padding { get; set; } Property Value Type Description Thickness"
  },
  "api/Forms9Patch.Image.html": {
    "href": "api/Forms9Patch.Image.html",
    "title": "Class Image | Forms9Patch",
    "keywords": "Class Image Forms9Patch.Image element Inheritance Object BindableObject Element NavigableElement VisualElement View SKCanvasView Image Implements INotifyPropertyChanged IAnimatable ITabStopElement IGestureController IGestureRecognizers ISKCanvasViewController IImageController IViewController IVisualElementController IElementController IExtendedShape IShape IElement IDisposable Inherited Members SKCanvasView.IgnorePixelScalingProperty SKCanvasView.EnableTouchEventsProperty SKCanvasView.InvalidateSurface() SKCanvasView.OnTouch(SKTouchEventArgs) SKCanvasView.ISKCanvasViewController.OnPaintSurface(SKPaintSurfaceEventArgs) SKCanvasView.ISKCanvasViewController.OnTouch(SKTouchEventArgs) SKCanvasView.OnMeasure(Double, Double) SKCanvasView.CanvasSize SKCanvasView.IgnorePixelScaling SKCanvasView.EnableTouchEvents SKCanvasView.PaintSurface SKCanvasView.Touch SKCanvasView.ISKCanvasViewController.SurfaceInvalidated SKCanvasView.ISKCanvasViewController.GetCanvasSize View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildRemoved(Element) VisualElement.OnChildRemoved(Element, Int32) VisualElement.OnChildrenReordered() VisualElement.OnSizeAllocated(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class Image : SKCanvasView, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IGestureController, IGestureRecognizers, ISKCanvasViewController, IImage, IImageController, IViewController, IVisualElementController, IElementController, IExtendedShape, IBubbleShape, IShape, IElement, IDisposable Constructors Image() Constructor Declaration public Image() Image(Image) Convenience constructor for Forms9Patch.Image Declaration public Image(Image image) Parameters Type Name Description Image image Image(String, Assembly) Instantiates a new instance of Image from an MultiResource embedded resource Declaration public Image(string embeddedResourceId, Assembly assembly = null) Parameters Type Name Description String embeddedResourceId EmbeddedResourceId for image Assembly assembly Assembly in which embedded resource is embedded Image(Image) Initializes a new instance of the Image class. Declaration public Image(Image image) Parameters Type Name Description Image image Image. Image(ImageSource) Instantiates a new instance of Image from an imageSource Declaration public Image(ImageSource imageSource) Parameters Type Name Description ImageSource imageSource Fields AntiAliasProperty backing store for AntiAlias property Declaration public static readonly BindableProperty AntiAliasProperty Field Value Type Description BindableProperty BackgroundColorProperty backing store for BackgroundColor property Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty BorderColorProperty The boarder color property. Declaration public static readonly BindableProperty BorderColorProperty Field Value Type Description BindableProperty BorderRadiusProperty The boarder radius property. Declaration public static readonly BindableProperty BorderRadiusProperty Field Value Type Description BindableProperty BorderWidthProperty The boarder width property. Declaration public static readonly BindableProperty BorderWidthProperty Field Value Type Description BindableProperty CapInsetsProperty Backing store for the CapsInset bindable property. Declaration public static readonly BindableProperty CapInsetsProperty Field Value Type Description BindableProperty The end-cap insets (double or int) Remarks End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. ContentPaddingProperty Backing store for the ContentPadding bindable property. Declaration public static readonly BindableProperty ContentPaddingProperty Field Value Type Description BindableProperty ElementShapeProperty Backing store for the ElementShape property Declaration public static readonly BindableProperty ElementShapeProperty Field Value Type Description BindableProperty ExtendedElementSeparatorWidthProperty Backing store key for INTERNAL ExtendedElementSeparatorWidth property Declaration public static readonly BindableProperty ExtendedElementSeparatorWidthProperty Field Value Type Description BindableProperty ExtendedElementShapeOrientationProperty Backing store for the extended element shape orientation property. Declaration public static readonly BindableProperty ExtendedElementShapeOrientationProperty Field Value Type Description BindableProperty ExtendedElementShapeProperty backing store for ExtendedElementShape property Declaration public static readonly BindableProperty ExtendedElementShapeProperty Field Value Type Description BindableProperty FailActionProperty Backing store for Image FailAction property Declaration public static readonly BindableProperty FailActionProperty Field Value Type Description BindableProperty FillProperty Backing store for the Fill bindable property. Declaration public static readonly BindableProperty FillProperty Field Value Type Description BindableProperty HasShadowProperty Backing store for HasShadow property Declaration public static readonly BindableProperty HasShadowProperty Field Value Type Description BindableProperty IsLoadingProperty backing store for IsLoading property Declaration public static readonly BindableProperty IsLoadingProperty Field Value Type Description BindableProperty OutlineColorProperty Backing store for the outline color property. Declaration public static readonly BindableProperty OutlineColorProperty Field Value Type Description BindableProperty OutlineRadiusProperty Backing store for the outline radius property. Declaration public static readonly BindableProperty OutlineRadiusProperty Field Value Type Description BindableProperty OutlineWidthProperty Backing store for the outline width property. Declaration public static readonly BindableProperty OutlineWidthProperty Field Value Type Description BindableProperty PointerAxialPositionProperty Backing store for pointer axial position property. Declaration public static readonly BindableProperty PointerAxialPositionProperty Field Value Type Description BindableProperty PointerCornerRadiusProperty The pointer corner radius property. Declaration public static readonly BindableProperty PointerCornerRadiusProperty Field Value Type Description BindableProperty PointerDirectionProperty Backing store for pointer direction property. Declaration public static readonly BindableProperty PointerDirectionProperty Field Value Type Description BindableProperty PointerLengthProperty Backing store for pointer length property. Declaration public static readonly BindableProperty PointerLengthProperty Field Value Type Description BindableProperty PointerTipRadiusProperty Backing store for pointer tip radius property. Declaration public static readonly BindableProperty PointerTipRadiusProperty Field Value Type Description BindableProperty ShadowInvertedProperty backing store for ShadowInverted property Declaration public static readonly BindableProperty ShadowInvertedProperty Field Value Type Description BindableProperty SourceProperty backing store for Source property Declaration public static readonly BindableProperty SourceProperty Field Value Type Description BindableProperty TintColorProperty The tint property. Declaration public static readonly BindableProperty TintColorProperty Field Value Type Description BindableProperty Properties AntiAlias Gets/Sets the AntiAlias property Declaration public bool AntiAlias { get; set; } Property Value Type Description Boolean BackgroundColor Gets/Sets the BackgroundColor property Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color BorderColor Gets or sets the color of the boarder. Declaration public Color BorderColor { get; set; } Property Value Type Description Color The color of the boarder. BorderRadius Gets or sets the boarder radius. Declaration public float BorderRadius { get; set; } Property Value Type Description Single The boarder radius. BorderWidth Gets or sets the width of the boarder. Declaration public float BorderWidth { get; set; } Property Value Type Description Single The width of the boarder. CapInsets Gets or sets the end-cap insets. This is a bindable property. Declaration public Thickness CapInsets { get; set; } Property Value Type Description Thickness The end-cap insets. ContentPadding Gets content padding if Source is NinePatch image. Declaration public Thickness ContentPadding { get; } Property Value Type Description Thickness The content padding. ElementShape Gets/sets the geometry of the element Declaration public ElementShape ElementShape { get; set; } Property Value Type Description ElementShape FailAction controls value of Image FailAction property Declaration public FailAction FailAction { get; set; } Property Value Type Description FailAction Fill Fill behavior for nonscalable (not NinePatch or CapInsets not set) image. Declaration public Fill Fill { get; set; } Property Value Type Description Fill The fill method (AspectFill, AspectFit, Fill, Tile) HasShadow Get/sets if the shape (if any) behind the image has a shadow Declaration public bool HasShadow { get; set; } Property Value Type Description Boolean InstanceId Returns index instance ID for this class (starts at 0) Declaration public int InstanceId { get; } Property Value Type Description Int32 IsLoading Gets/Sets the IsLoading property Declaration public bool IsLoading { get; } Property Value Type Description Boolean OutlineColor Gets or sets the color of the outline. Declaration public Color OutlineColor { get; set; } Property Value Type Description Color The color of the outline. OutlineRadius Gets or sets the outline radius. Declaration public float OutlineRadius { get; set; } Property Value Type Description Single The outline radius. OutlineWidth Gets or sets the width of the outline. Declaration public float OutlineWidth { get; set; } Property Value Type Description Single The width of the outline. ShadowInverted Gets/Sets the ShadowInverted property Declaration public bool ShadowInverted { get; set; } Property Value Type Description Boolean Source Gets/Sets the Source property Declaration public ImageSource Source { get; set; } Property Value Type Description ImageSource SourceImageHeight Height of source Image Declaration public double SourceImageHeight { get; } Property Value Type Description Double SourceImageSize Size of source image Declaration public Size SourceImageSize { get; } Property Value Type Description Size SourceImageWidth Width of source image Declaration public double SourceImageWidth { get; } Property Value Type Description Double TintColor Gets or sets the image's tint. Declaration public Color TintColor { get; set; } Property Value Type Description Color The tint. Default is not to tint the image Methods ClearDownloadCache(String) Clears the cache of Forms9Patch images sourced using Xamarin.Forms.ImageSource.FromUri Declaration public static void ClearDownloadCache(string uri = null) Parameters Type Name Description String uri The URI of the image. If null, all cached images are cleared. ClearEmbeddedResourceCache(String, Assembly) Apps run faster when Embedded Resources image don't have to be extracted EVERY SINGLE TIME. This clears the cache of these images. Declaration public static void ClearEmbeddedResourceCache(string resourceId = null, Assembly assembly = null) Parameters Type Name Description String resourceId Assembly assembly Dispose() Dispose the image Declaration public void Dispose() Dispose(Boolean) Disposed the image Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing GetSizeRequest(Double, Double) Internal use only Declaration [Obsolete(\"Ugh\")] public override SizeRequest GetSizeRequest(double widthConstraint, double heightConstraint) Parameters Type Name Description Double widthConstraint Double heightConstraint Returns Type Description SizeRequest Overrides VisualElement.GetSizeRequest(Double, Double) OnBindingContextChanged() Called when the binding contex has changed. Declaration protected override void OnBindingContextChanged() Overrides View.OnBindingContextChanged() OnPaintSurface(SKPaintSurfaceEventArgs) Internal use only Declaration protected override void OnPaintSurface(SKPaintSurfaceEventArgs e) Parameters Type Name Description SKPaintSurfaceEventArgs e Overrides SKCanvasView.OnPaintSurface(SKPaintSurfaceEventArgs) OnPropertyChanged(String) Called when a property has changed Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Overrides Element.OnPropertyChanged(String) Operators Implicit(String to Image) Converts string (embedded resource id) into a Forms9Patch.Image Declaration public static implicit operator Image(string embeddedResourceId) Parameters Type Name Description String embeddedResourceId Returns Type Description Image Implicit(Image to Image) Converts Xamarin.Forms.Image to Forms9Patch.Image Declaration public static implicit operator Image(Image xamarinFormsImage) Parameters Type Name Description Image xamarinFormsImage Returns Type Description Image Explicit Interface Implementations IExtendedShape.ExtendedElementSeparatorWidth Declaration float IExtendedShape.ExtendedElementSeparatorWidth { get; set; } Returns Type Description Single IExtendedShape.ExtendedElementShape Gets/Sets the ExtendedElementShape property Declaration ExtendedElementShape IExtendedShape.ExtendedElementShape { get; set; } Returns Type Description ExtendedElementShape IExtendedShape.ExtendedElementShapeOrientation Gets or sets the orientation of the shape if it's an extended element shape Declaration StackOrientation IExtendedShape.ExtendedElementShapeOrientation { get; set; } Returns Type Description StackOrientation The forms9 patch. IS hape. extended element shape orientation. IImageController.GetLoadAsAnimation() Declaration bool IImageController.GetLoadAsAnimation() Returns Type Description Boolean IImageController.SetIsLoading(Boolean) Declaration void IImageController.SetIsLoading(bool isLoading) Parameters Type Name Description Boolean isLoading Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers SkiaSharp.Views.Forms.ISKCanvasViewController Xamarin.Forms.IImageController Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController IExtendedShape IShape IElement System.IDisposable Extension Methods ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.ImageButton.html": {
    "href": "api/Forms9Patch.ImageButton.html",
    "title": "Class ImageButton | Forms9Patch",
    "keywords": "Class ImageButton Depricated: Use StateButton Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView ContentView Frame Button StateButton ImageButton Implements INotifyPropertyChanged IAnimatable ITabStopElement IGestureController IGestureRecognizers ILayout ILayoutController ILayout IDisposable IButton IButtonController IViewController IVisualElementController IElementController IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Inherited Members StateButton.TextProperty StateButton.Text StateButton.HtmlTextProperty StateButton.HtmlText StateButton.IconImageProperty StateButton.IconImage StateButton.IconTextProperty StateButton.IconText StateButton.DefaultStateProperty StateButton.DefaultState StateButton.PressingStateProperty StateButton.PressingState StateButton.SelectedStateProperty StateButton.SelectedState StateButton.DisabledStateProperty StateButton.DisabledState StateButton.DisabledAndSelectedStateProperty StateButton.DisabledAndSelectedState StateButton.Dispose(Boolean) StateButton.Dispose() StateButton.UpdateState() StateButton.ShowState(ButtonState) StateButton.Tap() StateButton.OnUp(Object, DownUpEventArgs) StateButton.OnDown(Object, DownUpEventArgs) StateButton.OnLongPressing(Object, LongPressEventArgs) StateButton.OnLongPressed(Object, LongPressEventArgs) StateButton.OnPropertyChanged(String) Button.SelectedFontColorProperty Button.SelectedFontColor Button.StickyBehaviorProperty Button.StickyBehavior Button.ImageSourceProperty Button.ImageSource Button.TrailingImageProperty Button.TrailingImage Button.TintImageProperty Button.TintImage Button.IsEllipticalProperty Button.IsElliptical Button.FontColorProperty Button.FontColor Button.AlignmentProperty Button.Alignment Button.FitProperty Button.Fit Button.Content Button.IsLongPressEnabledProperty Button.IsLongPressEnabled Button.IsClippedProperty Button.IsClipped Button.SelectedTextColorProperty Button.SelectedTextColor Button.SelectedBackgroundColorProperty Button.SelectedBackgroundColor Button.CommandProperty Button.Command Button.CommandParameterProperty Button.CommandParameter Button.ToggleBehaviorProperty Button.ToggleBehavior Button.IsSelectedProperty Button.IsSelected Button.HapticEffectProperty Button.HapticEffect Button.HapticEffectModeProperty Button.HapticEffectMode Button.SoundEffectProperty Button.SoundEffect Button.SoundEffectModeProperty Button.SoundEffectMode Button.IconFontFamilyProperty Button.IconFontFamily Button.TrailingIconProperty Button.TrailingIcon Button.TintIconProperty Button.TintIcon Button.IconColorProperty Button.IconColor Button.IconFontSizeProperty Button.IconFontSize Button.HasTightSpacingProperty Button.HasTightSpacing Button.SpacingProperty Button.Spacing Button.OrientationProperty Button.Orientation Button.BackgroundColorProperty Button.BackgroundColor Button.HasShadowProperty Button.HasShadow Button.OutlineColorProperty Button.OutlineColor Button.BorderColorProperty Button.BorderColor Button.OutlineWidthProperty Button.OutlineWidth Button.BorderWidthProperty Button.BorderWidth Button.TextColorProperty Button.TextColor Button.HorizontalTextAlignmentProperty Button.HorizontalTextAlignment Button.VerticalTextAlignmentProperty Button.VerticalTextAlignment Button.LineBreakModeProperty Button.LineBreakMode Button.AutoFitProperty Button.AutoFit Button.LinesProperty Button.Lines Button.MinFontSizeProperty Button.MinFontSize Button.FontSizeProperty Button.FontSize Button.FontFamilyProperty Button.FontFamily Button.FontAttributesProperty Button.FontAttributes Button.DarkThemeProperty Button.DarkTheme Button.FittedFontSize Button.SynchronizedFontSize Button._iconImage Button._label Button._iconLabel Button._gestureListener Button._constructing Button.ToString() Button.OnTapped(Object, TapEventArgs) Button.UpdateElements(Boolean) Button.Clicked Button.Pressed Button.Released Button.Tapped Button.InvokeTapped(Object, EventArgs) Button.Selected Button.InvokeSelected(Object, EventArgs) Button.LongPressing Button.InvokeLongPressing(Object, EventArgs) Button.LongPressed Button.InvokeLongPressed(Object, EventArgs) Button.GetMinSize() Button.CheckIsClipped(Double, Double) Button.OnPropertyChanging(String) Button.SendTapped() Button.SendClicked() ContentView.ContentProperty ContentView.IgnoreChildrenProperty ContentView.IgnoreChildren ContentView.BackgroundImageProperty ContentView.BackgroundImage ContentView.LimitMinSizeToBackgroundImageSizeProperty ContentView.LimitMinSizeToBackgroundImageSize ContentView.ShadowInvertedProperty ContentView.ShadowInverted ContentView.OutlineRadiusProperty ContentView.OutlineRadius ContentView.BorderRadiusProperty ContentView.BorderRadius ContentView.ElementShapeProperty ContentView.ElementShape ContentView.InstanceId ContentView._f9pId ContentView._fallbackBackgroundImage ContentView.CurrentBackgroundImage ContentView.BaseInternalChildren ContentView.Description() ContentView.ShouldInvalidateOnChildAdded(View) ContentView.ShouldInvalidateOnChildRemoved(View) ContentView.OnChildMeasureInvalidated() ContentView.OnSizeRequest(Double, Double) ContentView.LayoutChildren(Double, Double, Double, Double) ContentView.OnBindingContextChanged() TemplatedView.ControlTemplateProperty TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Obsolete(\"Obsolete: Use Forms9Patch.StateButton\", true)] public class ImageButton : StateButton, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated, ILayout, IDisposable, IButton, IButtonController, IViewController, IVisualElementController, IElementController, IButtonState, IBackground, IShape, ILabel, ILabelStyle, IFontElement, IElement Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController ILayout System.IDisposable IButton Xamarin.Forms.IButtonController Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.ImageButtonState.html": {
    "href": "api/Forms9Patch.ImageButtonState.html",
    "title": "Class ImageButtonState | Forms9Patch",
    "keywords": "Class ImageButtonState OBSOLETE: Use ButtonState Inheritance Object BindableObject ButtonState ImageButtonState Implements INotifyPropertyChanged IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Inherited Members ButtonState.ImageProperty ButtonState.Image ButtonState.FontColorProperty ButtonState.FontColor ButtonState.IconImageProperty ButtonState.IconImage ButtonState.IconTextProperty ButtonState.IconText ButtonState.IconFontFamilyProperty ButtonState.IconFontFamily ButtonState.IconFontSizeProperty ButtonState.IconFontSize ButtonState.TrailingIconProperty ButtonState.TrailingIcon ButtonState.TintIconProperty ButtonState.TintIcon ButtonState.IconColorProperty ButtonState.IconColor ButtonState.HasTightSpacingProperty ButtonState.HasTightSpacing ButtonState.SpacingProperty ButtonState.Spacing ButtonState.OrientationProperty ButtonState.Orientation ButtonState.ElementShapeProperty ButtonState.ElementShape ButtonState.BackgroundImageProperty ButtonState.BackgroundImage ButtonState.BackgroundColorProperty ButtonState.BackgroundColor ButtonState.HasShadowProperty ButtonState.HasShadow ButtonState.ShadowInvertedProperty ButtonState.ShadowInverted ButtonState.OutlineColorProperty ButtonState.OutlineColor ButtonState.BorderColorProperty ButtonState.BorderColor ButtonState.OutlineRadiusProperty ButtonState.OutlineRadius ButtonState.BorderRadiusProperty ButtonState.BorderRadius ButtonState.OutlineWidthProperty ButtonState.OutlineWidth ButtonState.BorderWidthProperty ButtonState.BorderWidth ButtonState.InstanceId ButtonState.TextProperty ButtonState.Text ButtonState.HtmlTextProperty ButtonState.HtmlText ButtonState.TextColorProperty ButtonState.TextColor ButtonState.HorizontalTextAlignmentProperty ButtonState.HorizontalTextAlignment ButtonState.VerticalTextAlignmentProperty ButtonState.VerticalTextAlignment ButtonState.LineBreakModeProperty ButtonState.LineBreakMode ButtonState.AutoFitProperty ButtonState.AutoFit ButtonState.LinesProperty ButtonState.Lines ButtonState.MinFontSizeProperty ButtonState.MinFontSize ButtonState.ILabel.FittedFontSize ButtonState.ILabel.SynchronizedFontSize ButtonState.FontAttributesProperty ButtonState.FontAttributes ButtonState.FontSizeProperty ButtonState.FontSize ButtonState.FontFamilyProperty ButtonState.FontFamily ButtonState.OnPropertyChanged(String) BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Obsolete(\"Use ButtonState\", true)] public class ImageButtonState : ButtonState, INotifyPropertyChanged, IDynamicResourceHandler, IButtonState, IBackground, IShape, ILabel, ILabelStyle, IFontElement, IElement Implements System.ComponentModel.INotifyPropertyChanged IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Extension Methods FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement)"
  },
  "api/Forms9Patch.ImageSource.html": {
    "href": "api/Forms9Patch.ImageSource.html",
    "title": "Class ImageSource | Forms9Patch",
    "keywords": "Class ImageSource Forms9Patch ImageSource. Inheritance Object BindableObject Element ImageSource ImageSource Implements INotifyPropertyChanged IElementController Inherited Members ImageSource.Cancel() ImageSource.FromFile(String) ImageSource.FromResource(String, Type) ImageSource.FromStream(Func<Stream>) ImageSource.FromUri(Uri) ImageSource.OnLoadingCompleted(Boolean) ImageSource.OnLoadingStarted() ImageSource.OnSourceChanged() ImageSource.IsEmpty ImageSource.CancellationTokenSource Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.OnBindingContextChanged() Element.OnChildAdded(Element) Element.OnChildRemoved(Element) Element.OnChildRemoved(Element, Int32) Element.OnParentSet() Element.OnPropertyChanged(String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class ImageSource : ImageSource, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, IElementController, IStyleSelectable Methods FromMultiResource(String, Assembly) Cached selection of best fit multi-device / multi-resolution image embedded resource Declaration public static ImageSource FromMultiResource(string resourceId, Assembly assembly = null) Parameters Type Name Description String resourceId ResourceID without extension, resolution modifier, or device modifier Assembly assembly Assembly in which the resource can be found Returns Type Description ImageSource Xamarin.Forms.ImageSource FromResource(String, Assembly) Cached selection of resource (literally - no automated selection of device, resolution, or extension). Declaration public static ImageSource FromResource(string resourceId, Assembly assembly = null) Parameters Type Name Description String resourceId Path. Assembly assembly Assembly. Returns Type Description ImageSource The resource. FromResourceAsFile(String, Assembly) Load an EmbeddedResource as a Xamarin.Forms.FileImageSource Declaration public static FileImageSource FromResourceAsFile(string resourceId, Assembly assembly = null) Parameters Type Name Description String resourceId Assembly assembly Returns Type Description FileImageSource FromSvgText(String) Use a SVG string as a image source for a Forms9Patch image Declaration public static ImageSource FromSvgText(string svgText) Parameters Type Name Description String svgText Returns Type Description ImageSource Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IElementController Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ImageSourceExtensions.SameAs(ImageSource, ImageSource)"
  },
  "api/Forms9Patch.ImageSourceExtensions.html": {
    "href": "api/Forms9Patch.ImageSourceExtensions.html",
    "title": "Class ImageSourceExtensions | Forms9Patch",
    "keywords": "Class ImageSourceExtensions ImageSource extension methods Inheritance Object ImageSourceExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class ImageSourceExtensions Methods SameAs(ImageSource, ImageSource) Determins if two ImageSources are the same Declaration public static bool SameAs(this ImageSource thisSource, ImageSource otherSource) Parameters Type Name Description ImageSource thisSource ImageSource otherSource Returns Type Description Boolean"
  },
  "api/Forms9Patch.IMenuItem.html": {
    "href": "api/Forms9Patch.IMenuItem.html",
    "title": "Interface IMenuItem | Forms9Patch",
    "keywords": "Interface IMenuItem Menu item. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IMenuItem Properties HtmlText Segment's text with Html markup Declaration string HtmlText { get; set; } Property Value Type Description String IconFontFamily Gets or sets the font family for the IconText Declaration string IconFontFamily { get; set; } Property Value Type Description String IconFontSize Gets for set the font size for the IconText Declaration double IconFontSize { get; set; } Property Value Type Description Double IconImage Image for segment's icon (alternative to IconText) Declaration Image IconImage { get; set; } Property Value Type Description Image IconText HtmlText for segment's icon (alternative to IconImage) Declaration string IconText { get; set; } Property Value Type Description String Text Segment's text Declaration string Text { get; set; } Property Value Type Description String"
  },
  "api/Forms9Patch.IMimeItem.html": {
    "href": "api/Forms9Patch.IMimeItem.html",
    "title": "Interface IMimeItem | Forms9Patch",
    "keywords": "Interface IMimeItem Interface for a MimeItem Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IMimeItem Properties MimeType MimeType for an item Declaration string MimeType { get; } Property Value Type Description String Value Value of the item Declaration object Value { get; } Property Value Type Description Object"
  },
  "api/Forms9Patch.IMimeItem-1.html": {
    "href": "api/Forms9Patch.IMimeItem-1.html",
    "title": "Interface IMimeItem<T> | Forms9Patch",
    "keywords": "Interface IMimeItem<T> Generic Interface for ClipboardEntryITem Inherited Members IMimeItem.MimeType Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IMimeItem<T> : IMimeItem Type Parameters Name Description T Properties Value Gets the value of this IClipboardEntryItem Declaration T Value { get; } Property Value Type Description T The value."
  },
  "api/Forms9Patch.IMimeItemCollection.html": {
    "href": "api/Forms9Patch.IMimeItemCollection.html",
    "title": "Interface IMimeItemCollection | Forms9Patch",
    "keywords": "Interface IMimeItemCollection Interface for a Forms9Patch.ClipboardEntry Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IMimeItemCollection Properties Description Description of this ClipboardEntry on clipboard (really only applies to Android) Declaration string Description { get; } Property Value Type Description String HtmlText HtmlText item in this ClipboardEntry Declaration string HtmlText { get; } Property Value Type Description String Items Gets the items in this ClipboardEntry Declaration List<IMimeItem> Items { get; } Property Value Type Description List < IMimeItem > The items. PlainText Plain text item in this ClipboardEntry Declaration string PlainText { get; } Property Value Type Description String Extension Methods IMimeItemCollectionExtensions.MimeTypes(IMimeItemCollection) IMimeItemCollectionExtensions.GetFirstMimeItem<T>(IMimeItemCollection, String) IMimeItemCollectionExtensions.GetMimeItems<T>(IMimeItemCollection, String) IMimeItemCollectionExtensions.ContainsMimeType(IMimeItemCollection, String)"
  },
  "api/Forms9Patch.IMimeItemCollectionExtensions.html": {
    "href": "api/Forms9Patch.IMimeItemCollectionExtensions.html",
    "title": "Class IMimeItemCollectionExtensions | Forms9Patch",
    "keywords": "Class IMimeItemCollectionExtensions Interface for MimeItemCollections Inheritance Object IMimeItemCollectionExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class IMimeItemCollectionExtensions Methods AddBytesFromFile(MimeItemCollection, String, String, FailAction) Adds the content from file (as byte[]) to collection. Alternative to adding file as FileInfo as the Value of a MimeItem. Declaration public static byte[] AddBytesFromFile(this MimeItemCollection mimeItemCollection, string mimeType, string path, FailAction failAction = FailAction.ShowAlert) Parameters Type Name Description MimeItemCollection mimeItemCollection MIME item collection. String mimeType MIME type. String path File Path. FailAction failAction What to do if the method fails Returns Type Description Byte [] The bytes from file. ContainsMimeType(IMimeItemCollection, String) Does the MimeItemCollection contain at least one item of a given mimeType? Declaration public static bool ContainsMimeType(this IMimeItemCollection mimeItemCollection, string mimeType) Parameters Type Name Description IMimeItemCollection mimeItemCollection String mimeType Returns Type Description Boolean GetFirstMimeItem<T>(IMimeItemCollection, String) Gets the first MimeItem of a given MIME type. Declaration public static MimeItem<T> GetFirstMimeItem<T>(this IMimeItemCollection mimeItemCollection, string mimeType) Parameters Type Name Description IMimeItemCollection mimeItemCollection MimeItemCollection. String mimeType MIME type. Returns Type Description MimeItem <T> The first MIME item. Type Parameters Name Description T The 1st type parameter. GetMimeItems<T>(IMimeItemCollection, String) Gets the all MimeItems of a given MIME type Declaration public static List<MimeItem<T>> GetMimeItems<T>(this IMimeItemCollection mimeItemCollection, string mimeType) Parameters Type Name Description IMimeItemCollection mimeItemCollection MIME item collection. String mimeType MIME type. Returns Type Description List < MimeItem <T>> The MimeItems. Type Parameters Name Description T The 1st type parameter. MimeTypes(IMimeItemCollection) MIME types in the collection Declaration public static List<string> MimeTypes(this IMimeItemCollection mimeItemCollection) Parameters Type Name Description IMimeItemCollection mimeItemCollection MIME item collection. Returns Type Description List < String > The MIME types."
  },
  "api/Forms9Patch.Interfaces.html": {
    "href": "api/Forms9Patch.Interfaces.html",
    "title": "Namespace Forms9Patch.Interfaces | Forms9Patch",
    "keywords": "Namespace Forms9Patch.Interfaces Interfaces IAudioService Internal use only IHapticsService Internal use only"
  },
  "api/Forms9Patch.Interfaces.IAudioService.html": {
    "href": "api/Forms9Patch.Interfaces.IAudioService.html",
    "title": "Interface IAudioService | Forms9Patch",
    "keywords": "Interface IAudioService Internal use only Namespace : Forms9Patch.Interfaces Assembly : Forms9Patch.dll Syntax public interface IAudioService Methods PlaySoundEffect(SoundEffect, EffectMode) Internal use only Declaration void PlaySoundEffect(SoundEffect sound, EffectMode mode) Parameters Type Name Description SoundEffect sound EffectMode mode"
  },
  "api/Forms9Patch.Interfaces.IHapticsService.html": {
    "href": "api/Forms9Patch.Interfaces.IHapticsService.html",
    "title": "Interface IHapticsService | Forms9Patch",
    "keywords": "Interface IHapticsService Internal use only Namespace : Forms9Patch.Interfaces Assembly : Forms9Patch.dll Syntax public interface IHapticsService Methods Feedback(HapticEffect, EffectMode) Internal use only Declaration void Feedback(HapticEffect effect, EffectMode mode = EffectMode.Default) Parameters Type Name Description HapticEffect effect EffectMode mode"
  },
  "api/Forms9Patch.IPopup.html": {
    "href": "api/Forms9Patch.IPopup.html",
    "title": "Interface IPopup | Forms9Patch",
    "keywords": "Interface IPopup Forms9Patch Popup Interface. Inherited Members IBackground.BackgroundImage IShape.BackgroundColor IShape.HasShadow IShape.ShadowInverted IShape.OutlineColor IShape.OutlineRadius IShape.OutlineWidth IShape.BorderColor IShape.BorderRadius IShape.BorderWidth IShape.ElementShape IElement.InstanceId Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IPopup : IBackground, IShape, IElement Properties CancelOnBackButtonClick Gets or sets a value indicating whether this IPopup will cancel on a back button touch. Declaration bool CancelOnBackButtonClick { get; set; } Property Value Type Description Boolean CancelOnPageOverlayTouch Gets or sets a value indicating whether this IPopup will cancel on page overlay touch. Declaration bool CancelOnPageOverlayTouch { get; set; } Property Value Type Description Boolean true if cancel on page overlay touch; otherwise, false . HorizontalOptions Gets or sets the horizontal layout options. Declaration LayoutOptions HorizontalOptions { get; set; } Property Value Type Description LayoutOptions The horizontal options. IsVisible Gets or sets a value indicating whether this IPopup is visible. Declaration bool IsVisible { get; set; } Property Value Type Description Boolean true if is visible; otherwise, false . Margin Gets or sets the margin. Declaration Thickness Margin { get; set; } Property Value Type Description Thickness The margin. Padding Padding between popup frame and its content Declaration Thickness Padding { get; set; } Property Value Type Description Thickness PageOverlayColor Gets or sets the color of the background page overlay. Declaration Color PageOverlayColor { get; set; } Property Value Type Description Color The color of the page overlay. Parameter Object you can set for processing, typically after popup has been acted upon. Declaration object Parameter { get; set; } Property Value Type Description Object PopAfter Gets or sets the TimeSpan before Declaration TimeSpan PopAfter { get; set; } Property Value Type Description TimeSpan The fade at. Target Gets or sets the target of the popup pointer (if applicable). Declaration VisualElement Target { get; set; } Property Value Type Description VisualElement The target. VerticalOptions Gets or sets the vertical layout options. Declaration LayoutOptions VerticalOptions { get; set; } Property Value Type Description LayoutOptions The vertical options."
  },
  "api/Forms9Patch.IPrintService.html": {
    "href": "api/Forms9Patch.IPrintService.html",
    "title": "Interface IPrintService | Forms9Patch",
    "keywords": "Interface IPrintService Print service. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IPrintService Methods CanPrint() Cans the print. Declaration bool CanPrint() Returns Type Description Boolean true , if print was caned, false otherwise. PrintAsync(String, String, FailAction) Print the specified HTML with jobName Declaration Task PrintAsync(string html, string jobName, FailAction failAction = FailAction.ShowAlert) Parameters Type Name Description String html String jobName FailAction failAction What to do if the method fails Returns Type Description Task PrintAsync(WebView, String, FailAction) Print the specified webView and jobName. Declaration Task PrintAsync(WebView webView, string jobName, FailAction failAction = FailAction.ShowAlert) Parameters Type Name Description WebView webView Web view. String jobName Job name. FailAction failAction What to do if the method fails Returns Type Description Task"
  },
  "api/Forms9Patch.ISegment.html": {
    "href": "api/Forms9Patch.ISegment.html",
    "title": "Interface ISegment | Forms9Patch",
    "keywords": "Interface ISegment Interface for Forms9Patch.Segment elements Inherited Members IMenuItem.IconImage IMenuItem.IconText IMenuItem.Text IMenuItem.HtmlText IMenuItem.IconFontFamily IMenuItem.IconFontSize Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface ISegment : IMenuItem Properties Command Command to be invoked upon segment being clicked Declaration ICommand Command { get; set; } Property Value Type Description ICommand CommandParameter Parameter passed with command that is invoked when segment is clicked Declaration object CommandParameter { get; set; } Property Value Type Description Object FontAttributes Segment's label's font attributes Declaration FontAttributes FontAttributes { get; set; } Property Value Type Description FontAttributes IsEnabled Is segment enabled? Declaration bool IsEnabled { get; set; } Property Value Type Description Boolean IsSelected Is segment selected Declaration bool IsSelected { get; set; } Property Value Type Description Boolean Orientation Orientation of Segemnt's icon to its text Declaration StackOrientation Orientation { get; set; } Property Value Type Description StackOrientation TextColor TextColor Declaration Color TextColor { get; set; } Property Value Type Description Color VisualElement Gets the VisualElement used for the Segment Declaration VisualElement VisualElement { get; } Property Value Type Description VisualElement"
  },
  "api/Forms9Patch.ISettings.html": {
    "href": "api/Forms9Patch.ISettings.html",
    "title": "Interface ISettings | Forms9Patch",
    "keywords": "Interface ISettings Interface for platform settings Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface ISettings Properties IncludedAssemblies Needed by UWP implemenation to assure Xamarin.Forms works AND EmbeddedResource loading works Declaration List<Assembly> IncludedAssemblies { get; } Property Value Type Description List < Assembly > Methods LazyInit() Lazy initializes the Forms9Patch native code for use by Xamarin Previewer Declaration void LazyInit()"
  },
  "api/Forms9Patch.IShape.html": {
    "href": "api/Forms9Patch.IShape.html",
    "title": "Interface IShape | Forms9Patch",
    "keywords": "Interface IShape Forms9Patch RoundedBox interface Inherited Members IElement.InstanceId Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IShape : IElement Properties BackgroundColor Gets or sets the color of the background. Declaration Color BackgroundColor { get; set; } Property Value Type Description Color The color of the background. BorderColor Gets or sets the color of the border. Declaration Color BorderColor { get; set; } Property Value Type Description Color The color of the border. BorderRadius Gets or sets the boarder radius. Declaration float BorderRadius { get; set; } Property Value Type Description Single The boarder radius. BorderWidth Gets or sets the width of the boarder. Declaration float BorderWidth { get; set; } Property Value Type Description Single The width of the boarder. ElementShape Gets or sets the geometry of the shape Declaration ElementShape ElementShape { get; set; } Property Value Type Description ElementShape HasShadow Gets or sets a value indicating whether this instance has shadow. Declaration bool HasShadow { get; set; } Property Value Type Description Boolean true if this instance has shadow; otherwise, false . OutlineColor Gets or sets the color of the outline. Declaration Color OutlineColor { get; set; } Property Value Type Description Color The color of the outline. OutlineRadius Gets or sets the outline radius. Declaration float OutlineRadius { get; set; } Property Value Type Description Single The outline radius. OutlineWidth Gets or sets the width of the outline. Declaration float OutlineWidth { get; set; } Property Value Type Description Single The width of the outline. ShadowInverted Gets or sets a value indicating whether this IShape shadow is inverted. Declaration bool ShadowInverted { get; set; } Property Value Type Description Boolean true if shadow inverted; otherwise, false ."
  },
  "api/Forms9Patch.ItemTappedEventArgs.html": {
    "href": "api/Forms9Patch.ItemTappedEventArgs.html",
    "title": "Class ItemTappedEventArgs | Forms9Patch",
    "keywords": "Class ItemTappedEventArgs Item tapped event arguments. Inheritance Object EventArgs ItemTappedEventArgs ItemTappedEventArgs Inherited Members ItemTappedEventArgs.Group ItemTappedEventArgs.Item ItemTappedEventArgs.ItemIndex EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class ItemTappedEventArgs : ItemTappedEventArgs Fields Handled Set to true if you have handled this event and don't want other handlers to have a crack at it Declaration public bool Handled Field Value Type Description Boolean Properties CellView Gets the cell view bound to the tapped item. Declaration public View CellView { get; } Property Value Type Description View The cell view. Index Gets the index. Declaration public int Index { get; } Property Value Type Description Int32 The index."
  },
  "api/Forms9Patch.IText.html": {
    "href": "api/Forms9Patch.IText.html",
    "title": "Interface IText | Forms9Patch",
    "keywords": "Interface IText Internal Use ONLY Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IText Properties Text Internal use only Declaration string Text { get; } Property Value Type Description String"
  },
  "api/Forms9Patch.IToPdfService.html": {
    "href": "api/Forms9Patch.IToPdfService.html",
    "title": "Interface IToPdfService | Forms9Patch",
    "keywords": "Interface IToPdfService Html to pdf service. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IToPdfService Properties IsAvailable Determines if PDF printing is available on this platform; Declaration bool IsAvailable { get; } Property Value Type Description Boolean Methods ToPdfAsync(String, String, PageSize, PageMargin) Html to PNG interface Declaration Task<ToFileResult> ToPdfAsync(string html, string fileName, PageSize pageSize, PageMargin margin) Parameters Type Name Description String html Html text (source) String fileName name of PDF file (without suffix) to be stored in local storage PageSize pageSize Forms9Patch.PageSize for media size of PDF pages. PageMargin margin Forms9Patch.PageMargin for margins of PDF pages. Returns Type Description Task < ToFileResult > ToPdfAsync(WebView, String, PageSize, PageMargin) WebView to PNG interface Declaration Task<ToFileResult> ToPdfAsync(WebView webView, string fileName, PageSize pageSize, PageMargin margin) Parameters Type Name Description WebView webView Xamarin.Forms.WebView (source) String fileName name of PDF file (without suffix) to be stored in local storage PageSize pageSize Forms9Patch.PageSize for media size of PDF pages. PageMargin margin Forms9Patch.PageMargin for margins of PDF pages. Returns Type Description Task < ToFileResult >"
  },
  "api/Forms9Patch.IToPngService.html": {
    "href": "api/Forms9Patch.IToPngService.html",
    "title": "Interface IToPngService | Forms9Patch",
    "keywords": "Interface IToPngService Html to pdf service. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public interface IToPngService Methods ToPngAsync(String, String, Int32) Html to PNG interface Declaration Task<ToFileResult> ToPngAsync(string html, string fileName, int width) Parameters Type Name Description String html Html text (source) String fileName Name of file (without suffix) for local file storage. Int32 width Width (in pixels) of PNG. Default is PageSize.Default * 72 * 4; Returns Type Description Task < ToFileResult > ToPngAsync(WebView, String, Int32) WebView to PNG interface Declaration Task<ToFileResult> ToPngAsync(WebView webView, string fileName, int width) Parameters Type Name Description WebView webView Xamarin.Forms.WebView (source) String fileName Name of file (without suffix) for local file storage. Int32 width Width (in pixels) of PNG. Default is PageSize.Default * 72 * 4; Returns Type Description Task < ToFileResult >"
  },
  "api/Forms9Patch.KeyboardService.html": {
    "href": "api/Forms9Patch.KeyboardService.html",
    "title": "Class KeyboardService | Forms9Patch",
    "keywords": "Class KeyboardService Keyboard service. Inheritance Object KeyboardService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class KeyboardService Properties Height Gets the current height of the on-screen software keyboard Declaration public static double Height { get; } Property Value Type Description Double The height. IsHardwareKeyboardActive Gets a value indicating whether the hardware keyboard is active. Declaration public static bool IsHardwareKeyboardActive { get; } Property Value Type Description Boolean true if is hardware keyboard active; otherwise, false . LanguageRegion Gets the Keyboard's language-region. Declaration public static string LanguageRegion { get; } Property Value Type Description String The language region. Methods Activate() Activates the Keyboard Service (required to monitor software keyboard height) Declaration public static void Activate() Hide() Forces the device's on screen keyboard to be hidden Declaration public static void Hide() OnVisiblityChange(KeyboardVisibilityChange) Ons the visiblity change. Declaration public static void OnVisiblityChange(KeyboardVisibilityChange state) Parameters Type Name Description KeyboardVisibilityChange state State. Events HeightChanged Occurs when virtual keyboard height has changed. Declaration public static event EventHandler<double> HeightChanged Event Type Type Description EventHandler < Double > Hidden Occurs when hidden. Declaration public static event EventHandler Hidden Event Type Type Description EventHandler Shown Occurs when shown. Declaration public static event EventHandler Shown Event Type Type Description EventHandler"
  },
  "api/Forms9Patch.KeyboardVisibilityChange.html": {
    "href": "api/Forms9Patch.KeyboardVisibilityChange.html",
    "title": "Enum KeyboardVisibilityChange | Forms9Patch",
    "keywords": "Enum KeyboardVisibilityChange Keyboard visibility change. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum KeyboardVisibilityChange Fields Name Description Hidden The keyboard will hide/has been hidden. Shown The keyboard will show/has shown."
  },
  "api/Forms9Patch.KeyClicks.html": {
    "href": "api/Forms9Patch.KeyClicks.html",
    "title": "Enum KeyClicks | Forms9Patch",
    "keywords": "Enum KeyClicks The different haptic modes Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Flags] public enum KeyClicks Fields Name Description Audio GIVE ME TOUCH SOUNDS! AudioHaptic Both audio and haptic Default The system default haptic, if detectable (which it is not on iOS) Haptic GIVE ME TOUCH Haptic Feedback! Off No haptic response"
  },
  "api/Forms9Patch.Label.html": {
    "href": "api/Forms9Patch.Label.html",
    "title": "Class Label | Forms9Patch",
    "keywords": "Class Label Forms9Patch.Label Inheritance Object BindableObject Element NavigableElement VisualElement View Label Label Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers IElementConfiguration < Label > IDecorableTextElement ILabel ILabelStyle IFontElement IElement Inherited Members Label.HorizontalTextAlignmentProperty Label.VerticalTextAlignmentProperty Label.TextColorProperty Label.CharacterSpacingProperty Label.FontProperty Label.TextProperty Label.FontFamilyProperty Xamarin.Forms.Label.FontSizeProperty Label.FontAttributesProperty Label.TextTransformProperty Label.TextDecorationsProperty Label.FormattedTextProperty Label.LineBreakModeProperty Label.LineHeightProperty Label.MaxLinesProperty Label.PaddingProperty Label.TextTypeProperty Label.UpdateFormsText(String, TextTransform) Label.OnBindingContextChanged() Label.On<T>() Label.GetChildElements(Point) Label.TextTransform Label.FormattedText Label.HorizontalTextAlignment Label.LineBreakMode Label.Text Label.TextColor Label.CharacterSpacing Label.VerticalTextAlignment Label.FontAttributes Label.TextDecorations Label.FontFamily Label.FontSize Label.LineHeight Label.MaxLines Label.Padding Label.TextType View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildRemoved(Element) VisualElement.OnChildRemoved(Element, Int32) VisualElement.OnChildrenReordered() VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [ContentProperty(\"HtmlText\")] public class Label : Label, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, IFontElement, ITextElement, ITextAlignmentElement, ILineHeightElement, IElementConfiguration<Label>, IDecorableTextElement, IPaddingElement, ILabel, ILabelStyle, IFontElement, IElement Constructors Label() Initializes a new instance of the Label class. Declaration public Label() Label(String) Convenience constructor for Forms9Patch.Label instance Declaration public Label(string text) Parameters Type Name Description String text Fields ActualFontSizeProperty OBSOLETE: Use FittedFontSizeProperty instead Declaration [Obsolete(\"Use FittedFontSizeProperty instead.\", true)] public static readonly BindableProperty ActualFontSizeProperty Field Value Type Description BindableProperty AutoFitProperty The backing store for the AutoFit property. Declaration public static readonly BindableProperty AutoFitProperty Field Value Type Description BindableProperty FitProperty backing store for Fit property Declaration [Obsolete(\"FitProperty is obsolete. Use AutoFitProperty instead.\")] public static readonly BindableProperty FitProperty Field Value Type Description BindableProperty FittedFontSizeProperty Backing store for the actual font size property after fitting. Declaration public static readonly BindableProperty FittedFontSizeProperty Field Value Type Description BindableProperty HtmlTextProperty Backing store for the formatted text property. Declaration public static readonly BindableProperty HtmlTextProperty Field Value Type Description BindableProperty IsDynamicallySizedProperty The backing store for fixed size property. Declaration public static readonly BindableProperty IsDynamicallySizedProperty Field Value Type Description BindableProperty LinesProperty The backing store for the lines property. Declaration public static readonly BindableProperty LinesProperty Field Value Type Description BindableProperty MinFontSizeProperty The backing store for the minimum font size property. Declaration public static readonly BindableProperty MinFontSizeProperty Field Value Type Description BindableProperty SynchronizedFontSizeProperty backing store for SynchronizedFontSize property Declaration public static readonly BindableProperty SynchronizedFontSizeProperty Field Value Type Description BindableProperty Properties ActualFontSize OBSOLETE: Use FittedFontSize property instead Declaration [Obsolete(\"Use FittedFontSize property instead.\", true)] public double ActualFontSize { get; set; } Property Value Type Description Double AutoFit Gets or sets the fit method. Ignored if the Width and Height is not fixed by a parent, HeightRequest, and/or WidthRequest. Declaration public AutoFit AutoFit { get; set; } Property Value Type Description AutoFit The fit. DefaultFontSize The default size of labels rendered on the current platform Declaration public static double DefaultFontSize { get; } Property Value Type Description Double Fit Gets/Sets the Fit property Declaration [Obsolete(\"Fit property is obsolete. Use AutoFit property instead.\")] public LabelFit Fit { get; set; } Property Value Type Description LabelFit FittedFontSize Gets the actual size of the font (after fitting). Declaration public double FittedFontSize { get; } Property Value Type Description Double The actual size of the font. HtmlText Gets or sets the formatted text. Declaration public string HtmlText { get; set; } Property Value Type Description String The formatted text. InstanceId Incremental identity (starting at 0) of instance of this class Declaration public int InstanceId { get; } Property Value Type Description Int32 IsDynamicallySized Gets if the size of the label has been fixed by a parent element, the HeightRequest and/or the WidthRequest properties. Declaration public bool IsDynamicallySized { get; } Property Value Type Description Boolean Is the label fixed in size. Lines Gets or sets the number of lines used in a fit. If zero and fit is not AutoFit.None or ignored, will maximize the font size to best width and height with minimum number of lines. Declaration public int Lines { get; set; } Property Value Type Description Int32 The lines. MinFontSize Gets or sets the minimum size of the font allowed during an autofit. Declaration public double MinFontSize { get; set; } Property Value Type Description Double The minimum size of the font. Default=4 SynchronizedFontSize Gets/Sets the SynchronizedFontSize property Declaration public double SynchronizedFontSize { get; set; } Property Value Type Description Double Methods GetSizeRequest(Double, Double) Gets the size request. Declaration [Obsolete(\"Use OnMeasure\")] public override SizeRequest GetSizeRequest(double widthConstraint, double heightConstraint) Parameters Type Name Description Double widthConstraint The available width that a parent element can allocated to a child. Value will be between 0 and double.PositiveInfinity. Double heightConstraint The available height that a parent element can allocated to a child. Value will be between 0 and double.PositiveInfinity. Returns Type Description SizeRequest The size request. Overrides VisualElement.GetSizeRequest(Double, Double) HardForceLayout() Because InvalidateMeasure doesn't always work Declaration public void HardForceLayout() IndexAtPoint(Point) Gets unmarked string index at touch point. Declaration public int IndexAtPoint(Point point) Parameters Type Name Description Point point Point. Returns Type Description Int32 The at point. OnMeasure(Double, Double) Funny you asked! Declaration protected override SizeRequest OnMeasure(double widthConstraint, double heightConstraint) Parameters Type Name Description Double widthConstraint Double heightConstraint Returns Type Description SizeRequest Overrides VisualElement.OnMeasure(Double, Double) OnPropertyChanged(String) Ons the property changed. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides Element.OnPropertyChanged(String) OnSizeAllocated(Double, Double) Called when the size of the label has been allocate by Xamarin layout system Declaration protected override void OnSizeAllocated(double width, double height) Parameters Type Name Description Double width Double height Overrides VisualElement.OnSizeAllocated(Double, Double) OnSizeRequest(Double, Double) Just how big is this going to be? Declaration protected override SizeRequest OnSizeRequest(double widthConstraint, double heightConstraint) Parameters Type Name Description Double widthConstraint Double heightConstraint Returns Type Description SizeRequest Overrides VisualElement.OnSizeRequest(Double, Double) SizeForWidthAndFontSize(Double, Double) Sizes the size of the for width and font. Declaration public Size SizeForWidthAndFontSize(double width, double fontSize) Parameters Type Name Description Double width Width. Double fontSize Font size. Returns Type Description Size The for width and font size. ToString() String representation of Label Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Events ActionTagTapped Occurs when HtmlText wrapped with an action (<a>) tag is tapped. Declaration public event EventHandler<ActionTagEventArgs> ActionTagTapped Event Type Type Description EventHandler < ActionTagEventArgs > FittedFontSizeChanged Occurs when label has performed fitting algorithm. A value of -1 indicates that value of the FontSize property was used. Declaration public event EventHandler<double> FittedFontSizeChanged Event Type Type Description EventHandler < Double > Operators Explicit(Label to String) Declaration public static explicit operator string (Label label) Parameters Type Name Description Label label Label. Returns Type Description String Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.IElementConfiguration<TElement> Xamarin.Forms.IDecorableTextElement ILabel ILabelStyle IFontElement IElement Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.LabelFit.html": {
    "href": "api/Forms9Patch.LabelFit.html",
    "title": "Enum LabelFit | Forms9Patch",
    "keywords": "Enum LabelFit OBSOLETE: USE AutoFit Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Obsolete(\"Use AutoFit instead.\")] public enum LabelFit Fields Name Description Lines None Width"
  },
  "api/Forms9Patch.LayoutOptionsExtensions.html": {
    "href": "api/Forms9Patch.LayoutOptionsExtensions.html",
    "title": "Class LayoutOptionsExtensions | Forms9Patch",
    "keywords": "Class LayoutOptionsExtensions Layout options extensions. Inheritance Object LayoutOptionsExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class LayoutOptionsExtensions Methods IsEqualTo(LayoutOptions, LayoutOptions) Determines if two LayoutOptinos are the same Declaration public static bool IsEqualTo(this LayoutOptions o1, LayoutOptions o2) Parameters Type Name Description LayoutOptions o1 LayoutOptions o2 Returns Type Description Boolean ToString(LayoutOptions) Because this should have been done by Xamarin Declaration public static string ToString(this LayoutOptions layoutOptions) Parameters Type Name Description LayoutOptions layoutOptions Returns Type Description String ToTextAlignment(LayoutOptions) Tos the text alignment. Declaration public static TextAlignment ToTextAlignment(this LayoutOptions options) Parameters Type Name Description LayoutOptions options Options. Returns Type Description TextAlignment The text alignment."
  },
  "api/Forms9Patch.ListView.html": {
    "href": "api/Forms9Patch.ListView.html",
    "title": "Class ListView | Forms9Patch",
    "keywords": "Class ListView FormsDragNDropListView List view. Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView ContentView Frame ListView Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers ILayout ILayoutController ILayout IBackground IShape IDisposable IElement Inherited Members ContentView.IgnoreChildrenProperty ContentView.IgnoreChildren ContentView.BackgroundImageProperty ContentView.BackgroundImage ContentView.LimitMinSizeToBackgroundImageSizeProperty ContentView.LimitMinSizeToBackgroundImageSize ContentView.BackgroundColorProperty ContentView.BackgroundColor ContentView.HasShadowProperty ContentView.HasShadow ContentView.ShadowInvertedProperty ContentView.ShadowInverted ContentView.OutlineColorProperty ContentView.OutlineColor ContentView.BorderColorProperty ContentView.BorderColor ContentView.OutlineRadiusProperty ContentView.OutlineRadius ContentView.BorderRadiusProperty ContentView.BorderRadius ContentView.OutlineWidthProperty ContentView.OutlineWidth ContentView.BorderWidthProperty ContentView.BorderWidth ContentView.ElementShapeProperty ContentView.ElementShape ContentView.InstanceId ContentView._f9pId ContentView._fallbackBackgroundImage ContentView.CurrentBackgroundImage ContentView.BaseInternalChildren ContentView.Dispose() ContentView.Description() ContentView.ToString() ContentView.ShouldInvalidateOnChildAdded(View) ContentView.ShouldInvalidateOnChildRemoved(View) ContentView.OnChildMeasureInvalidated() ContentView.OnSizeRequest(Double, Double) ContentView.OnBindingContextChanged() TemplatedView.ControlTemplateProperty TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class ListView : Frame, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated, ILayout, IBackground, IShape, IDisposable, IElement Constructors ListView() Initializes a new instance of the ListView class. Declaration public ListView() ListView(ListViewCachingStrategy) Initializes a new instance of the ListView class. Declaration public ListView(ListViewCachingStrategy cachingStrategy) Parameters Type Name Description ListViewCachingStrategy cachingStrategy Caching strategy. Fields ContentProperty There is nothing to see here. Move on. Declaration [Obsolete(\"Invalid property\", true)] public static readonly BindableProperty ContentProperty Field Value Type Description BindableProperty EditableProperty The editable property backing store. Declaration public static readonly BindableProperty EditableProperty Field Value Type Description BindableProperty FooterProperty backing store for Footer property Declaration public static readonly BindableProperty FooterProperty Field Value Type Description BindableProperty FooterTemplateProperty backing store for FooterTemplate property Declaration public static readonly BindableProperty FooterTemplateProperty Field Value Type Description BindableProperty GroupHeaderBackgroundColorProperty The group header background color property backing store Declaration public static readonly BindableProperty GroupHeaderBackgroundColorProperty Field Value Type Description BindableProperty GroupHeaderRowHeightProperty backing store for GroupHeaderRowHeight property Declaration public static readonly BindableProperty GroupHeaderRowHeightProperty Field Value Type Description BindableProperty GroupHeaderTemplateProperty backing store for GroupHeaderTemplate property Declaration public static readonly BindableProperty GroupHeaderTemplateProperty Field Value Type Description BindableProperty GroupToggleBehaviorProperty The backing store for the ListViews's GroupToggleBehavior property. Declaration public static readonly BindableProperty GroupToggleBehaviorProperty Field Value Type Description BindableProperty HeaderProperty backing store for Header property Declaration public static readonly BindableProperty HeaderProperty Field Value Type Description BindableProperty HeaderTemplateProperty backing store for HeaderTemplate property Declaration public static readonly BindableProperty HeaderTemplateProperty Field Value Type Description BindableProperty IsGroupingEnabledProperty backing store for IsGroupingEnabled property Declaration public static readonly BindableProperty IsGroupingEnabledProperty Field Value Type Description BindableProperty ItemsSourceProperty backing store for ItemsSource property Declaration public static readonly BindableProperty ItemsSourceProperty Field Value Type Description BindableProperty ItemTemplatesProperty backing store for ItemTemplates property Declaration public static readonly BindableProperty ItemTemplatesProperty Field Value Type Description BindableProperty RowHeightProperty backing store for RowHeight property Declaration public static readonly BindableProperty RowHeightProperty Field Value Type Description BindableProperty SelectedCellBackgroundColorProperty The selected cell background color property. Declaration public static readonly BindableProperty SelectedCellBackgroundColorProperty Field Value Type Description BindableProperty SelectedItemProperty backing store for SelectedItem property Declaration public static readonly BindableProperty SelectedItemProperty Field Value Type Description BindableProperty SelectedItemsPropertyKey The selected items property. Declaration public static readonly BindablePropertyKey SelectedItemsPropertyKey Field Value Type Description BindablePropertyKey SeparatorColorProperty backing store for SeparatorColor property Declaration public static readonly BindableProperty SeparatorColorProperty Field Value Type Description BindableProperty SeparatorHeightProperty backing store for SeparatorHeight property Declaration public static readonly BindableProperty SeparatorHeightProperty Field Value Type Description BindableProperty SeparatorLeftIndentProperty backing store for SeparatorLeftIndent property Declaration public static readonly BindableProperty SeparatorLeftIndentProperty Field Value Type Description BindableProperty SeparatorRightIndentProperty backing store for SeparatorRightIndent property Declaration public static readonly BindableProperty SeparatorRightIndentProperty Field Value Type Description BindableProperty SeparatorVisibilityProperty backing store for SeparatorVisibility property Declaration public static readonly BindableProperty SeparatorVisibilityProperty Field Value Type Description BindableProperty Properties Content There is nothing to see here. Move on. Declaration [Obsolete(\"Invalid property\", true)] public View Content { get; set; } Property Value Type Description View The content. Editable Gets or sets a value indicating whether this ListView is editable - cells may be moved or deleted based upon the response from the CanDrag CanDrop CanDelete delegate methods. Declaration public bool Editable { get; set; } Property Value Type Description Boolean true if editable; otherwise, false . Footer Gets/Sets the Footer property Declaration public object Footer { get; set; } Property Value Type Description Object FooterTemplate Gets/Sets the FooterTemplate property Declaration public DataTemplate FooterTemplate { get; set; } Property Value Type Description DataTemplate GroupHeaderBackgroundColor Gets or sets the color of the group header background. Declaration public Color GroupHeaderBackgroundColor { get; set; } Property Value Type Description Color The color of the group header background. GroupHeaderRowHeight Gets/Sets the GroupHeaderRowHeight property Declaration public double GroupHeaderRowHeight { get; set; } Property Value Type Description Double GroupHeaderTemplate Gets/Sets the GroupHeaderTemplate property Declaration public GroupHeaderTemplate GroupHeaderTemplate { get; set; } Property Value Type Description GroupHeaderTemplate GroupToggleBehavior Gets or sets the ListViews's GroupToggle behavior. Declaration public GroupToggleBehavior GroupToggleBehavior { get; set; } Property Value Type Description GroupToggleBehavior The Toggle behavior (None, Radio, Multiselect). Header Gets/Sets the Header property Declaration public object Header { get; set; } Property Value Type Description Object HeaderTemplate Gets or sets the header template. Declaration public DataTemplate HeaderTemplate { get; set; } Property Value Type Description DataTemplate The header template. IsGroupingEnabled Gets/Sets the IsGroupingEnabled property Declaration public bool IsGroupingEnabled { get; set; } Property Value Type Description Boolean IsScrollEnabled Gets or sets a value indicating whether this ListView is scroll enabled. Declaration public bool IsScrollEnabled { get; set; } Property Value Type Description Boolean true if is scroll enabled; otherwise, false . IsScrolling Gets a value indicating whether this ListView is actively scrolling. Declaration public bool IsScrolling { get; } Property Value Type Description Boolean true if is actively scrolling; otherwise, false . ItemsSource Gets/Sets the ItemsSource property Declaration public IEnumerable ItemsSource { get; set; } Property Value Type Description IEnumerable ItemTemplates Gets/Sets the ItemTemplates property Declaration public DataTemplateSelector ItemTemplates { get; set; } Property Value Type Description DataTemplateSelector RowHeight Gets/Sets the RowHeight property Declaration public int RowHeight { get; set; } Property Value Type Description Int32 ScrollOffset Gets the scroll offset (current position) of ListView. Declaration public double ScrollOffset { get; } Property Value Type Description Double The scroll offset. SelectedCellBackgroundColor Gets or sets the color of the selected cell background. Declaration public Color SelectedCellBackgroundColor { get; set; } Property Value Type Description Color The color of the selected cell background. SelectedItem Gets/Sets the SelectedItem property Declaration public object SelectedItem { get; set; } Property Value Type Description Object SelectedItems Gets the selected items. Declaration public ObservableCollection<object> SelectedItems { get; } Property Value Type Description ObservableCollection < Object > The selected items. SeparatorColor Gets/Sets the SeparatorColor property Declaration public Color SeparatorColor { get; set; } Property Value Type Description Color SeparatorHeight Gets/Sets the SeparatorHeight property Declaration public double SeparatorHeight { get; set; } Property Value Type Description Double SeparatorLeftIndent Gets/Sets the SeparatorLeftIndent property Declaration public double SeparatorLeftIndent { get; set; } Property Value Type Description Double SeparatorRightIndent Gets/Sets the SeparatorRightIndent property Declaration public double SeparatorRightIndent { get; set; } Property Value Type Description Double SeparatorVisibility Gets/Sets the SeparatorVisibility property Declaration public SeparatorVisibility SeparatorVisibility { get; set; } Property Value Type Description SeparatorVisibility VisibleIndexes Gets a list of the ListView's visible indexes. Declaration public List<int[]> VisibleIndexes { get; } Property Value Type Description List < Int32 []> The visible indexes. VisibleItems Gets a list of the ListView's visible items. Declaration public List<object> VisibleItems { get; } Property Value Type Description List < Object > The visible items. Methods Dispose(Boolean) Dispose this ListView and its children Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides ContentView.Dispose(Boolean) LayoutChildren(Double, Double, Double, Double) Layouts the children. Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description Double x The x coordinate. Double y The y coordinate. Double width Width. Double height Height. Overrides ContentView.LayoutChildren(Double, Double, Double, Double) OnPropertyChanged(String) Trigged with a property has changed Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides Frame.OnPropertyChanged(String) OnPropertyChanging(String) Ons the property changing. Declaration protected override void OnPropertyChanging(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides BindableObject.OnPropertyChanging(String) ScrollBy(Double, Boolean) Scrolls the ListView by delta pixels. Declaration public bool ScrollBy(double delta, bool animated = true) Parameters Type Name Description Double delta Delta to move list relative to current position Boolean animated If set to true animated. Returns Type Description Boolean true , if by was scrolled, false otherwise. ScrollTo(Double, Boolean) Scrolls ListView to a position (offset) in pixels from the start Declaration public bool ScrollTo(double offset, bool animiated = true) Parameters Type Name Description Double offset Offset (position) to scroll to. Boolean animiated If set to true animiated. Returns Type Description Boolean true , if to was scrolled, false otherwise. ScrollTo(Int32[], ScrollToPosition, Boolean) Scrolls to item at index Declaration public bool ScrollTo(int[] index, ScrollToPosition position, bool animated = true) Parameters Type Name Description Int32 [] index ScrollToPosition position Boolean animated Returns Type Description Boolean ScrollTo(Object, Object, ScrollToPosition, Boolean) Scrolls to item in group Declaration public bool ScrollTo(object item, object group, ScrollToPosition position, bool animated = true) Parameters Type Name Description Object item Item. Object group Group. ScrollToPosition position Position. Boolean animated If set to true animated. Returns Type Description Boolean ScrollTo(Object, ScrollToPosition, Boolean) Scrolls to item Declaration public bool ScrollTo(object item, ScrollToPosition position, bool animated = true) Parameters Type Name Description Object item Item. ScrollToPosition position Position. Boolean animated If set to true animated. Returns Type Description Boolean TapItem(Object) Taps the item. Declaration public void TapItem(object item) Parameters Type Name Description Object item Item. TapItemAtPoint(Point) Simulates a tap of the item at point in this ListView. Declaration public void TapItemAtPoint(Point p) Parameters Type Name Description Point p P. Events Appeared Occures when the ListView has appeared Declaration public event EventHandler Appeared Event Type Type Description EventHandler ItemAppearing Occurs when item is appearing. Declaration public event EventHandler<ItemVisibilityEventArgs> ItemAppearing Event Type Type Description EventHandler < ItemVisibilityEventArgs > ItemDisappearing Occurs when item is disappearing. Declaration public event EventHandler<ItemVisibilityEventArgs> ItemDisappearing Event Type Type Description EventHandler < ItemVisibilityEventArgs > ItemPropertyChanged Occurs when property of a ListViewItem has changed. Declaration public event PropertyChangedEventHandler ItemPropertyChanged Event Type Type Description PropertyChangedEventHandler ItemPropertyChanging Occurs when a property of a ListViewItem is about to change. Declaration public event PropertyChangingEventHandler ItemPropertyChanging Event Type Type Description PropertyChangingEventHandler ItemSelected Occurs when cell is selected. Declaration public event EventHandler<SelectedItemChangedEventArgs> ItemSelected Event Type Type Description EventHandler < SelectedItemChangedEventArgs > ItemsSourceSet Occurs when ItemsSource setting has completed. Declaration public event EventHandler ItemsSourceSet Event Type Type Description EventHandler ItemTapped Occurs when cell is tapped. Declaration public event EventHandler<ItemTappedEventArgs> ItemTapped Event Type Type Description EventHandler < ItemTappedEventArgs > SwipeMenuItemTapped Occurs when a swipe menu item has been tapped. Declaration public event EventHandler<SwipeMenuItemTappedArgs> SwipeMenuItemTapped Event Type Type Description EventHandler < SwipeMenuItemTappedArgs > Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController ILayout IBackground IShape System.IDisposable IElement Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.ManualLayout.html": {
    "href": "api/Forms9Patch.ManualLayout.html",
    "title": "Class ManualLayout | Forms9Patch",
    "keywords": "Class ManualLayout Manual layout. Inheritance Object BindableObject Element NavigableElement VisualElement View Layout Layout < View > ManualLayout SegmentedControl Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers ILayout ILayoutController IViewContainer < View > ILayout IBackground IShape IElement Inherited Members Layout<View>.OnChildAdded(Element) Layout<View>.OnChildRemoved(Element) Layout<View>.OnChildRemoved(Element, Int32) Layout<View>.OnAdded(View) Layout<View>.OnRemoved(View) Layout<View>.Children Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.OnBindingContextChanged() View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildrenReordered() VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class ManualLayout : Layout<View>, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IViewContainer<View>, ILayout, IBackground, IShape, IElement Constructors ManualLayout() Constructor for ManualLayout Declaration public ManualLayout() Fields BackgroundColorProperty backing store for BackgroundColor property Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty BackgroundImageProperty BackgroundImage backing store Declaration public static BindableProperty BackgroundImageProperty Field Value Type Description BindableProperty BorderColorProperty The boarder color property. Declaration public static readonly BindableProperty BorderColorProperty Field Value Type Description BindableProperty BorderRadiusProperty The boarder radius property. Declaration public static readonly BindableProperty BorderRadiusProperty Field Value Type Description BindableProperty BorderWidthProperty The boarder width property. Declaration public static readonly BindableProperty BorderWidthProperty Field Value Type Description BindableProperty ElementShapeProperty Backing store for the ElementShape property Declaration public static readonly BindableProperty ElementShapeProperty Field Value Type Description BindableProperty HasShadowProperty HasShadow property backing store Declaration public static BindableProperty HasShadowProperty Field Value Type Description BindableProperty IgnoreChildrenProperty The ignore children property. Declaration public static readonly BindableProperty IgnoreChildrenProperty Field Value Type Description BindableProperty OutlineColorProperty Backing store for the outline color property. Declaration public static readonly BindableProperty OutlineColorProperty Field Value Type Description BindableProperty OutlineRadiusProperty Backing store for the outline radius property. Declaration public static readonly BindableProperty OutlineRadiusProperty Field Value Type Description BindableProperty OutlineWidthProperty Backing store for the outline width property. Declaration public static readonly BindableProperty OutlineWidthProperty Field Value Type Description BindableProperty ShadowInvertedProperty Backing store for the ShadowInverted bindable property. Declaration public static readonly BindableProperty ShadowInvertedProperty Field Value Type Description BindableProperty Properties BackgroundColor Gets/Sets the BackgroundColor property Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color BackgroundImage Gets or sets the background image. Declaration public Image BackgroundImage { get; set; } Property Value Type Description Image The background image. BorderColor Gets or sets the color of the boarder. Declaration public Color BorderColor { get; set; } Property Value Type Description Color The color of the boarder. BorderRadius Gets or sets the boarder radius. Declaration public float BorderRadius { get; set; } Property Value Type Description Single The boarder radius. BorderWidth Gets or sets the width of the boarder. Declaration public float BorderWidth { get; set; } Property Value Type Description Single The width of the boarder. ElementShape Gets/sets the geometry of the element Declaration public ElementShape ElementShape { get; set; } Property Value Type Description ElementShape HasShadow Gets/Sets the HasShadow property Declaration public bool HasShadow { get; set; } Property Value Type Description Boolean IgnoreChildren Gets or sets a value indicating whether this ContentView ignore children. Declaration public bool IgnoreChildren { get; set; } Property Value Type Description Boolean true if ignore children; otherwise, false . InstanceId The Instance Id (for debugging purposes) Declaration public int InstanceId { get; } Property Value Type Description Int32 OutlineColor Gets or sets the color of the outline. Declaration public Color OutlineColor { get; set; } Property Value Type Description Color The color of the outline. OutlineRadius Gets or sets the outline radius. Declaration public float OutlineRadius { get; set; } Property Value Type Description Single The outline radius. OutlineWidth Gets or sets the width of the outline. Declaration public float OutlineWidth { get; set; } Property Value Type Description Single The width of the outline. ShadowInverted Gets or sets a flag indicating if the layout's shadow is inverted. This is a bindable property. Declaration public bool ShadowInverted { get; set; } Property Value Type Description Boolean true if this instance's shadow is inverted; otherwise, false . Methods Description() Returns a String that describes the current ManualLayout . Declaration public virtual string Description() Returns Type Description String A String that describes the current ManualLayout . LayoutChildren(Double, Double, Double, Double) processes child layouts Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description Double x Double y Double width Double height Overrides Layout.LayoutChildren(Double, Double, Double, Double) OnChildMeasureInvalidated() Ons the child measure invalidated. Declaration protected override void OnChildMeasureInvalidated() Overrides Layout.OnChildMeasureInvalidated() OnMeasure(Double, Double) processes measurement of layout Declaration protected override SizeRequest OnMeasure(double widthConstraint, double heightConstraint) Parameters Type Name Description Double widthConstraint Double heightConstraint Returns Type Description SizeRequest Overrides VisualElement.OnMeasure(Double, Double) OnPropertyChanged(String) Call this method from a child class to notify that a change happened on a property. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName The name of the property that changed. Overrides Element.OnPropertyChanged(String) ShouldInvalidateOnChildAdded(View) Shoulds the invalidate on child added. Declaration protected override bool ShouldInvalidateOnChildAdded(View child) Parameters Type Name Description View child Child. Returns Type Description Boolean true , if invalidate on child added was shoulded, false otherwise. Overrides Layout.ShouldInvalidateOnChildAdded(View) ShouldInvalidateOnChildRemoved(View) Shoulds the invalidate on child removed. Declaration protected override bool ShouldInvalidateOnChildRemoved(View child) Parameters Type Name Description View child Child. Returns Type Description Boolean true , if invalidate on child removed was shoulded, false otherwise. Overrides Layout.ShouldInvalidateOnChildRemoved(View) ToString() Returns a String that describes the current ManualLayout . Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Events LayoutChildrenEvent Occurs when layout children event is triggered. Declaration public event EventHandler<ManualLayoutEventArgs> LayoutChildrenEvent Event Type Type Description EventHandler < ManualLayoutEventArgs > Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Xamarin.Forms.IViewContainer<T> ILayout IBackground IShape IElement Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.ManualLayoutEventArgs.html": {
    "href": "api/Forms9Patch.ManualLayoutEventArgs.html",
    "title": "Class ManualLayoutEventArgs | Forms9Patch",
    "keywords": "Class ManualLayoutEventArgs Manual layout event arguments. Inheritance Object EventArgs ManualLayoutEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class ManualLayoutEventArgs : EventArgs Constructors ManualLayoutEventArgs(Double, Double, Double, Double) Initializes a new instance of the ManualLayoutEventArgs class. Declaration public ManualLayoutEventArgs(double x, double y, double width, double height) Parameters Type Name Description Double x The x coordinate. Double y The y coordinate. Double width Width. Double height Height. Properties Height Gets the height. Declaration public double Height { get; } Property Value Type Description Double The height. Width Gets the width. Declaration public double Width { get; } Property Value Type Description Double The width. X Gets the x. Declaration public double X { get; } Property Value Type Description Double The x. Y Gets the y. Declaration public double Y { get; } Property Value Type Description Double The y. Methods ToString() Formats content for display Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Forms9Patch.MaterialButton.html": {
    "href": "api/Forms9Patch.MaterialButton.html",
    "title": "Class MaterialButton | Forms9Patch",
    "keywords": "Class MaterialButton DEPRICATED: Use Button Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView ContentView Frame Button MaterialButton Implements INotifyPropertyChanged IAnimatable ITabStopElement IGestureController IGestureRecognizers ILayout ILayoutController ILayout IDisposable IButton IButtonController IViewController IVisualElementController IElementController IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Inherited Members Button.SelectedFontColorProperty Button.SelectedFontColor Button.StickyBehaviorProperty Button.StickyBehavior Button.ImageSourceProperty Button.ImageSource Button.TrailingImageProperty Button.TrailingImage Button.TintImageProperty Button.TintImage Button.IsEllipticalProperty Button.IsElliptical Button.FontColorProperty Button.FontColor Button.AlignmentProperty Button.Alignment Button.FitProperty Button.Fit Button.Content Button.IsLongPressEnabledProperty Button.IsLongPressEnabled Button.IsClippedProperty Button.IsClipped Button.SelectedTextColorProperty Button.SelectedTextColor Button.SelectedBackgroundColorProperty Button.SelectedBackgroundColor Button.CommandProperty Button.Command Button.CommandParameterProperty Button.CommandParameter Button.ToggleBehaviorProperty Button.ToggleBehavior Button.IsSelectedProperty Button.IsSelected Button.HapticEffectProperty Button.HapticEffect Button.HapticEffectModeProperty Button.HapticEffectMode Button.SoundEffectProperty Button.SoundEffect Button.SoundEffectModeProperty Button.SoundEffectMode Button.IconImageProperty Button.IconImage Button.IconTextProperty Button.IconText Button.IconFontFamilyProperty Button.IconFontFamily Button.TrailingIconProperty Button.TrailingIcon Button.TintIconProperty Button.TintIcon Button.IconColorProperty Button.IconColor Button.IconFontSizeProperty Button.IconFontSize Button.HasTightSpacingProperty Button.HasTightSpacing Button.SpacingProperty Button.Spacing Button.OrientationProperty Button.Orientation Button.BackgroundColorProperty Button.BackgroundColor Button.HasShadowProperty Button.HasShadow Button.OutlineColorProperty Button.OutlineColor Button.BorderColorProperty Button.BorderColor Button.OutlineWidthProperty Button.OutlineWidth Button.BorderWidthProperty Button.BorderWidth Button.TextProperty Button.Text Button.HtmlTextProperty Button.HtmlText Button.TextColorProperty Button.TextColor Button.HorizontalTextAlignmentProperty Button.HorizontalTextAlignment Button.VerticalTextAlignmentProperty Button.VerticalTextAlignment Button.LineBreakModeProperty Button.LineBreakMode Button.AutoFitProperty Button.AutoFit Button.LinesProperty Button.Lines Button.MinFontSizeProperty Button.MinFontSize Button.FontSizeProperty Button.FontSize Button.FontFamilyProperty Button.FontFamily Button.FontAttributesProperty Button.FontAttributes Button.DarkThemeProperty Button.DarkTheme Button.FittedFontSize Button.SynchronizedFontSize Button._iconImage Button._label Button._iconLabel Button._gestureListener Button._constructing Button.Dispose(Boolean) Button.ToString() Button.Tap() Button.OnDown(Object, DownUpEventArgs) Button.OnUp(Object, DownUpEventArgs) Button.OnTapped(Object, TapEventArgs) Button.OnLongPressed(Object, LongPressEventArgs) Button.OnLongPressing(Object, LongPressEventArgs) Button.UpdateElements(Boolean) Button.Clicked Button.Pressed Button.Released Button.Tapped Button.InvokeTapped(Object, EventArgs) Button.Selected Button.InvokeSelected(Object, EventArgs) Button.LongPressing Button.InvokeLongPressing(Object, EventArgs) Button.LongPressed Button.InvokeLongPressed(Object, EventArgs) Button.GetMinSize() Button.CheckIsClipped(Double, Double) Button.OnPropertyChanging(String) Button.OnPropertyChanged(String) Button.SendTapped() Button.SendClicked() ContentView.ContentProperty ContentView.IgnoreChildrenProperty ContentView.IgnoreChildren ContentView.BackgroundImageProperty ContentView.BackgroundImage ContentView.LimitMinSizeToBackgroundImageSizeProperty ContentView.LimitMinSizeToBackgroundImageSize ContentView.ShadowInvertedProperty ContentView.ShadowInverted ContentView.OutlineRadiusProperty ContentView.OutlineRadius ContentView.BorderRadiusProperty ContentView.BorderRadius ContentView.ElementShapeProperty ContentView.ElementShape ContentView.InstanceId ContentView._f9pId ContentView._fallbackBackgroundImage ContentView.CurrentBackgroundImage ContentView.BaseInternalChildren ContentView.Dispose() ContentView.Description() ContentView.ShouldInvalidateOnChildAdded(View) ContentView.ShouldInvalidateOnChildRemoved(View) ContentView.OnChildMeasureInvalidated() ContentView.OnSizeRequest(Double, Double) ContentView.LayoutChildren(Double, Double, Double, Double) ContentView.OnBindingContextChanged() TemplatedView.ControlTemplateProperty TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Obsolete(\"Depricated: Use Forms9Patch.Button\", true)] public class MaterialButton : Button, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated, ILayout, IDisposable, IButton, IButtonController, IViewController, IVisualElementController, IElementController, IButtonState, IBackground, IShape, ILabel, ILabelStyle, IFontElement, IElement Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController ILayout System.IDisposable IButton Xamarin.Forms.IButtonController Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.MaterialSegmentedControl.html": {
    "href": "api/Forms9Patch.MaterialSegmentedControl.html",
    "title": "Class MaterialSegmentedControl | Forms9Patch",
    "keywords": "Class MaterialSegmentedControl DEPRICATED: USE SegmentedControl Inheritance Object BindableObject Element NavigableElement VisualElement View Layout Layout < View > ManualLayout SegmentedControl MaterialSegmentedControl Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers ILayout ILayoutController IViewContainer < View > ILayout IBackground IShape IElement ILabelStyle IFontElement IDisposable Inherited Members SegmentedControl.FontColorProperty SegmentedControl.FontColor SegmentedControl.SelectedFontColorProperty SegmentedControl.SelectedFontColor SegmentedControl.StickyBehaviorProperty SegmentedControl.StickyBehavior SegmentedControl.TrailingImageProperty SegmentedControl.TrailingImage SegmentedControl.TintImageProperty SegmentedControl.TintImage SegmentedControl.IsClippedProperty SegmentedControl.IsClipped SegmentedControl.SyncSegmentFontSizesProperty SegmentedControl.SyncSegmentFontSizes SegmentedControl.Segments SegmentedControl.PaddingProperty SegmentedControl.Padding SegmentedControl.SelectedTextColorProperty SegmentedControl.SelectedTextColor SegmentedControl.FontAttributesProperty SegmentedControl.FontAttributes SegmentedControl.FontSizeProperty SegmentedControl.FontSize SegmentedControl.FontFamilyProperty SegmentedControl.FontFamily SegmentedControl.IconFontFamilyProperty SegmentedControl.IconFontFamily SegmentedControl.IconFontSizeProperty SegmentedControl.IconFontSize SegmentedControl.BackgroundColorProperty SegmentedControl.BackgroundColor SegmentedControl.SelectedBackgroundColorProperty SegmentedControl.SelectedBackgroundColor SegmentedControl.DarkThemeProperty SegmentedControl.DarkTheme SegmentedControl.SelectedSegments SegmentedControl.SelectedIndexes SegmentedControl.IsIndexSelected(Int32) SegmentedControl.IsLongPressEnabledProperty SegmentedControl.IsLongPressEnabled SegmentedControl.GroupToggleBehaviorProperty SegmentedControl.GroupToggleBehavior SegmentedControl.SeparatorWidthProperty SegmentedControl.SeparatorWidth SegmentedControl.TrailingIconProperty SegmentedControl.TrailingIcon SegmentedControl.HapticEffectProperty SegmentedControl.HapticEffect SegmentedControl.HapticEffectModeProperty SegmentedControl.HapticEffectMode SegmentedControl.SoundEffectProperty SegmentedControl.SoundEffect SegmentedControl.SoundEffectModeProperty SegmentedControl.SoundEffectMode SegmentedControl.TintIconProperty SegmentedControl.TintIcon SegmentedControl.IconColorProperty SegmentedControl.IconColor SegmentedControl.HasTightSpacingProperty SegmentedControl.HasTightSpacing SegmentedControl.IntraSegmentOrientationProperty SegmentedControl.IntraSegmentOrientation SegmentedControl.IntraSegmentSpacingProperty SegmentedControl.IntraSegmentSpacing SegmentedControl.OrientationProperty SegmentedControl.Orientation SegmentedControl.TextColorProperty SegmentedControl.TextColor SegmentedControl.HorizontalTextAlignmentProperty SegmentedControl.HorizontalTextAlignment SegmentedControl.VerticalTextAlignmentProperty SegmentedControl.VerticalTextAlignment SegmentedControl.LineBreakModeProperty SegmentedControl.LineBreakMode SegmentedControl.AutoFitProperty SegmentedControl.AutoFit SegmentedControl.LinesProperty SegmentedControl.Lines SegmentedControl.MinFontSizeProperty SegmentedControl.MinFontSize SegmentedControl.Dispose(Boolean) SegmentedControl.Dispose() SegmentedControl.TapIndex(Int32) SegmentedControl.SelectIndex(Int32) SegmentedControl.DeselectIndex(Int32) SegmentedControl.SelectAll() SegmentedControl.DeselectAll() SegmentedControl.OnBindingContextChanged() SegmentedControl.OnPropertyChanged(String) SegmentedControl.GetMinSize() SegmentedControl.OnMeasure(Double, Double) SegmentedControl.LayoutChildren(Double, Double, Double, Double) SegmentedControl.CheckIsClipped(Double, Double) SegmentedControl.SegmentTapped SegmentedControl.SegmentSelected SegmentedControl.SegmentLongPressing SegmentedControl.SegmentLongPressed ManualLayout.IgnoreChildrenProperty ManualLayout.IgnoreChildren ManualLayout.BackgroundImageProperty ManualLayout.BackgroundImage ManualLayout.HasShadowProperty ManualLayout.HasShadow ManualLayout.ShadowInvertedProperty ManualLayout.ShadowInverted ManualLayout.OutlineColorProperty ManualLayout.OutlineColor ManualLayout.BorderColorProperty ManualLayout.BorderColor ManualLayout.OutlineRadiusProperty ManualLayout.OutlineRadius ManualLayout.BorderRadiusProperty ManualLayout.BorderRadius ManualLayout.OutlineWidthProperty ManualLayout.OutlineWidth ManualLayout.BorderWidthProperty ManualLayout.BorderWidth ManualLayout.ElementShapeProperty ManualLayout.ElementShape ManualLayout.InstanceId ManualLayout.Description() ManualLayout.ToString() ManualLayout.LayoutChildrenEvent ManualLayout.ShouldInvalidateOnChildAdded(View) ManualLayout.ShouldInvalidateOnChildRemoved(View) ManualLayout.OnChildMeasureInvalidated() Layout<View>.OnChildAdded(Element) Layout<View>.OnChildRemoved(Element) Layout<View>.OnChildRemoved(Element, Int32) Layout<View>.OnAdded(View) Layout<View>.OnRemoved(View) Layout<View>.Children Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildrenReordered() VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Obsolete(\"DEPRICATED: Use SegmentedControl\", true)] public class MaterialSegmentedControl : SegmentedControl, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IViewContainer<View>, ILayout, IBackground, IShape, IElement, ILabelStyle, IFontElement, IDisposable Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Xamarin.Forms.IViewContainer<T> ILayout IBackground IShape IElement ILabelStyle IFontElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.MimeItem.html": {
    "href": "api/Forms9Patch.MimeItem.html",
    "title": "Class MimeItem | Forms9Patch",
    "keywords": "Class MimeItem Base class for a MimeItem Inheritance Object MimeItem MimeItem<T> Implements IMimeItem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class MimeItem : IMimeItem Constructors MimeItem(String, Object) Initializes a new instance of the MimeItem class. Declaration public MimeItem(string mimeType, object value) Parameters Type Name Description String mimeType MIME type. Object value Value. Properties MimeType Get the MimeType of this MimeItem Declaration public string MimeType { get; protected set; } Property Value Type Description String Value Get the Value of thie MimeItem Declaration public object Value { get; protected set; } Property Value Type Description Object Methods ValidValue(Object) Checks if an object can be used as a valid MimeItem.Value Declaration public static bool ValidValue(object value) Parameters Type Name Description Object value Value. Returns Type Description Boolean true , if value was valided, false otherwise. ValidValueType(Type) Test to determine if type can be safely put on clipboard across platforms (without crazy schema gymnastics) Declaration public static bool ValidValueType(Type type) Parameters Type Name Description Type type Returns Type Description Boolean Implements IMimeItem"
  },
  "api/Forms9Patch.MimeItem-1.html": {
    "href": "api/Forms9Patch.MimeItem-1.html",
    "title": "Class MimeItem<T> | Forms9Patch",
    "keywords": "Class MimeItem<T> MimeItem class Inheritance Object MimeItem MimeItem<T> Implements IMimeItem <T> IMimeItem Inherited Members MimeItem.ValidValue(Object) MimeItem.ValidValueType(Type) MimeItem.MimeType Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class MimeItem<T> : MimeItem, IMimeItem<T>, IMimeItem Type Parameters Name Description T Constructors MimeItem(IMimeItem) Initializes a new instance of the MimeItem<T> class. Declaration public MimeItem(IMimeItem mimeItem) Parameters Type Name Description IMimeItem mimeItem MIME item. MimeItem(String, T) Initializes a new instance of the MimeItem<T> class. Declaration public MimeItem(string mimeType, T value) Parameters Type Name Description String mimeType MIME type. T value Value. Properties Value Gets or sets the value of this MimeItemn. Declaration public T Value { get; set; } Property Value Type Description T The value. Methods Create(String, Object) Create a new MimeItem with the specified mimeType and value. Declaration public static MimeItem<T> Create(string mimeType, object value) Parameters Type Name Description String mimeType MIME type. Object value Value. Returns Type Description MimeItem <T> The create. Implements IMimeItem<T> IMimeItem"
  },
  "api/Forms9Patch.MimeItemCollection.html": {
    "href": "api/Forms9Patch.MimeItemCollection.html",
    "title": "Class MimeItemCollection | Forms9Patch",
    "keywords": "Class MimeItemCollection Class used to supply data to Clipboard and Interapp Sharing Inheritance Object BaseMimeItemCollection MimeItemCollection Implements IMimeItemCollection Inherited Members BaseMimeItemCollection._description BaseMimeItemCollection._items BaseMimeItemCollection.Items Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class MimeItemCollection : BaseMimeItemCollection, IMimeItemCollection Constructors MimeItemCollection() Initializes a new instance of the MimeItemCollection class. Declaration public MimeItemCollection() Properties Description Short, descriptive text that can be used by app to display to the user what this data represents. Declaration public string Description { get; set; } Property Value Type Description String The description. HtmlText Gets or sets the html text representation of this data (if any) Declaration public string HtmlText { get; set; } Property Value Type Description String The html text. PlainText Gets or sets the plain text representation of this data (if any) Declaration public string PlainText { get; set; } Property Value Type Description String The plain text. Methods AddValue(String, Object) Adds a new item to the MimeItemCollection Declaration public void AddValue(string mimeType, object value) Parameters Type Name Description String mimeType MIME type. Object value Value. ForPlainText(String, String) Convenience factory for entry with just PlainText Declaration public static MimeItemCollection ForPlainText(string plainText, string description = null) Parameters Type Name Description String plainText String description Returns Type Description MimeItemCollection Implements IMimeItemCollection Extension Methods IMimeItemCollectionExtensions.MimeTypes(IMimeItemCollection) IMimeItemCollectionExtensions.GetFirstMimeItem<T>(IMimeItemCollection, String) IMimeItemCollectionExtensions.GetMimeItems<T>(IMimeItemCollection, String) IMimeItemCollectionExtensions.AddBytesFromFile(MimeItemCollection, String, String, FailAction) IMimeItemCollectionExtensions.ContainsMimeType(IMimeItemCollection, String)"
  },
  "api/Forms9Patch.ModalPopup.html": {
    "href": "api/Forms9Patch.ModalPopup.html",
    "title": "Class ModalPopup | Forms9Patch",
    "keywords": "Class ModalPopup Forms9Patch Modal popup. Inheritance Object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage PopupPage Forms9Patch.PopupBase ModalPopup ActivityIndicatorPopup Toast Implements INotifyPropertyChanged IAnimatable ITabStopElement ILayout IPageController IVisualElementController IElementController IElementConfiguration < Page > IPopup IBackground IShape IElement IDisposable Inherited Members PopupPage.BackgroundClicked PopupPage.IsAnimationEnabledProperty PopupPage.IsAnimationEnabled PopupPage.HasSystemPaddingProperty PopupPage.HasSystemPadding PopupPage.AnimationProperty PopupPage.Animation PopupPage.SystemPaddingProperty PopupPage.SystemPadding PopupPage.SystemPaddingSidesProperty PopupPage.SystemPaddingSides PopupPage.CloseWhenBackgroundIsClickedProperty PopupPage.CloseWhenBackgroundIsClicked PopupPage.BackgroundInputTransparentProperty PopupPage.BackgroundInputTransparent PopupPage.HasKeyboardOffsetProperty PopupPage.HasKeyboardOffset PopupPage.KeyboardOffsetProperty PopupPage.KeyboardOffset PopupPage.OnBackButtonPressed() PopupPage.OnAppearingAnimationBegin() PopupPage.OnAppearingAnimationEnd() PopupPage.OnDisappearingAnimationBegin() PopupPage.OnDisappearingAnimationEnd() PopupPage.OnAppearingAnimationBeginAsync() PopupPage.OnAppearingAnimationEndAsync() PopupPage.OnDisappearingAnimationBeginAsync() PopupPage.OnDisappearingAnimationEndAsync() PopupPage.OnBackgroundClicked() ContentPage.ContentProperty ContentPage.OnBindingContextChanged() TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element) TemplatedPage.OnChildRemoved(Element, Int32) TemplatedPage.GetTemplateChild(String) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(String, String, String, String[]) Page.DisplayAlert(String, String, String) Page.DisplayAlert(String, String, String, String) Page.DisplayPromptAsync(String, String, String, String, String, Int32, Keyboard, String) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnAppearing() Page.OnChildMeasureInvalidated(Object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(Double, Double) Page.UpdateChildrenLayout() Page.On<T>() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.LayoutChanged Page.Appearing Page.Disappearing VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class ModalPopup : PopupBase, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, IPaddingElement, IControlTemplated, IPopup, IBackground, IShape, IElement, IDisposable Constructors ModalPopup(TimeSpan) Initializes a new instance of the ModalPopup class. Declaration public ModalPopup(TimeSpan popAfter = default(TimeSpan)) Parameters Type Name Description TimeSpan popAfter Pop after TimeSpan. Fields LocationProperty The location property backing store. Declaration public static readonly BindableProperty LocationProperty Field Value Type Description BindableProperty ScaleProperty BindableProperty for Scale property Declaration public static readonly BindableProperty ScaleProperty Field Value Type Description BindableProperty Properties Content Gets or sets the content of the FormsPopup.Modal. Declaration public View Content { get; set; } Property Value Type Description View The content. Location Gets or sets the Modal Popup's location. Declaration public Point Location { get; set; } Property Value Type Description Point The location (default centers it in Host Page). Scale the scale of the content of the popup Declaration public double Scale { get; set; } Property Value Type Description Double Methods LayoutChildren(Double, Double, Double, Double) Positions and sizes the children of a Layout. Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description Double x A value representing the x coordinate of the child region bounding box. Double y A value representing the y coordinate of the child region bounding box. Double width A value representing the width of the child region bounding box. Double height A value representing the height of the child region bounding box. Overrides PopupPage.LayoutChildren(Double, Double, Double, Double) Remarks Implementors wishing to change the default behavior of a Layout should override this method. It is suggested to still call the base method and modify its calculated results. OnPropertyChanged(String) Responds to a change in a PopupBase property. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName The name of the property that changed. Overrides Forms9Patch.PopupBase.OnPropertyChanged(System.String) Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.ILayout Xamarin.Forms.IPageController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.IElementConfiguration<TElement> IPopup IBackground IShape IElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(PopupBase) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.MultiComponentPicker.html": {
    "href": "api/Forms9Patch.MultiComponentPicker.html",
    "title": "Class MultiComponentPicker | Forms9Patch",
    "keywords": "Class MultiComponentPicker Multi component picker. Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView MultiComponentPicker Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers ILayout ILayoutController Inherited Members ContentView.ContentProperty ContentView.OnBindingContextChanged() ContentView.Content TemplatedView.ControlTemplateProperty TemplatedView.LayoutChildren(Double, Double, Double, Double) TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnChildMeasureInvalidated() Layout.OnSizeAllocated(Double, Double) Layout.ShouldInvalidateOnChildAdded(View) Layout.ShouldInvalidateOnChildRemoved(View) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.OnPropertyChanged(String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class MultiComponentPicker : ContentView, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated Constructors MultiComponentPicker() Initializes a new instance of the MultiComponentPicker class. Declaration public MultiComponentPicker() Fields ComponentsProperty The components property. Declaration public static readonly BindableProperty ComponentsProperty Field Value Type Description BindableProperty RowHeightProperty The row height property. Declaration public static readonly BindableProperty RowHeightProperty Field Value Type Description BindableProperty RowSizesProperty The row sizes property. Declaration public static readonly BindableProperty RowSizesProperty Field Value Type Description BindableProperty Properties Components Gets or sets the components. Declaration public ObservableCollection<ObservableCollection<object>> Components { get; set; } Property Value Type Description ObservableCollection < ObservableCollection < Object >> The components. RowHeight Gets or sets the height of the row. Declaration public int RowHeight { get; set; } Property Value Type Description Int32 The height of the row. RowSizes Gets or sets the row sizes. Declaration public List<double> RowSizes { get; set; } Property Value Type Description List < Double > The row sizes. Events SelectionChanged Occurs when selection changed. Declaration public event EventHandler<MultiComponentPicker.SelectionChangedEventArgs> SelectionChanged Event Type Type Description EventHandler < MultiComponentPicker.SelectionChangedEventArgs > Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.MultiComponentPicker.SelectionChangedEventArgs.html": {
    "href": "api/Forms9Patch.MultiComponentPicker.SelectionChangedEventArgs.html",
    "title": "Class MultiComponentPicker.SelectionChangedEventArgs | Forms9Patch",
    "keywords": "Class MultiComponentPicker.SelectionChangedEventArgs Selection changed event arguments. Inheritance Object EventArgs MultiComponentPicker.SelectionChangedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class SelectionChangedEventArgs : EventArgs Fields Category The category. Declaration public int Category Field Value Type Description Int32"
  },
  "api/Forms9Patch.MultiPicker.html": {
    "href": "api/Forms9Patch.MultiPicker.html",
    "title": "Class MultiPicker | Forms9Patch",
    "keywords": "Class MultiPicker Multi picker. Inheritance Object BindableObject Element NavigableElement VisualElement View ItemsView StructuredItemsView SelectableItemsView GroupableItemsView CollectionView Forms9Patch.BasePicker SinglePicker MultiPicker Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers Inherited Members SinglePicker.IsHtmlTextProperty SinglePicker.IsHtmlText SinglePicker.PlainTextCellType SinglePicker.HtmlTextCellType SinglePicker.OnPropertyChanged(String) SinglePicker.Reset() GroupableItemsView.IsGroupedProperty GroupableItemsView.GroupHeaderTemplateProperty GroupableItemsView.GroupFooterTemplateProperty GroupableItemsView.IsGrouped GroupableItemsView.GroupHeaderTemplate GroupableItemsView.GroupFooterTemplate SelectableItemsView.SelectionModeProperty SelectableItemsView.SelectedItemProperty SelectableItemsView.SelectedItemsProperty SelectableItemsView.SelectionChangedCommandProperty SelectableItemsView.SelectionChangedCommandParameterProperty SelectableItemsView.UpdateSelectedItems(IList<Object>) SelectableItemsView.OnSelectionChanged(SelectionChangedEventArgs) SelectableItemsView.SelectedItem SelectableItemsView.SelectedItems SelectableItemsView.SelectionChangedCommand SelectableItemsView.SelectionChangedCommandParameter SelectableItemsView.SelectionMode SelectableItemsView.SelectionChanged StructuredItemsView.HeaderProperty StructuredItemsView.HeaderTemplateProperty StructuredItemsView.FooterProperty StructuredItemsView.FooterTemplateProperty StructuredItemsView.ItemsLayoutProperty StructuredItemsView.ItemSizingStrategyProperty StructuredItemsView.Header StructuredItemsView.HeaderTemplate StructuredItemsView.Footer StructuredItemsView.FooterTemplate StructuredItemsView.ItemsLayout StructuredItemsView.ItemSizingStrategy ItemsView.EmptyViewProperty ItemsView.EmptyViewTemplateProperty ItemsView.ItemsSourceProperty ItemsView.RemainingItemsThresholdReachedCommandProperty ItemsView.RemainingItemsThresholdReachedCommandParameterProperty ItemsView.HorizontalScrollBarVisibilityProperty ItemsView.VerticalScrollBarVisibilityProperty ItemsView.RemainingItemsThresholdProperty ItemsView.ItemTemplateProperty ItemsView.ItemsUpdatingScrollModeProperty ItemsView.AddLogicalChild(Element) ItemsView.RemoveLogicalChild(Element) ItemsView.ScrollTo(Int32, Int32, ScrollToPosition, Boolean) ItemsView.ScrollTo(Object, Object, ScrollToPosition, Boolean) ItemsView.SendRemainingItemsThresholdReached() ItemsView.SendScrolled(ItemsViewScrolledEventArgs) ItemsView.OnMeasure(Double, Double) ItemsView.OnScrollToRequested(ScrollToRequestEventArgs) ItemsView.OnRemainingItemsThresholdReached() ItemsView.OnScrolled(ItemsViewScrolledEventArgs) ItemsView.OnBindingContextChanged() ItemsView.EmptyView ItemsView.EmptyViewTemplate ItemsView.ItemsSource ItemsView.RemainingItemsThresholdReachedCommand ItemsView.RemainingItemsThresholdReachedCommandParameter ItemsView.HorizontalScrollBarVisibility ItemsView.VerticalScrollBarVisibility ItemsView.RemainingItemsThreshold ItemsView.InternalItemsLayout ItemsView.ItemTemplate ItemsView.ItemsUpdatingScrollMode ItemsView.ScrollToRequested ItemsView.Scrolled ItemsView.RemainingItemsThresholdReached View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildRemoved(Element) VisualElement.OnChildRemoved(Element, Int32) VisualElement.OnChildrenReordered() VisualElement.OnSizeAllocated(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class MultiPicker : SinglePicker, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers Constructors MultiPicker() Initializes a new instance of the MultiPicker class. Declaration public MultiPicker() Properties SelectedIndexes The indexes currently selected Declaration public List<int> SelectedIndexes { get; } Property Value Type Description List < Int32 > Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.MultiPicker.MultiPickerCellContentView.html": {
    "href": "api/Forms9Patch.MultiPicker.MultiPickerCellContentView.html",
    "title": "Class MultiPicker.MultiPickerCellContentView | Forms9Patch",
    "keywords": "Class MultiPicker.MultiPickerCellContentView MultiPicker cell content view Inheritance Object BindableObject Element NavigableElement VisualElement View Layout Layout < View > Grid SinglePicker.SinglePickerCellContentView MultiPicker.MultiPickerCellContentView MultiPicker.MultiPickerHtmlCellContentView Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers ILayout ILayoutController IViewContainer < View > IGridController IElementConfiguration < Grid > IDisposable Inherited Members SinglePicker.SinglePickerCellContentView.IsSelectedProperty SinglePicker.SinglePickerCellContentView.IsSelected SinglePicker.SinglePickerCellContentView.itemLabel SinglePicker.SinglePickerCellContentView.Dispose(Boolean) SinglePicker.SinglePickerCellContentView.Dispose() SinglePicker.SinglePickerCellContentView.OnPropertyChanging(String) SinglePicker.SinglePickerCellContentView.OnBindingContextChanged() Grid.RowProperty Grid.RowSpanProperty Grid.ColumnProperty Grid.ColumnSpanProperty Grid.RowSpacingProperty Grid.ColumnSpacingProperty Grid.ColumnDefinitionsProperty Grid.RowDefinitionsProperty Grid.On<T>() Grid.GetColumn(BindableObject) Grid.GetColumnSpan(BindableObject) Grid.GetRow(BindableObject) Grid.GetRowSpan(BindableObject) Grid.SetColumn(BindableObject, Int32) Grid.SetColumnSpan(BindableObject, Int32) Grid.SetRow(BindableObject, Int32) Grid.SetRowSpan(BindableObject, Int32) Grid.OnAdded(View) Grid.OnRemoved(View) Grid.LayoutChildren(Double, Double, Double, Double) Grid.Children Grid.ColumnDefinitions Grid.ColumnSpacing Grid.RowDefinitions Grid.RowSpacing Layout<View>.OnChildAdded(Element) Layout<View>.OnChildRemoved(Element) Layout<View>.OnChildRemoved(Element, Int32) Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnChildMeasureInvalidated() Layout.OnSizeAllocated(Double, Double) Layout.ShouldInvalidateOnChildAdded(View) Layout.ShouldInvalidateOnChildRemoved(View) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Preserve(AllMembers = true)] protected class MultiPickerCellContentView : SinglePicker.SinglePickerCellContentView, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IViewContainer<View>, IGridController, IElementConfiguration<Grid>, IDisposable Constructors MultiPickerCellContentView() Constructor for MultiPicker Cell content view Declaration public MultiPickerCellContentView() Fields checkLabel Protected use Declaration protected readonly Label checkLabel Field Value Type Description Label Methods OnPropertyChanged(String) Same as it ever was Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Overrides SinglePicker.SinglePickerCellContentView.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Xamarin.Forms.IViewContainer<T> Xamarin.Forms.IGridController Xamarin.Forms.IElementConfiguration<TElement> System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.MultiPicker.MultiPickerHtmlCellContentView.html": {
    "href": "api/Forms9Patch.MultiPicker.MultiPickerHtmlCellContentView.html",
    "title": "Class MultiPicker.MultiPickerHtmlCellContentView | Forms9Patch",
    "keywords": "Class MultiPicker.MultiPickerHtmlCellContentView MultiPicker HTML cell content view Inheritance Object BindableObject Element NavigableElement VisualElement View Layout Layout < View > Grid SinglePicker.SinglePickerCellContentView MultiPicker.MultiPickerCellContentView MultiPicker.MultiPickerHtmlCellContentView Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers ILayout ILayoutController IViewContainer < View > IGridController IElementConfiguration < Grid > IDisposable Inherited Members MultiPicker.MultiPickerCellContentView.checkLabel MultiPicker.MultiPickerCellContentView.OnPropertyChanged(String) SinglePicker.SinglePickerCellContentView.IsSelectedProperty SinglePicker.SinglePickerCellContentView.IsSelected SinglePicker.SinglePickerCellContentView.itemLabel SinglePicker.SinglePickerCellContentView.Dispose(Boolean) SinglePicker.SinglePickerCellContentView.Dispose() SinglePicker.SinglePickerCellContentView.OnPropertyChanging(String) Grid.RowProperty Grid.RowSpanProperty Grid.ColumnProperty Grid.ColumnSpanProperty Grid.RowSpacingProperty Grid.ColumnSpacingProperty Grid.ColumnDefinitionsProperty Grid.RowDefinitionsProperty Grid.On<T>() Grid.GetColumn(BindableObject) Grid.GetColumnSpan(BindableObject) Grid.GetRow(BindableObject) Grid.GetRowSpan(BindableObject) Grid.SetColumn(BindableObject, Int32) Grid.SetColumnSpan(BindableObject, Int32) Grid.SetRow(BindableObject, Int32) Grid.SetRowSpan(BindableObject, Int32) Grid.OnAdded(View) Grid.OnRemoved(View) Grid.LayoutChildren(Double, Double, Double, Double) Grid.Children Grid.ColumnDefinitions Grid.ColumnSpacing Grid.RowDefinitions Grid.RowSpacing Layout<View>.OnChildAdded(Element) Layout<View>.OnChildRemoved(Element) Layout<View>.OnChildRemoved(Element, Int32) Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnChildMeasureInvalidated() Layout.OnSizeAllocated(Double, Double) Layout.ShouldInvalidateOnChildAdded(View) Layout.ShouldInvalidateOnChildRemoved(View) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Preserve(AllMembers = true)] protected class MultiPickerHtmlCellContentView : MultiPicker.MultiPickerCellContentView, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IViewContainer<View>, IGridController, IElementConfiguration<Grid>, IDisposable Constructors MultiPickerHtmlCellContentView() Constructor Declaration public MultiPickerHtmlCellContentView() Methods OnBindingContextChanged() Same as it ever was Declaration protected override void OnBindingContextChanged() Overrides SinglePicker.SinglePickerCellContentView.OnBindingContextChanged() Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Xamarin.Forms.IViewContainer<T> Xamarin.Forms.IGridController Xamarin.Forms.IElementConfiguration<TElement> System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.OsInfoService.html": {
    "href": "api/Forms9Patch.OsInfoService.html",
    "title": "Class OsInfoService | Forms9Patch",
    "keywords": "Class OsInfoService Provides information about the operating system in which the app is running Inheritance Object OsInfoService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class OsInfoService Properties Version Operating system version Declaration public static Version Version { get; } Property Value Type Description Version"
  },
  "api/Forms9Patch.PageMargin.html": {
    "href": "api/Forms9Patch.PageMargin.html",
    "title": "Class PageMargin | Forms9Patch",
    "keywords": "Class PageMargin Class to specify ths margins (in points) of a PDF page Inheritance Object PageMargin Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class PageMargin Properties Bottom Bottom margin (points) Declaration public double Bottom { get; set; } Property Value Type Description Double HorizontalThickness Combined left and right margins (points) Declaration public double HorizontalThickness { get; } Property Value Type Description Double Left Left margin (points) Declaration public double Left { get; set; } Property Value Type Description Double Right Right margin (points) Declaration public double Right { get; set; } Property Value Type Description Double Top Top margin (points) Declaration public double Top { get; set; } Property Value Type Description Double VerticalThickness Combined top and bottom margins (points) Declaration public double VerticalThickness { get; } Property Value Type Description Double Methods CreateInInches(Double) Creates a new PageMargin from uniform margin dimensions (in inches) Declaration public static PageMargin CreateInInches(double all) Parameters Type Name Description Double all Returns Type Description PageMargin CreateInInches(Double, Double) Creates a new PageMargin from horizontal and vertical margin dimensions (in inches) Declaration public static PageMargin CreateInInches(double horizontal, double vertical) Parameters Type Name Description Double horizontal Double vertical Returns Type Description PageMargin CreateInInches(Double, Double, Double, Double) Creates a new PageMargin from left, right, top, and bottom dimensions (in inches) Declaration public static PageMargin CreateInInches(double left, double right, double top, double bottom) Parameters Type Name Description Double left Double right Double top Double bottom Returns Type Description PageMargin CreateInMillimeters(Double) Creates a new PageMargin from uniform margin dimensions (in millimeters) Declaration public static PageMargin CreateInMillimeters(double all) Parameters Type Name Description Double all Returns Type Description PageMargin CreateInMillimeters(Double, Double) Creates a new PageMargin from horizontal and vertical margin dimensions (in millimeters) Declaration public static PageMargin CreateInMillimeters(double horizontal, double vertical) Parameters Type Name Description Double horizontal Double vertical Returns Type Description PageMargin CreateInMillimeters(Double, Double, Double, Double) Creates a new PageMargin from left, right, top, and bottom dimensions (in millimeters) Declaration public static PageMargin CreateInMillimeters(double left, double right, double top, double bottom) Parameters Type Name Description Double left Double right Double top Double bottom Returns Type Description PageMargin"
  },
  "api/Forms9Patch.PageSize.html": {
    "href": "api/Forms9Patch.PageSize.html",
    "title": "Class PageSize | Forms9Patch",
    "keywords": "Class PageSize Helper class used to specify media size used in the generation of PDF documents Inheritance Object PageSize Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class PageSize Properties AnsiA American National Standards Institute: A (11\" x 9.5\"); Declaration public static PageSize AnsiA { get; } Property Value Type Description PageSize AnsiB American National Standards Institute: B (17\" x 11\"); Declaration public static PageSize AnsiB { get; } Property Value Type Description PageSize AnsiC American National Standards Institute: C (22\" x 17\"); Declaration public static PageSize AnsiC { get; } Property Value Type Description PageSize AnsiD American National Standards Institute: D (34\" x 22\"); Declaration public static PageSize AnsiD { get; } Property Value Type Description PageSize AnsiE American National Standards Institute: E (44\" x 34\"); Declaration public static PageSize AnsiE { get; } Property Value Type Description PageSize Default Default paper size for current region (either Letter or IsoA4); Declaration public static PageSize Default { get; } Property Value Type Description PageSize Height Page height in points (72 points per inch) Declaration public double Height { get; } Property Value Type Description Double IsoA0 International Standards Organization A0 (841 mm x 1189 mm) Declaration public static PageSize IsoA0 { get; } Property Value Type Description PageSize IsoA1 International Standards Organization A1 (594 mm x 841 mm) Declaration public static PageSize IsoA1 { get; } Property Value Type Description PageSize IsoA10 International Standards Organization A10 (26 mm x 37 mm) Declaration public static PageSize IsoA10 { get; } Property Value Type Description PageSize IsoA2 International Standards Organization A2 (420 mm x 594 mm) Declaration public static PageSize IsoA2 { get; } Property Value Type Description PageSize IsoA3 International Standards Organization A3 (297 mm x 420 mm) Declaration public static PageSize IsoA3 { get; } Property Value Type Description PageSize IsoA4 International Standards Organization A4 (210 mm x 297 mm) Declaration public static PageSize IsoA4 { get; } Property Value Type Description PageSize IsoA5 International Standards Organization A5 (148 mm x 210 mm) Declaration public static PageSize IsoA5 { get; } Property Value Type Description PageSize IsoA6 International Standards Organization A6 (105 mm x 148 mm) Declaration public static PageSize IsoA6 { get; } Property Value Type Description PageSize IsoA7 International Standards Organization A7 (74 mm x 105 mm) Declaration public static PageSize IsoA7 { get; } Property Value Type Description PageSize IsoA8 International Standards Organization A8 (52 mm x 74 mm) Declaration public static PageSize IsoA8 { get; } Property Value Type Description PageSize IsoA9 International Standards Organization A9 (37 mm x 52 mm) Declaration public static PageSize IsoA9 { get; } Property Value Type Description PageSize IsoB0 International Standards Organization B0 (1000 mm x 1414 mm) Declaration public static PageSize IsoB0 { get; } Property Value Type Description PageSize IsoB1 International Standards Organization B1 (707 mm x 1000 mm) Declaration public static PageSize IsoB1 { get; } Property Value Type Description PageSize IsoB10 International Standards Organization B10 (31 mm x 44 mm) Declaration public static PageSize IsoB10 { get; } Property Value Type Description PageSize IsoB2 International Standards Organization B2 (500 mm x 707 mm) Declaration public static PageSize IsoB2 { get; } Property Value Type Description PageSize IsoB3 International Standards Organization B3 (353 mm x 500 mm) Declaration public static PageSize IsoB3 { get; } Property Value Type Description PageSize IsoB4 International Standards Organization B4 (250 mm x 353 mm) Declaration public static PageSize IsoB4 { get; } Property Value Type Description PageSize IsoB5 International Standards Organization B5 (176 mm x 250 mm) Declaration public static PageSize IsoB5 { get; } Property Value Type Description PageSize IsoB6 International Standards Organization B6 (125 mm x 176 mm) Declaration public static PageSize IsoB6 { get; } Property Value Type Description PageSize IsoB7 International Standards Organization B7 (88 mm x 125 mm) Declaration public static PageSize IsoB7 { get; } Property Value Type Description PageSize IsoB8 International Standards Organization B8 (62 mm x 88 mm) Declaration public static PageSize IsoB8 { get; } Property Value Type Description PageSize IsoB9 International Standards Organization B9 (44 mm x 62 mm) Declaration public static PageSize IsoB9 { get; } Property Value Type Description PageSize IsoC0 International Standards Organization C0 (917 mm x 1297 mm) Declaration public static PageSize IsoC0 { get; } Property Value Type Description PageSize IsoC1 International Standards Organization C1 (648 mm x 917 mm) Declaration public static PageSize IsoC1 { get; } Property Value Type Description PageSize IsoC10 International Standards Organization C10 (28 mm x 40 mm) Declaration public static PageSize IsoC10 { get; } Property Value Type Description PageSize IsoC2 International Standards Organization C2 (458 mm x 648 mm) Declaration public static PageSize IsoC2 { get; } Property Value Type Description PageSize IsoC3 International Standards Organization C3 (324 mm x 458 mm) Declaration public static PageSize IsoC3 { get; } Property Value Type Description PageSize IsoC4 International Standards Organization C4 (229 mm x 324 mm) Declaration public static PageSize IsoC4 { get; } Property Value Type Description PageSize IsoC5 International Standards Organization C5 (162 mm x 229 mm) Declaration public static PageSize IsoC5 { get; } Property Value Type Description PageSize IsoC6 International Standards Organization C6 (114 mm x 162 mm) Declaration public static PageSize IsoC6 { get; } Property Value Type Description PageSize IsoC7 International Standards Organization C7 (81 mm x 114 mm) Declaration public static PageSize IsoC7 { get; } Property Value Type Description PageSize IsoC8 International Standards Organization C8 (57 mm x 81 mm) Declaration public static PageSize IsoC8 { get; } Property Value Type Description PageSize IsoC9 International Standards Organization C9 (40 mm x 57 mm) Declaration public static PageSize IsoC9 { get; } Property Value Type Description PageSize JisB0 Japanese Industrial Standards B0 (1030 mm x 1456 mm) Declaration public static PageSize JisB0 { get; } Property Value Type Description PageSize JisB1 Japanese Industrial Standards B1 (728 mm x 1030 mm) Declaration public static PageSize JisB1 { get; } Property Value Type Description PageSize JisB10 Japanese Industrial Standards B10 (32 mm x 45 mm) Declaration public static PageSize JisB10 { get; } Property Value Type Description PageSize JisB2 Japanese Industrial Standards B2 (515 mm x 728 mm) Declaration public static PageSize JisB2 { get; } Property Value Type Description PageSize JisB3 Japanese Industrial Standards B3 (364 mm x 515 mm) Declaration public static PageSize JisB3 { get; } Property Value Type Description PageSize JisB4 Japanese Industrial Standards B4 (257 mm x 364 mm) Declaration public static PageSize JisB4 { get; } Property Value Type Description PageSize JisB5 Japanese Industrial Standards B5 (182 mm x 257 mm) Declaration public static PageSize JisB5 { get; } Property Value Type Description PageSize JisB6 Japanese Industrial Standards B6 (128 mm x 182 mm) Declaration public static PageSize JisB6 { get; } Property Value Type Description PageSize JisB7 Japanese Industrial Standards B7 (91 mm x 128 mm) Declaration public static PageSize JisB7 { get; } Property Value Type Description PageSize JisB8 Japanese Industrial Standards B8 (64 mm x 91 mm) Declaration public static PageSize JisB8 { get; } Property Value Type Description PageSize JisB9 Japanese Industrial Standards B9 (45 mm x 64 mm) Declaration public static PageSize JisB9 { get; } Property Value Type Description PageSize JisExec Japanese Industrial Standards Exec (216 mm x 330 mm) Declaration public static PageSize JisExec { get; } Property Value Type Description PageSize JpnChou2 Japan Chou2 (111.1 mm x 146 mm) Declaration public static PageSize JpnChou2 { get; } Property Value Type Description PageSize JpnChou3 Japan Chou3 (120 mm x 235 mm) Declaration public static PageSize JpnChou3 { get; } Property Value Type Description PageSize JpnChou4 Japan Chou4 (90 mm x 205 mm) Declaration public static PageSize JpnChou4 { get; } Property Value Type Description PageSize JpnHagaki Japan Hagaki Postcard (100 mm x 148 mm) Declaration public static PageSize JpnHagaki { get; } Property Value Type Description PageSize JpnKahu Japan Kahu (240 mm x 322.1 mm) Declaration public static PageSize JpnKahu { get; } Property Value Type Description PageSize JpnKahu2 Japan Kahu2 (240 mm x 332 mm) Declaration public static PageSize JpnKahu2 { get; } Property Value Type Description PageSize JpnOufuku Japan Oufuku (148 mm x 200 mm) Declaration public static PageSize JpnOufuku { get; } Property Value Type Description PageSize JpnYou4 Japan You 4 (105 mm x 235 mm) Declaration public static PageSize JpnYou4 { get; } Property Value Type Description PageSize NaEnvelopeNo09 North Amerian #9 Envelope Declaration public static PageSize NaEnvelopeNo09 { get; } Property Value Type Description PageSize NaEnvelopeNo10 North America #10 Envelope Declaration public static PageSize NaEnvelopeNo10 { get; } Property Value Type Description PageSize NaFoolscap North America Foolscap media (8\" x 13\") Declaration public static PageSize NaFoolscap { get; } Property Value Type Description PageSize NaGovernmentLetter North America Government-Letter media (8.0\" x 10.5\") Declaration public static PageSize NaGovernmentLetter { get; } Property Value Type Description PageSize NaIndex3x5 North America Index Card 3x5 (3\" x 5\") Declaration public static PageSize NaIndex3x5 { get; } Property Value Type Description PageSize NaIndex4x6 North America Index Card 4x6 (4\" x 6\") Declaration public static PageSize NaIndex4x6 { get; } Property Value Type Description PageSize NaIndex5x8 North America Index Card 5x8 (5\" x 8\") Declaration public static PageSize NaIndex5x8 { get; } Property Value Type Description PageSize NaJuniorLegal North America Junior Legal media (8.0\" x 5.0\") Declaration public static PageSize NaJuniorLegal { get; } Property Value Type Description PageSize NaLedger North America Ledger media (17\" x 11\") Declaration public static PageSize NaLedger { get; } Property Value Type Description PageSize NaLegal North America Legal media (8.5\" x 14\") Declaration public static PageSize NaLegal { get; } Property Value Type Description PageSize NaLetter North America Letter media (8.5\" x 11\") Declaration public static PageSize NaLetter { get; } Property Value Type Description PageSize Name Name of Page Size Declaration public string Name { get; } Property Value Type Description String NaMonarch North America Monarch (7.25\" x 10.5\") Declaration public static PageSize NaMonarch { get; } Property Value Type Description PageSize NaQuarto North America Quarto (8\" x 10\") Declaration public static PageSize NaQuarto { get; } Property Value Type Description PageSize NaTabloid North America Tabloid media (11\" x 17\") Declaration public static PageSize NaTabloid { get; } Property Value Type Description PageSize OmDaiPaKai Chinese Dai Pa Kai media (275mm x 395mm) Declaration public static PageSize OmDaiPaKai { get; } Property Value Type Description PageSize OmJuuroKuKai Chinese Jurro Ku Kai media (198mm x 275mm) Declaration public static PageSize OmJuuroKuKai { get; } Property Value Type Description PageSize OmPaKai Chinese Pa Kai media (267mm x 389mm) Declaration public static PageSize OmPaKai { get; } Property Value Type Description PageSize Prc1 Peoples Republic of China 1 (102mm x 165mm) Declaration public static PageSize Prc1 { get; } Property Value Type Description PageSize Prc10 Peoples Republic of China 10 (324mm x 458mm) Declaration public static PageSize Prc10 { get; } Property Value Type Description PageSize Prc16K Peoples Republic of China 16K (146mm x 215mm) Declaration public static PageSize Prc16K { get; } Property Value Type Description PageSize Prc2 Peoples Republic of China 2 (102mm x 176mm) Declaration public static PageSize Prc2 { get; } Property Value Type Description PageSize Prc3 Peoples Republic of China 3 (125mm x 176mm) Declaration public static PageSize Prc3 { get; } Property Value Type Description PageSize Prc4 Peoples Republic of China 4 (110mm x 208mm) Declaration public static PageSize Prc4 { get; } Property Value Type Description PageSize Prc5 Peoples Republic of China 5 (110mm x 220mm) Declaration public static PageSize Prc5 { get; } Property Value Type Description PageSize Prc6 Peoples Republic of China 6 (120mm x 320mm) Declaration public static PageSize Prc6 { get; } Property Value Type Description PageSize Prc7 Peoples Republic of China 7 (160mm x 230mm) Declaration public static PageSize Prc7 { get; } Property Value Type Description PageSize Prc8 Peoples Republic of China 8 (120mm x 309mm) Declaration public static PageSize Prc8 { get; } Property Value Type Description PageSize Prc9 Peoples Republic of China 9 (229mm x 324mm) Declaration public static PageSize Prc9 { get; } Property Value Type Description PageSize Roc16K Republic of China 16K (195mm x 270mm) Declaration public static PageSize Roc16K { get; } Property Value Type Description PageSize Roc8K Republic of China 8K (270mm x 390mm) Declaration public static PageSize Roc8K { get; } Property Value Type Description PageSize Width Page width in points (72 points per inch) Declaration public double Width { get; } Property Value Type Description Double Methods AsLandscape() Sets the current paper size to landscape orientation Declaration public void AsLandscape() AsPortrait() Sets the current PaperSize to portrait orientation Declaration public void AsPortrait()"
  },
  "api/Forms9Patch.PermissionPopup.html": {
    "href": "api/Forms9Patch.PermissionPopup.html",
    "title": "Class PermissionPopup | Forms9Patch",
    "keywords": "Class PermissionPopup Permission popup. Inheritance Object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage PopupPage Forms9Patch.PopupBase BubblePopup Alert PermissionPopup Implements INotifyPropertyChanged IAnimatable ITabStopElement ILayout IPageController IVisualElementController IElementController IElementConfiguration < Page > IPopup IBackground IShape IElement IDisposable Inherited Members Alert.Create(String, String, String, Color, Color) Alert.Create(VisualElement, String, String, String, Color, Color) Alert.TitleProperty Alert.Title Alert.TextProperty Alert.Text Alert.OkTextProperty Alert.OkText Alert.OkButtonColorProperty Alert.OkButtonColor Alert.OkTextColorProperty Alert.OkTextColor Alert.PermissionStateProperty Alert.PermissionState Alert.OkTapped Alert._okButton Alert.OnAppearing() BubblePopup.Content BubblePopup.TargetBiasProperty BubblePopup.TargetBias BubblePopup.PointerLengthProperty BubblePopup.PointerLength BubblePopup.PointerTipRadiusProperty BubblePopup.PointerTipRadius BubblePopup.PointerDirectionProperty BubblePopup.PointerDirection BubblePopup.PreferredPointerDirectionProperty BubblePopup.PreferredPointerDirection BubblePopup.PointerCornerRadiusProperty BubblePopup.PointerCornerRadius BubblePopup.PointProperty BubblePopup.Point BubblePopup.OnAppearingAnimationBegin() BubblePopup.UsePoint BubblePopup.Available(Double, Double, Rectangle) BubblePopup.LayoutChildren(Double, Double, Double, Double) PopupPage.BackgroundClicked PopupPage.IsAnimationEnabledProperty PopupPage.IsAnimationEnabled PopupPage.HasSystemPaddingProperty PopupPage.HasSystemPadding PopupPage.AnimationProperty PopupPage.Animation PopupPage.SystemPaddingProperty PopupPage.SystemPadding PopupPage.SystemPaddingSidesProperty PopupPage.SystemPaddingSides PopupPage.CloseWhenBackgroundIsClickedProperty PopupPage.CloseWhenBackgroundIsClicked PopupPage.BackgroundInputTransparentProperty PopupPage.BackgroundInputTransparent PopupPage.HasKeyboardOffsetProperty PopupPage.HasKeyboardOffset PopupPage.KeyboardOffsetProperty PopupPage.KeyboardOffset PopupPage.OnBackButtonPressed() PopupPage.OnAppearingAnimationEnd() PopupPage.OnDisappearingAnimationBegin() PopupPage.OnDisappearingAnimationEnd() PopupPage.OnAppearingAnimationBeginAsync() PopupPage.OnAppearingAnimationEndAsync() PopupPage.OnDisappearingAnimationBeginAsync() PopupPage.OnDisappearingAnimationEndAsync() PopupPage.OnBackgroundClicked() ContentPage.ContentProperty ContentPage.OnBindingContextChanged() TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element) TemplatedPage.OnChildRemoved(Element, Int32) TemplatedPage.GetTemplateChild(String) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.IconImageSourceProperty Page.DisplayActionSheet(String, String, String, String[]) Page.DisplayAlert(String, String, String) Page.DisplayAlert(String, String, String, String) Page.DisplayPromptAsync(String, String, String, String, String, Int32, Keyboard, String) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnChildMeasureInvalidated(Object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(Double, Double) Page.UpdateChildrenLayout() Page.On<T>() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.ToolbarItems Page.LayoutChanged Page.Appearing Page.Disappearing VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class PermissionPopup : Alert, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, IPaddingElement, IControlTemplated, IPopup, IBackground, IShape, IElement, IDisposable Constructors PermissionPopup(VisualElement) Initializes a new instance of the PermissionPopup class. Declaration public PermissionPopup(VisualElement target = null) Parameters Type Name Description VisualElement target Fields CancelButtonColorProperty The cancel button color property. Declaration public static readonly BindableProperty CancelButtonColorProperty Field Value Type Description BindableProperty CancelTextColorProperty The cancel text color property. Declaration public static readonly BindableProperty CancelTextColorProperty Field Value Type Description BindableProperty CancelTextProperty The cancel text property. Declaration public static readonly BindableProperty CancelTextProperty Field Value Type Description BindableProperty Properties CancelButtonColor Gets or sets the color of the cancel button. Declaration public Color CancelButtonColor { get; set; } Property Value Type Description Color The color of the cancel button. CancelText Gets or sets the cancel text. Declaration public string CancelText { get; set; } Property Value Type Description String The cancel text. CancelTextColor Gets or sets the color of the cancel text. Declaration public Color CancelTextColor { get; set; } Property Value Type Description Color The color of the cancel text. Methods CancelAsync(Object) Cancel the PermissionPopup Declaration public override Task CancelAsync(object trigger = null) Parameters Type Name Description Object trigger Returns Type Description Task Overrides Alert.CancelAsync(Object) Create(String, String, String, String, Color, Color, Color, Color) Create the specified title, text, okText, cancelText, okButtonColor, cancelButtonColor, okTextColor and cancelTextColor. Declaration public static PermissionPopup Create(string title, string text, string okText = \"OK\", string cancelText = \"Cancel\", Color okButtonColor = default(Color), Color cancelButtonColor = default(Color), Color okTextColor = default(Color), Color cancelTextColor = default(Color)) Parameters Type Name Description String title Title. String text Text. String okText Ok text. String cancelText Cancel text. Color okButtonColor Ok button color. Color cancelButtonColor Cancel button color. Color okTextColor Ok text color. Color cancelTextColor Cancel text color. Returns Type Description PermissionPopup Create(VisualElement, String, String, String, String, Color, Color, Color, Color) Create the specified target, title, text, okText, cancelText, okButtonColor, cancelButtonColor, okTextColor and cancelTextColor. Declaration public static PermissionPopup Create(VisualElement target, string title, string text, string okText = \"OK\", string cancelText = \"Cancel\", Color okButtonColor = default(Color), Color cancelButtonColor = default(Color), Color okTextColor = default(Color), Color cancelTextColor = default(Color)) Parameters Type Name Description VisualElement target Target. String title Title. String text Text. String okText Ok text. String cancelText Cancel text. Color okButtonColor Ok button color. Color cancelButtonColor Cancel button color. Color okTextColor Ok text color. Color cancelTextColor Cancel text color. Returns Type Description PermissionPopup The create. Dispose(Boolean) Dispose instance Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides Alert.Dispose(Boolean) OnPropertyChanged(String) Ons the property changed. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides Alert.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.ILayout Xamarin.Forms.IPageController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.IElementConfiguration<TElement> IPopup IBackground IShape IElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(PopupBase) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.PermissionState.html": {
    "href": "api/Forms9Patch.PermissionState.html",
    "title": "Enum PermissionState | Forms9Patch",
    "keywords": "Enum PermissionState State of permission popup permission process Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum PermissionState Fields Name Description Cancelled Permission popup was cancelled Ok Permission was granted Pending Waiting for interaction with permission popup Rejected Permission was rejected"
  },
  "api/Forms9Patch.PointerDirection.html": {
    "href": "api/Forms9Patch.PointerDirection.html",
    "title": "Enum PointerDirection | Forms9Patch",
    "keywords": "Enum PointerDirection BubblePopup Pointer direction. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Flags] public enum PointerDirection Fields Name Description Any BubblePopup pointer points in what ever direction allow for it to have the most space. Down BubblePopup pointer points right. Horizontal BubblePopup pointer points either right or left, depending on which affords the most space. Left BubblePopup pointer points up None No pointer Right BubblePopup pointer points left. Up BubblePopup pointer points down. Vertical BubblePopup pointer points either up or down, depending on which affords the most space. Extension Methods PointerDirectionExtensions.IsVertical() PointerDirectionExtensions.IsHorizontal() PointerDirectionExtensions.LeftAllowed() PointerDirectionExtensions.RightAllowed() PointerDirectionExtensions.UpAllowed() PointerDirectionExtensions.DownAllowed()"
  },
  "api/Forms9Patch.PointerDirectionExtensions.html": {
    "href": "api/Forms9Patch.PointerDirectionExtensions.html",
    "title": "Class PointerDirectionExtensions | Forms9Patch",
    "keywords": "Class PointerDirectionExtensions Pointer direction extensions. Inheritance Object PointerDirectionExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class PointerDirectionExtensions Methods DownAllowed(PointerDirection) Determines if a pointer is allowed to down. Declaration public static bool DownAllowed(this PointerDirection dir) Parameters Type Name Description PointerDirection dir Dir. Returns Type Description Boolean true , if allowed was downed, false otherwise. IsHorizontal(PointerDirection) Determines if pointer direction is horizontal. Declaration public static bool IsHorizontal(this PointerDirection dir) Parameters Type Name Description PointerDirection dir Dir. Returns Type Description Boolean true if is horizontal the specified dir; otherwise, false . IsVertical(PointerDirection) Determines if pointer direction is vertical. Declaration public static bool IsVertical(this PointerDirection dir) Parameters Type Name Description PointerDirection dir Dir. Returns Type Description Boolean true if is vertical the specified dir; otherwise, false . LeftAllowed(PointerDirection) Determines if a pointer is allowed to point left. Declaration public static bool LeftAllowed(this PointerDirection dir) Parameters Type Name Description PointerDirection dir Dir. Returns Type Description Boolean true , if allowed was lefted, false otherwise. RightAllowed(PointerDirection) Determines if a pointer is allowed to point right. Declaration public static bool RightAllowed(this PointerDirection dir) Parameters Type Name Description PointerDirection dir Dir. Returns Type Description Boolean true , if allowed was righted, false otherwise. UpAllowed(PointerDirection) Determines if a pointer is allowed to point up. Declaration public static bool UpAllowed(this PointerDirection dir) Parameters Type Name Description PointerDirection dir Dir. Returns Type Description Boolean true , if allowed was uped, false otherwise."
  },
  "api/Forms9Patch.PopupPoppedCause.html": {
    "href": "api/Forms9Patch.PopupPoppedCause.html",
    "title": "Enum PopupPoppedCause | Forms9Patch",
    "keywords": "Enum PopupPoppedCause Causes for Forms9Patch popup being popped Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum PopupPoppedCause Fields Name Description BackgroundTouch popup's background was touched ButtonTapped One of the popup's pre-packaged buttons was tapped Custom User supplied trigger was given to the popup's CancelAsync method Disposed The popup was disposed HardwareBackButtonPressed Devices [back] button was pressed IsVisiblePropertySet popups IsVisible property was set to false MethodCalled A method (passed via trigger property) was called that popped the popup SegmentTapped One of the popup's pre-packaged segments was tapped Timeout The popup timed out"
  },
  "api/Forms9Patch.PopupPoppedEventArgs.html": {
    "href": "api/Forms9Patch.PopupPoppedEventArgs.html",
    "title": "Class PopupPoppedEventArgs | Forms9Patch",
    "keywords": "Class PopupPoppedEventArgs Event arguments passed by Popped event and DelayUntilPoppedAsyc() method in Forms9Patch popups. Inheritance Object EventArgs PopupPoppedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class PopupPoppedEventArgs : EventArgs Constructors PopupPoppedEventArgs(PopupPoppedCause, Object) Constructor Declaration public PopupPoppedEventArgs(PopupPoppedCause cause, object trigger) Parameters Type Name Description PopupPoppedCause cause Object trigger Properties Cause What was the cause of the Popup being popped? Declaration public PopupPoppedCause Cause { get; } Property Value Type Description PopupPoppedCause Trigger What object triggered the popup being popped Declaration public object Trigger { get; } Property Value Type Description Object"
  },
  "api/Forms9Patch.PrintService.html": {
    "href": "api/Forms9Patch.PrintService.html",
    "title": "Class PrintService | Forms9Patch",
    "keywords": "Class PrintService Extensions to XF WebView Inheritance Object PrintService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class PrintService Properties CanPrint Gets a value indicating whether this Forms9Patch.WebViewExtensions can print. Declaration public static bool CanPrint { get; } Property Value Type Description Boolean true if can print; otherwise, false . Methods Print(String, String) OBSOLETE: Use PrintAsync instead Declaration [Obsolete(\"Please use PrintAsync\", true)] public static void Print(this string html, string jobName) Parameters Type Name Description String html String jobName Print(WebView, String) OBSOLETE: Use PrintAsync instead Declaration [Obsolete(\"Please use PrintAsync\", true)] public static void Print(this WebView webview, string jobName) Parameters Type Name Description WebView webview String jobName PrintAsync(String, String, FailAction) Print HTML string Declaration public static Task PrintAsync(this string html, string jobName, FailAction failAction = FailAction.ShowAlert) Parameters Type Name Description String html String jobName FailAction failAction What to do if there is a failure. Returns Type Description Task PrintAsync(WebView, String, FailAction) Print the specified webview and jobName. Declaration public static Task PrintAsync(this WebView webview, string jobName, FailAction failAction = FailAction.ShowAlert) Parameters Type Name Description WebView webview Webview. String jobName Job name. FailAction failAction What to do if there is a failure. Returns Type Description Task"
  },
  "api/Forms9Patch.Proximity.html": {
    "href": "api/Forms9Patch.Proximity.html",
    "title": "Enum Proximity | Forms9Patch",
    "keywords": "Enum Proximity The position of a cell being dragged relative to the cell it is hovering over Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum Proximity Fields Name Description After After: the cell being dragged over is biased towards the right/bottom of the cell it is hovering over. Aligned Center: the cell being dragged over is centered over the cell it is hovering over. Before Before: the cell being dragged over is biased towards the left/top of the cell it is hovering over. None None: Can't be calculated or the cell being dragged isn't hovering over."
  },
  "api/Forms9Patch.RectangleExtensions.html": {
    "href": "api/Forms9Patch.RectangleExtensions.html",
    "title": "Class RectangleExtensions | Forms9Patch",
    "keywords": "Class RectangleExtensions Rectangle extensions. Inheritance Object RectangleExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class RectangleExtensions Methods ToString(Rectangle) Tos the string. Declaration public static string ToString(this Rectangle rect) Parameters Type Name Description Rectangle rect Rect. Returns Type Description String The string."
  },
  "api/Forms9Patch.RelativeLayout.html": {
    "href": "api/Forms9Patch.RelativeLayout.html",
    "title": "Class RelativeLayout | Forms9Patch",
    "keywords": "Class RelativeLayout Forms9Patch RelativeLayout. Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView ContentView Frame Forms9Patch.BindableObject < RelativeLayout > Forms9Patch.Element < RelativeLayout > Forms9Patch.VisualElement < RelativeLayout > Forms9Patch.View < RelativeLayout > Forms9Patch.BaseLayout < RelativeLayout > Forms9Patch.Layout < RelativeLayout > RelativeLayout Implements INotifyPropertyChanged IAnimatable ITabStopElement IGestureController IGestureRecognizers IDisposable IViewController IVisualElementController IElementController ILayout ILayoutController IViewContainer < View > ILayout IBackground IShape IElement IElementConfiguration < RelativeLayout > Inherited Members Frame.OnPropertyChanged(String) ContentView.ContentProperty ContentView.Content ContentView.IgnoreChildrenProperty ContentView.IgnoreChildren ContentView.BackgroundImageProperty ContentView.BackgroundImage ContentView.LimitMinSizeToBackgroundImageSizeProperty ContentView.LimitMinSizeToBackgroundImageSize ContentView.BackgroundColorProperty ContentView.BackgroundColor ContentView.HasShadowProperty ContentView.HasShadow ContentView.ShadowInvertedProperty ContentView.ShadowInverted ContentView.OutlineColorProperty ContentView.OutlineColor ContentView.BorderColorProperty ContentView.BorderColor ContentView.OutlineRadiusProperty ContentView.OutlineRadius ContentView.BorderRadiusProperty ContentView.BorderRadius ContentView.OutlineWidthProperty ContentView.OutlineWidth ContentView.BorderWidthProperty ContentView.BorderWidth ContentView.ElementShapeProperty ContentView.ElementShape ContentView.InstanceId ContentView._f9pId ContentView._fallbackBackgroundImage ContentView.CurrentBackgroundImage ContentView.BaseInternalChildren ContentView.Dispose(Boolean) ContentView.Dispose() ContentView.Description() ContentView.ToString() ContentView.ShouldInvalidateOnChildAdded(View) ContentView.ShouldInvalidateOnChildRemoved(View) ContentView.OnChildMeasureInvalidated() ContentView.OnSizeRequest(Double, Double) ContentView.LayoutChildren(Double, Double, Double, Double) ContentView.OnBindingContextChanged() TemplatedView.ControlTemplateProperty TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class RelativeLayout : Layout<RelativeLayout>, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IGestureController, IGestureRecognizers, IPaddingElement, IControlTemplated, IDisposable, IViewController, IVisualElementController, IElementController, ILayout, ILayoutController, IViewContainer<View>, ILayout, IBackground, IShape, IElement, IElementConfiguration<RelativeLayout> Constructors RelativeLayout() Initializes a new instance of the RelativeLayout class. Declaration public RelativeLayout() Properties Children List of Views that are children of this RelativeLayout. Declaration public RelativeLayout.IRelativeList<View> Children { get; } Property Value Type Description RelativeLayout.IRelativeList < View > The children. Methods GetBoundsConstraint(BindableObject) Gets the bounds constraint of element in RelativeLayout Declaration public static BoundsConstraint GetBoundsConstraint(BindableObject bindable) Parameters Type Name Description BindableObject bindable Bindable. Returns Type Description BoundsConstraint The bounds constraint. GetHeightConstraint(BindableObject) Gets the height constraint of element in RelativeLayout Declaration public static Constraint GetHeightConstraint(BindableObject bindable) Parameters Type Name Description BindableObject bindable Bindable. Returns Type Description Constraint The height constraint. GetWidthConstraint(BindableObject) Gets the width constraint of element in RelativeLayout Declaration public static Constraint GetWidthConstraint(BindableObject bindable) Parameters Type Name Description BindableObject bindable Bindable. Returns Type Description Constraint The width constraint. GetXConstraint(BindableObject) Gets the X constraint of element in RelativeLayout Declaration public static Constraint GetXConstraint(BindableObject bindable) Parameters Type Name Description BindableObject bindable Bindable. Returns Type Description Constraint The XC onstraint. GetYConstraint(BindableObject) Gets the Y constraint of element in RelativeLayout Declaration public static Constraint GetYConstraint(BindableObject bindable) Parameters Type Name Description BindableObject bindable Bindable. Returns Type Description Constraint The YC onstraint. On<T>() Marker interface for returning platform-specific configuration elements. Declaration public IPlatformElementConfiguration<T, RelativeLayout> On<T>() where T : IConfigPlatform Returns Type Description IPlatformElementConfiguration <T, RelativeLayout > Type Parameters Name Description T SetBoundsConstraint(BindableObject, BoundsConstraint) Sets the bounds constraint of element in RelativeLayout Declaration public static void SetBoundsConstraint(BindableObject bindable, BoundsConstraint value) Parameters Type Name Description BindableObject bindable Bindable. BoundsConstraint value Value. SetHeightConstraint(BindableObject, Constraint) Sets the height constraint of element in RelativeLayout Declaration public static void SetHeightConstraint(BindableObject bindable, Constraint value) Parameters Type Name Description BindableObject bindable Bindable. Constraint value Value. SetWidthConstraint(BindableObject, Constraint) Sets the width constraint of element in RelativeLayout Declaration public static void SetWidthConstraint(BindableObject bindable, Constraint value) Parameters Type Name Description BindableObject bindable Bindable. Constraint value Value. SetXConstraint(BindableObject, Constraint) Sets the X constraint of element in RelativeLayout Declaration public static void SetXConstraint(BindableObject bindable, Constraint value) Parameters Type Name Description BindableObject bindable Bindable. Constraint value Value. SetYConstraint(BindableObject, Constraint) Sets the Y constraint of element in RelativeLayout Declaration public static void SetYConstraint(BindableObject bindable, Constraint value) Parameters Type Name Description BindableObject bindable Bindable. Constraint value Value. Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers System.IDisposable Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Xamarin.Forms.IViewContainer<T> ILayout IBackground IShape IElement Xamarin.Forms.IElementConfiguration<TElement> Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.ScrollViewExtensions.html": {
    "href": "api/Forms9Patch.ScrollViewExtensions.html",
    "title": "Class ScrollViewExtensions | Forms9Patch",
    "keywords": "Class ScrollViewExtensions Scroll helper extensions Inheritance Object ScrollViewExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class ScrollViewExtensions Methods ScrollToBottomAync(ScrollView, Boolean) Scroll to bottom edge Declaration public static Task ScrollToBottomAync(this ScrollView scrollView, bool animated = true) Parameters Type Name Description ScrollView scrollView Boolean animated Returns Type Description Task ScrollToEndAsync(ScrollView, Boolean) Scroll to bottom right corner Declaration public static Task ScrollToEndAsync(this ScrollView scrollView, bool animated = true) Parameters Type Name Description ScrollView scrollView Boolean animated Returns Type Description Task ScrollToLeftAsync(ScrollView, Boolean) Scroll to left edge Declaration public static Task ScrollToLeftAsync(this ScrollView scrollView, bool animated = true) Parameters Type Name Description ScrollView scrollView Boolean animated Returns Type Description Task ScrollToRightAsync(ScrollView, Boolean) Scroll to right edge Declaration public static Task ScrollToRightAsync(this ScrollView scrollView, bool animated = true) Parameters Type Name Description ScrollView scrollView Boolean animated Returns Type Description Task ScrollToStartAsync(ScrollView, Boolean) Scroll to top left corner Declaration public static Task ScrollToStartAsync(this ScrollView scrollView, bool animated = true) Parameters Type Name Description ScrollView scrollView Boolean animated Returns Type Description Task ScrollToTopAsync(ScrollView, Boolean) Scroll to top edge Declaration public static Task ScrollToTopAsync(this ScrollView scrollView, bool animated = true) Parameters Type Name Description ScrollView scrollView Boolean animated Returns Type Description Task"
  },
  "api/Forms9Patch.Segment.html": {
    "href": "api/Forms9Patch.Segment.html",
    "title": "Class Segment | Forms9Patch",
    "keywords": "Class Segment Model for Segment. Inheritance Object BindableObject Element Segment Implements INotifyPropertyChanged IElementController ISegment IMenuItem IDisposable Inherited Members Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.OnBindingContextChanged() Element.OnChildAdded(Element) Element.OnChildRemoved(Element) Element.OnChildRemoved(Element, Int32) Element.OnParentSet() Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [ContentProperty(\"HtmlText\")] public class Segment : Element, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, IElementController, IStyleSelectable, ISegment, IMenuItem, IDisposable Constructors Segment() Initializes a new instance of the Segment class. Declaration public Segment() Segment(String, Image) Instantiates an new Segment and sets its Text and imageSource properties Declaration public Segment(string text, Image image) Parameters Type Name Description String text Image image Segment(String, String, Assembly) Instantiates a new Segment and sets its Text and either its IconText or its IconImage, created using the provided embedded resource id Declaration public Segment(string text, string icon, Assembly assembly = null) Parameters Type Name Description String text Segment's text String icon Segments's icon (either EmbeddedResourceId or HtmlText) Assembly assembly Assembly that has EmbeddedResource used for Icon Segment(String, ImageSource) Instantiates an new Segment and sets its Text property and sets the IconImage to a new image, created using the provided ImageSource Declaration public Segment(string text, ImageSource imageSource = null) Parameters Type Name Description String text ImageSource imageSource Fields CommandParameterProperty Backing store for the Segment.CommandParameter bindable property. Declaration public static readonly BindableProperty CommandParameterProperty Field Value Type Description BindableProperty CommandProperty Backing store for the Segment.Command bindable property. Declaration public static readonly BindableProperty CommandProperty Field Value Type Description BindableProperty FontAttributesProperty Backing store for the Segment.FontAttributes bindable property. Declaration public static readonly BindableProperty FontAttributesProperty Field Value Type Description BindableProperty FontColorProperty OBSOLETE: Use TextColorProperty Declaration [Obsolete(\"Use TextColorProperty\")] public static readonly BindableProperty FontColorProperty Field Value Type Description BindableProperty HtmlTextProperty Backing store for the formatted text property. Declaration public static readonly BindableProperty HtmlTextProperty Field Value Type Description BindableProperty IconFontFamilyProperty Backing store for Segment IconFontFamily property Declaration public static readonly BindableProperty IconFontFamilyProperty Field Value Type Description BindableProperty IconFontSizeProperty Backing store for Segment IconFontSize property Declaration public static readonly BindableProperty IconFontSizeProperty Field Value Type Description BindableProperty IconImageProperty Bindable Property for the IconImage property Declaration public static BindableProperty IconImageProperty Field Value Type Description BindableProperty IconTextProperty The icon text property backing store. Declaration public static readonly BindableProperty IconTextProperty Field Value Type Description BindableProperty ImageSourceProperty Backing store for the Image bindable property. Declaration [Obsolete(\"Use IconImageProperty instead\")] public static BindableProperty ImageSourceProperty Field Value Type Description BindableProperty IsEnabledProperty The backing store for the is enabled property. Declaration public static readonly BindableProperty IsEnabledProperty Field Value Type Description BindableProperty IsSelectedProperty The backing store for the is selected property. Declaration public static readonly BindableProperty IsSelectedProperty Field Value Type Description BindableProperty OrientationProperty The backing store for the orientation property. Declaration public static readonly BindableProperty OrientationProperty Field Value Type Description BindableProperty TextColorProperty Backing store for the Segment.TextColor bindable property. Declaration public static readonly BindableProperty TextColorProperty Field Value Type Description BindableProperty TextProperty Backing store for the Text bindable property. Declaration public static readonly BindableProperty TextProperty Field Value Type Description BindableProperty Properties Command Gets or sets the command to invoke when the segment is selected. Declaration public ICommand Command { get; set; } Property Value Type Description ICommand A command to invoke when the segment is selected. The default value is null . Remarks This property is used to associate a command with an instance of a segment. This property is most often set in the MVVM pattern to bind callbacks back into the ViewModel. IsEnabled is controlled by the Command if set. CommandParameter Gets or sets the parameter to pass to the Command property. Declaration public object CommandParameter { get; set; } Property Value Type Description Object A object to pass to the command property. The default value is null . FontAttributes Gets or sets the font attributes. Declaration public FontAttributes FontAttributes { get; set; } Property Value Type Description FontAttributes The font attributes. FontColor OBSOLETE: Use TextColor Declaration [Obsolete(\"Use TextColor\")] public Color FontColor { get; set; } Property Value Type Description Color The color of the font. HtmlText Gets or sets the formatted text. Declaration public string HtmlText { get; set; } Property Value Type Description String The formatted text. IconFontFamily controls value of .IconFontFamily property Declaration public string IconFontFamily { get; set; } Property Value Type Description String IconFontSize controls value of .IconFontSize property Declaration public double IconFontSize { get; set; } Property Value Type Description Double IconImage Gets or sets the icon image for this Segment . Alternative to IconText prop Declaration public Image IconImage { get; set; } Property Value Type Description Image IconText Gets or sets the icon text - alternative to ImageSource. Declaration public string IconText { get; set; } Property Value Type Description String The icon text. ImageSource Gets or sets the companion image for this this Segment - alternative to IconText. Declaration [Obsolete(\"Use IconImage instead\")] public ImageSource ImageSource { get; set; } Property Value Type Description ImageSource The image. IsEnabled Gets or sets a value indicating whether this Segment is enabled. Declaration public bool IsEnabled { get; set; } Property Value Type Description Boolean true if enabled; otherwise, false . IsSelected Declaration public bool IsSelected { get; set; } Property Value Type Description Boolean true if selected; otherwise, false . Orientation Gets or sets the image/lable orientation. Declaration public StackOrientation Orientation { get; set; } Property Value Type Description StackOrientation The iamge/label orientation. Text Gets or sets the text for this Segment . Declaration public string Text { get; set; } Property Value Type Description String The text. TextColor Gets or sets the color of the font. Declaration public Color TextColor { get; set; } Property Value Type Description Color The color of the font. VisualElement Gets the visual element used to render the Segment (to support Bubble Popup). Declaration public VisualElement VisualElement { get; } Property Value Type Description VisualElement The visual element. Methods Dispose() Dispose Declaration public void Dispose() Dispose(Boolean) Dispose Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing OnPropertyChanged(String) Ons the property changed. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides Element.OnPropertyChanged(String) SendClicked() Programmically click the segement Declaration public void SendClicked() Tap() Tap this instance. Declaration public void Tap() Events LongPressed Occurs when long pressed. Declaration public event EventHandler LongPressed Event Type Type Description EventHandler LongPressing Occurs when long pressing. Declaration public event EventHandler LongPressing Event Type Type Description EventHandler Selected Occurs when Segment is selected. Declaration public event EventHandler Selected Event Type Type Description EventHandler Tapped Occurs when Segment is tapped. Declaration public event EventHandler Tapped Event Type Type Description EventHandler Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IElementController ISegment IMenuItem System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element)"
  },
  "api/Forms9Patch.SegmentedControl.html": {
    "href": "api/Forms9Patch.SegmentedControl.html",
    "title": "Class SegmentedControl | Forms9Patch",
    "keywords": "Class SegmentedControl Forms9Patch Material Segmented Control. Inheritance Object BindableObject Element NavigableElement VisualElement View Layout Layout < View > ManualLayout SegmentedControl MaterialSegmentedControl Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers ILayout ILayoutController IViewContainer < View > ILayout IBackground IShape IElement ILabelStyle IFontElement IDisposable Inherited Members ManualLayout.IgnoreChildrenProperty ManualLayout.IgnoreChildren ManualLayout.BackgroundImageProperty ManualLayout.BackgroundImage ManualLayout.HasShadowProperty ManualLayout.HasShadow ManualLayout.ShadowInvertedProperty ManualLayout.ShadowInverted ManualLayout.OutlineColorProperty ManualLayout.OutlineColor ManualLayout.BorderColorProperty ManualLayout.BorderColor ManualLayout.OutlineRadiusProperty ManualLayout.OutlineRadius ManualLayout.BorderRadiusProperty ManualLayout.BorderRadius ManualLayout.OutlineWidthProperty ManualLayout.OutlineWidth ManualLayout.BorderWidthProperty ManualLayout.BorderWidth ManualLayout.ElementShapeProperty ManualLayout.ElementShape ManualLayout.InstanceId ManualLayout.Description() ManualLayout.ToString() ManualLayout.LayoutChildrenEvent ManualLayout.ShouldInvalidateOnChildAdded(View) ManualLayout.ShouldInvalidateOnChildRemoved(View) ManualLayout.OnChildMeasureInvalidated() Layout<View>.OnChildAdded(Element) Layout<View>.OnChildRemoved(Element) Layout<View>.OnChildRemoved(Element, Int32) Layout<View>.OnAdded(View) Layout<View>.OnRemoved(View) Layout<View>.Children Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildrenReordered() VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [ContentProperty(\"Segments\")] public class SegmentedControl : ManualLayout, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IViewContainer<View>, ILayout, IBackground, IShape, IElement, ILabelStyle, IFontElement, IDisposable Constructors SegmentedControl() Initializes a new instance of the SegmentedControl class. Declaration public SegmentedControl() Fields AutoFitProperty backing store for AutoFit property Declaration public static readonly BindableProperty AutoFitProperty Field Value Type Description BindableProperty BackgroundColorProperty Backing store for the Button.BackgroundColor bindable property. Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty DarkThemeProperty Backing store for the Button.DarkTheme property. Declaration public static readonly BindableProperty DarkThemeProperty Field Value Type Description BindableProperty FontAttributesProperty Backing store for the Button.FontAttributes bindable property. Declaration public static readonly BindableProperty FontAttributesProperty Field Value Type Description BindableProperty FontColorProperty Use TextColorProperty Declaration [Obsolete(\"Use TextColorProperty\")] public static readonly BindableProperty FontColorProperty Field Value Type Description BindableProperty FontFamilyProperty Backing store for the Button.FontFamiily bindable property. Declaration public static readonly BindableProperty FontFamilyProperty Field Value Type Description BindableProperty FontSizeProperty Backing store for the Button.FontSize bindable property. Declaration public static readonly BindableProperty FontSizeProperty Field Value Type Description BindableProperty GroupToggleBehaviorProperty The backing store for the MaterialSegmentControl's ToggleBehavior property. Declaration public static readonly BindableProperty GroupToggleBehaviorProperty Field Value Type Description BindableProperty HapticEffectModeProperty The haptic mode property. Declaration public static readonly BindableProperty HapticEffectModeProperty Field Value Type Description BindableProperty HapticEffectProperty The haptic effect property. Declaration public static readonly BindableProperty HapticEffectProperty Field Value Type Description BindableProperty HasTightSpacingProperty The has tight spacing property. Declaration public static readonly BindableProperty HasTightSpacingProperty Field Value Type Description BindableProperty HorizontalTextAlignmentProperty Backing store for the horizontal text alignment property. Declaration public static readonly BindableProperty HorizontalTextAlignmentProperty Field Value Type Description BindableProperty IconColorProperty Backing store for SegmentedControl IconColor property Declaration public static readonly BindableProperty IconColorProperty Field Value Type Description BindableProperty IconFontFamilyProperty Backing store for IconFontFamily property Declaration public static readonly BindableProperty IconFontFamilyProperty Field Value Type Description BindableProperty IconFontSizeProperty Backing store for SegmentedControl IconFontSize property Declaration public static readonly BindableProperty IconFontSizeProperty Field Value Type Description BindableProperty IntraSegmentOrientationProperty The backing store for the segments orientation property. Declaration public static readonly BindableProperty IntraSegmentOrientationProperty Field Value Type Description BindableProperty IntraSegmentSpacingProperty The backing store for the intra segment spacing property. Declaration public static readonly BindableProperty IntraSegmentSpacingProperty Field Value Type Description BindableProperty IsClippedProperty Backing store for the IsClipped property Declaration public static readonly BindableProperty IsClippedProperty Field Value Type Description BindableProperty IsLongPressEnabledProperty The is long press enabled property. Declaration public static readonly BindableProperty IsLongPressEnabledProperty Field Value Type Description BindableProperty LineBreakModeProperty backing store for LineBreakMode property Declaration public static readonly BindableProperty LineBreakModeProperty Field Value Type Description BindableProperty LinesProperty backing store for Lines property Declaration public static readonly BindableProperty LinesProperty Field Value Type Description BindableProperty MinFontSizeProperty backing store for MinFontSize property Declaration public static readonly BindableProperty MinFontSizeProperty Field Value Type Description BindableProperty OrientationProperty Backing store for the Orienation property Declaration public static readonly BindableProperty OrientationProperty Field Value Type Description BindableProperty PaddingProperty Identifies the Padding bindable property. Declaration public static readonly BindableProperty PaddingProperty Field Value Type Description BindableProperty SelectedBackgroundColorProperty Backing store for the Selected.BackgroundColor property. Declaration public static readonly BindableProperty SelectedBackgroundColorProperty Field Value Type Description BindableProperty SelectedFontColorProperty OBSOLETE: Use SelectedTextColorProperty Declaration [Obsolete(\"Use SelectedTextColorProperty\")] public static readonly BindableProperty SelectedFontColorProperty Field Value Type Description BindableProperty SelectedTextColorProperty The selected text color property. Declaration public static readonly BindableProperty SelectedTextColorProperty Field Value Type Description BindableProperty SeparatorWidthProperty The backing store for the MaterialSegmentControl's SeparatorWidth property. Declaration public static readonly BindableProperty SeparatorWidthProperty Field Value Type Description BindableProperty SoundEffectModeProperty Backing store for the sound effect mode property. Declaration public static readonly BindableProperty SoundEffectModeProperty Field Value Type Description BindableProperty SoundEffectProperty The backing store for the sound effect property. Declaration public static readonly BindableProperty SoundEffectProperty Field Value Type Description BindableProperty StickyBehaviorProperty OBSOLETE: Use ToggleBehaviorProperty instead. Declaration [Obsolete(\"StickyBehavior property is obsolete, use ToggleBehavior instead\", true)] public static BindableProperty StickyBehaviorProperty Field Value Type Description BindableProperty SyncSegmentFontSizesProperty The size segment fonts equally property. Declaration public static readonly BindableProperty SyncSegmentFontSizesProperty Field Value Type Description BindableProperty TextColorProperty Backing store for the TextColor bindable property. Declaration public static readonly BindableProperty TextColorProperty Field Value Type Description BindableProperty TintIconProperty The tint image property backing store. Declaration public static readonly BindableProperty TintIconProperty Field Value Type Description BindableProperty TintImageProperty OBSOLETE: Use TintIconProperty Declaration [Obsolete(\"Use TintIconProperty\", true)] public static readonly BindableProperty TintImageProperty Field Value Type Description BindableProperty TrailingIconProperty Backing store for the trailing image property. Declaration public static readonly BindableProperty TrailingIconProperty Field Value Type Description BindableProperty TrailingImageProperty OBSOLETE: Use TrailingIconProperty Declaration [Obsolete(\"Use TrailingIconProperty\")] public static readonly BindableProperty TrailingImageProperty Field Value Type Description BindableProperty VerticalTextAlignmentProperty Backing store for the vertical text alignment property. Declaration public static readonly BindableProperty VerticalTextAlignmentProperty Field Value Type Description BindableProperty Properties AutoFit Gets/Sets the AutoFit property Declaration public AutoFit AutoFit { get; set; } Property Value Type Description AutoFit BackgroundColor Gets or sets the color of the background. Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color The color of the background. DarkTheme Gets or sets a value indicating whether this Button if for a dark theme. Declaration public bool DarkTheme { get; set; } Property Value Type Description Boolean true if dark theme; otherwise, false . FontAttributes Gets or sets the font attributes. Declaration public FontAttributes FontAttributes { get; set; } Property Value Type Description FontAttributes The font attributes. FontColor OBSOLETE: Use TextColor Declaration [Obsolete(\"Use TextColor\")] public Color FontColor { get; set; } Property Value Type Description Color The color of the font. FontFamily Gets or sets the font family. Declaration public string FontFamily { get; set; } Property Value Type Description String The font family. FontSize Gets or sets the size of the font. Declaration public double FontSize { get; set; } Property Value Type Description Double The size of the font. GroupToggleBehavior Gets or sets the MaterialSegmentControl's Toggle behavior. Declaration public GroupToggleBehavior GroupToggleBehavior { get; set; } Property Value Type Description GroupToggleBehavior The Toggle behavior (None, Radio, Multiselect). HapticEffect Gets or sets the haptic effect. Declaration public HapticEffect HapticEffect { get; set; } Property Value Type Description HapticEffect The haptic effect. HapticEffectMode Gets or sets the haptic mode. Declaration public EffectMode HapticEffectMode { get; set; } Property Value Type Description EffectMode The haptic mode. HasTightSpacing Gets or sets if the Icon/Image is close (TightSpacing) to text or at edge (not TightSpacing) of button. Declaration public bool HasTightSpacing { get; set; } Property Value Type Description Boolean true if has tight spacing; otherwise, false . HorizontalTextAlignment Gets or sets the horizontal text alignment. Declaration public TextAlignment HorizontalTextAlignment { get; set; } Property Value Type Description TextAlignment The horizontal text alignment. IconColor controls value of .IconColor property Declaration public Color IconColor { get; set; } Property Value Type Description Color IconFontFamily Sets the font used for rendering the IconText Declaration public string IconFontFamily { get; set; } Property Value Type Description String IconFontSize controls value of .IconFontSize property Declaration public double IconFontSize { get; set; } Property Value Type Description Double IntraSegmentOrientation Gets or sets the orientation of elements within the segments. Declaration public StackOrientation IntraSegmentOrientation { get; set; } Property Value Type Description StackOrientation The orientation of the elements within the segments. IntraSegmentSpacing Gets or sets the intra segment spacing. Declaration public double IntraSegmentSpacing { get; set; } Property Value Type Description Double The intra segment spacing. IsClipped Gets or sets a value indicating whether any of the contents of this SegmentedControl is clipped. Declaration public bool IsClipped { get; } Property Value Type Description Boolean true if is clipped; otherwise, false . IsLongPressEnabled Gets or sets a value indicating whether this SegmentedControl has long press enabled. Declaration public bool IsLongPressEnabled { get; set; } Property Value Type Description Boolean true if is long press enabled; otherwise, false . LineBreakMode Gets/Sets the LineBreakMode property Declaration public LineBreakMode LineBreakMode { get; set; } Property Value Type Description LineBreakMode Lines Gets/Sets the Lines property Declaration public int Lines { get; set; } Property Value Type Description Int32 MinFontSize Gets/Sets the MinFontSize property Declaration public double MinFontSize { get; set; } Property Value Type Description Double Orientation controls the orientation of the segments relative to eachother Declaration public StackOrientation Orientation { get; set; } Property Value Type Description StackOrientation Padding Gets or sets the padding for SegmentedControl's segments. Declaration public Thickness Padding { get; set; } Property Value Type Description Thickness The Thickness values for the layout. The default value is a Thickness with all values set to 0. Segments The container for the Segmented Control's buttons. Declaration public IList<Segment> Segments { get; set; } Property Value Type Description IList < Segment > The buttons. SelectedBackgroundColor Gets or sets the background color used when selected. Declaration public Color SelectedBackgroundColor { get; set; } Property Value Type Description Color The selected background. SelectedFontColor OBSOLETE: Use SelectedTextColor property Declaration [Obsolete(\"Use SelectedTextColor\")] public Color SelectedFontColor { get; set; } Property Value Type Description Color The color of the selected font. SelectedIndexes Gets the selected index(es). Declaration public List<int> SelectedIndexes { get; } Property Value Type Description List < Int32 > The selected index(es). SelectedSegments Gets the selected segments(s). Declaration public List<Segment> SelectedSegments { get; } Property Value Type Description List < Segment > The selected segment(s). SelectedTextColor Gets or sets the color of the selected font. Declaration public Color SelectedTextColor { get; set; } Property Value Type Description Color The color of the selected font. SeparatorWidth Gets or sets the width of the separator. Uses OutlineWidth by default (-1). Declaration public float SeparatorWidth { get; set; } Property Value Type Description Single The width of the separator. SoundEffect Gets or sets the sound effect played when a segment is tapped Declaration public SoundEffect SoundEffect { get; set; } Property Value Type Description SoundEffect The sound effect. SoundEffectMode Gets or sets the sound effect is perfomed when a segment is tapped Declaration public EffectMode SoundEffectMode { get; set; } Property Value Type Description EffectMode The sound effect mode. StickyBehavior OBSOLETE: Use ToggleBehavior instead. Declaration [Obsolete(\"StickyBehavior property is obsolete, use ToggleBehavior instead\", true)] public bool StickyBehavior { get; set; } Property Value Type Description Boolean SyncSegmentFontSizes Gets or sets a value indicating whether this SegmentedControl size segment fonts equally. Declaration public bool SyncSegmentFontSizes { get; set; } Property Value Type Description Boolean true if size segment fonts equally; otherwise, false . TextColor Gets or sets the color of the font. Declaration public Color TextColor { get; set; } Property Value Type Description Color The color of the font. TintIcon Will the TextColor be applied to the IconImage image? Declaration public bool TintIcon { get; set; } Property Value Type Description Boolean true tint IconImage image with TextColor; otherwise, false . TintImage OBSOLETE: Use TintIcon property Declaration [Obsolete(\"Use TintIcon\", true)] public bool TintImage { get; set; } Property Value Type Description Boolean TrailingIcon Gets or sets if the image is to be rendered after the text. Declaration public bool TrailingIcon { get; set; } Property Value Type Description Boolean default=false TrailingImage OBSOLETE: Use TrailingIcon Declaration [Obsolete(\"Use TrailingIcon\")] public bool TrailingImage { get; set; } Property Value Type Description Boolean VerticalTextAlignment Gets or sets the vertical text alignment. Declaration public TextAlignment VerticalTextAlignment { get; set; } Property Value Type Description TextAlignment The vertical text alignment. Methods CheckIsClipped(Double, Double) tests if the contents of a segment is clipped Declaration public bool CheckIsClipped(double width = -1, double height = -1) Parameters Type Name Description Double width Double height Returns Type Description Boolean DeselectAll() Deselects all segments. Declaration public void DeselectAll() DeselectIndex(Int32) Deselected the segment at index Declaration public void DeselectIndex(int index) Parameters Type Name Description Int32 index Dispose() Dispose of Forms9Patch.SegmentedControl element. Declaration public void Dispose() Dispose(Boolean) Dispose the specified disposing. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Disposing. GetMinSize() What is the smallest that this control can be rendered (labels are 1 line) Declaration public Size GetMinSize() Returns Type Description Size IsIndexSelected(Int32) Answers the question: Is an index selected? Declaration public bool IsIndexSelected(int index) Parameters Type Name Description Int32 index Returns Type Description Boolean LayoutChildren(Double, Double, Double, Double) Positions and sizes the children of a Layout. Declaration protected override void LayoutChildren(double x, double y, double width, double height) Parameters Type Name Description Double x A value representing the x coordinate of the child region bounding box. Double y A value representing the y coordinate of the child region bounding box. Double width A value representing the width of the child region bounding box. Double height A value representing the height of the child region bounding box. Overrides ManualLayout.LayoutChildren(Double, Double, Double, Double) Remarks Implementors wishing to change the default behavior of a Layout should override this method. It is suggested to still call the base method and modify its calculated results. OnBindingContextChanged() Called when BindingContext is changed Declaration protected override void OnBindingContextChanged() Overrides View.OnBindingContextChanged() OnMeasure(Double, Double) Processes a measurement request Declaration protected override SizeRequest OnMeasure(double widthConstraint, double heightConstraint) Parameters Type Name Description Double widthConstraint Double heightConstraint Returns Type Description SizeRequest Overrides ManualLayout.OnMeasure(Double, Double) OnPropertyChanged(String) Call this method from a child class to notify that a change happened on a property. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName The name of the property that changed. Overrides ManualLayout.OnPropertyChanged(String) SelectAll() Selects all segments Declaration public void SelectAll() SelectIndex(Int32) Selects the segment at index. Declaration public void SelectIndex(int index) Parameters Type Name Description Int32 index segment index. TapIndex(Int32) Taps the index. Declaration public void TapIndex(int index) Parameters Type Name Description Int32 index Index. Events SegmentLongPressed Occurs when segment long pressed. Declaration public event SegmentedControlEventHandler SegmentLongPressed Event Type Type Description SegmentedControlEventHandler SegmentLongPressing Occurs when segment long pressing. Declaration public event SegmentedControlEventHandler SegmentLongPressing Event Type Type Description SegmentedControlEventHandler SegmentSelected Occurs when one of the segments is selected. Declaration public event SegmentedControlEventHandler SegmentSelected Event Type Type Description SegmentedControlEventHandler SegmentTapped Occurs when one of the segments is tapped. Declaration public event SegmentedControlEventHandler SegmentTapped Event Type Type Description SegmentedControlEventHandler Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Xamarin.Forms.IViewContainer<T> ILayout IBackground IShape IElement ILabelStyle IFontElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.SegmentedControlEventArgs.html": {
    "href": "api/Forms9Patch.SegmentedControlEventArgs.html",
    "title": "Class SegmentedControlEventArgs | Forms9Patch",
    "keywords": "Class SegmentedControlEventArgs Segment tapped event arguments. Inheritance Object SegmentedControlEventArgs Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class SegmentedControlEventArgs Constructors SegmentedControlEventArgs(Int32, Segment) Initializes a new instance of the SegmentedControlEventArgs class. Declaration public SegmentedControlEventArgs(int index, Segment segment) Parameters Type Name Description Int32 index Index. Segment segment Segment. Fields Index The index of the tapped segment. Declaration public int Index Field Value Type Description Int32 Segment The segment that was tapped Declaration public Segment Segment Field Value Type Description Segment"
  },
  "api/Forms9Patch.SegmentedControlEventHandler.html": {
    "href": "api/Forms9Patch.SegmentedControlEventHandler.html",
    "title": "Delegate SegmentedControlEventHandler | Forms9Patch",
    "keywords": "Delegate SegmentedControlEventHandler Segment tapped event handler. Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public delegate void SegmentedControlEventHandler(object sender, SegmentedControlEventArgs e); Parameters Type Name Description Object sender SegmentedControlEventArgs e"
  },
  "api/Forms9Patch.SelectedItemChangedEventArgs.html": {
    "href": "api/Forms9Patch.SelectedItemChangedEventArgs.html",
    "title": "Class SelectedItemChangedEventArgs | Forms9Patch",
    "keywords": "Class SelectedItemChangedEventArgs Selected item changed event arguments. Inheritance Object EventArgs SelectedItemChangedEventArgs SelectedItemChangedEventArgs Inherited Members SelectedItemChangedEventArgs.SelectedItem SelectedItemChangedEventArgs.SelectedItemIndex EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class SelectedItemChangedEventArgs : SelectedItemChangedEventArgs Properties CellView Gets the CellView bound to the selected item Declaration public View CellView { get; } Property Value Type Description View The cell view. Group Gets the group. Declaration public object Group { get; } Property Value Type Description Object The group."
  },
  "api/Forms9Patch.Settings.html": {
    "href": "api/Forms9Patch.Settings.html",
    "title": "Class Settings | Forms9Patch",
    "keywords": "Class Settings Forms9Patch Settings (for use by Forms9Patch PCL code). Inheritance Object Settings Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class Settings Fields HapticEffectMode Haptic effect to use if HapticEffect = Default; Declaration public static EffectMode HapticEffectMode Field Value Type Description EffectMode KeyClicks Are haptics active by default? Declaration public static KeyClicks KeyClicks Field Value Type Description KeyClicks ListViewCellSwipePopupMenuButtonColor Color for background of ListView Cell swipe popup menu buttons. Declaration public static Color ListViewCellSwipePopupMenuButtonColor Field Value Type Description Color ListViewCellSwipePopupMenuButtonOutlineColor OutlineColor for background of ListView Cell swipe popup menu buttons. Declaration public static Color ListViewCellSwipePopupMenuButtonOutlineColor Field Value Type Description Color ListViewCellSwipePopupMenuButtonOutlineRadius OutlineRadius for background of ListView Cell swipe popup menu buttons. Declaration public static float ListViewCellSwipePopupMenuButtonOutlineRadius Field Value Type Description Single ListViewCellSwipePopupMenuButtonOutlineWidth OutlineWidth for background of ListView Cell swipe popup menu buttons. Declaration public static float ListViewCellSwipePopupMenuButtonOutlineWidth Field Value Type Description Single ListViewCellSwipePopupMenuButtonSeparatorWidth SeparatorWidth for background of ListView Cell swipe popup menu buttons. Declaration public static float ListViewCellSwipePopupMenuButtonSeparatorWidth Field Value Type Description Single ListViewCellSwipePopupMenuFontSize FontSize for ListView Cell swipe popup menu text. Declaration public static double ListViewCellSwipePopupMenuFontSize Field Value Type Description Double ListViewCellSwipePopupMenuTextColor Color for ListView Cell swipe popup menu text. Declaration public static Color ListViewCellSwipePopupMenuTextColor Field Value Type Description Color ListViewCellSwipePopupMenuWidthRequest WidthRequest for ListView Cell swipe popup menu. Declaration public static double ListViewCellSwipePopupMenuWidthRequest Field Value Type Description Double ShadowOffset The shadow offset. Declaration public static Point ShadowOffset Field Value Type Description Point ShadowRadius The shadow radius. Declaration public static double ShadowRadius Field Value Type Description Double SoundEffectMode Sound effect to use if SoundEffect = Default; Declaration public static EffectMode SoundEffectMode Field Value Type Description EffectMode"
  },
  "api/Forms9Patch.ShapeBase.html": {
    "href": "api/Forms9Patch.ShapeBase.html",
    "title": "Class ShapeBase | Forms9Patch",
    "keywords": "Class ShapeBase Rounded box base. Inheritance Object ShapeBase Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class ShapeBase Fields BackgroundColorProperty backing store for BackgroundColor property Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty BackgroundImageProperty Backing store for the BackgroundImage property Declaration public static readonly BindableProperty BackgroundImageProperty Field Value Type Description BindableProperty BorderColorProperty Backing store for the BorderColor property Declaration public static readonly BindableProperty BorderColorProperty Field Value Type Description BindableProperty BorderRadiusProperty Backing store for the BorderRadius property Declaration public static readonly BindableProperty BorderRadiusProperty Field Value Type Description BindableProperty BorderWidthProperty Backing store for the BorderWidth property Declaration public static readonly BindableProperty BorderWidthProperty Field Value Type Description BindableProperty ElementShapeProperty backing store for ExtendedElementShape property Declaration public static readonly BindableProperty ElementShapeProperty Field Value Type Description BindableProperty ExtendedElementSeparatorWidthProperty Backind store for the extended element separator width property. Declaration public static readonly BindableProperty ExtendedElementSeparatorWidthProperty Field Value Type Description BindableProperty ExtendedElementShapeOrientationProperty Backing store for ExtendedElementShapeOrientaiton property Declaration public static readonly BindableProperty ExtendedElementShapeOrientationProperty Field Value Type Description BindableProperty ExtendedElementShapeProperty backing store for ExtendedElementShape property Declaration public static readonly BindableProperty ExtendedElementShapeProperty Field Value Type Description BindableProperty HasShadowProperty backing store for HasShadow property Declaration public static readonly BindableProperty HasShadowProperty Field Value Type Description BindableProperty OutlineColorProperty backing store for OutlineColor property Declaration public static readonly BindableProperty OutlineColorProperty Field Value Type Description BindableProperty OutlineRadiusProperty backing store for OutlineRadius property Declaration public static readonly BindableProperty OutlineRadiusProperty Field Value Type Description BindableProperty OutlineWidthProperty backing store for OutlineWidth property Declaration public static readonly BindableProperty OutlineWidthProperty Field Value Type Description BindableProperty ParentSegmentsOrientationProperty Backing store for the SegmentOrientation of the ExtendedShape's Parent Declaration public static readonly BindableProperty ParentSegmentsOrientationProperty Field Value Type Description BindableProperty ShadowInvertedProperty backing store for ShadowInverted property Declaration public static readonly BindableProperty ShadowInvertedProperty Field Value Type Description BindableProperty"
  },
  "api/Forms9Patch.Sharing.html": {
    "href": "api/Forms9Patch.Sharing.html",
    "title": "Class Sharing | Forms9Patch",
    "keywords": "Class Sharing Forms9Patch.Clipboard class Inheritance Object Sharing Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class Sharing Methods Share(MimeItemCollection, Segment) Share the specified MimeItemCollection. iPad: sharing popup points at target. Declaration public static void Share(MimeItemCollection collection, Segment target) Parameters Type Name Description MimeItemCollection collection Collection. Segment target Target. Share(MimeItemCollection, VisualElement) Share the specified MimeItemCollection. iPad: sharing popup points at target. Declaration public static void Share(MimeItemCollection collection, VisualElement target) Parameters Type Name Description MimeItemCollection collection Collection. VisualElement target Target."
  },
  "api/Forms9Patch.SinglePicker.html": {
    "href": "api/Forms9Patch.SinglePicker.html",
    "title": "Class SinglePicker | Forms9Patch",
    "keywords": "Class SinglePicker Single picker. Inheritance Object BindableObject Element NavigableElement VisualElement View ItemsView StructuredItemsView SelectableItemsView GroupableItemsView CollectionView Forms9Patch.BasePicker SinglePicker MultiPicker Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers Inherited Members GroupableItemsView.IsGroupedProperty GroupableItemsView.GroupHeaderTemplateProperty GroupableItemsView.GroupFooterTemplateProperty GroupableItemsView.IsGrouped GroupableItemsView.GroupHeaderTemplate GroupableItemsView.GroupFooterTemplate SelectableItemsView.SelectionModeProperty SelectableItemsView.SelectedItemProperty SelectableItemsView.SelectedItemsProperty SelectableItemsView.SelectionChangedCommandProperty SelectableItemsView.SelectionChangedCommandParameterProperty SelectableItemsView.UpdateSelectedItems(IList<Object>) SelectableItemsView.OnSelectionChanged(SelectionChangedEventArgs) SelectableItemsView.SelectedItem SelectableItemsView.SelectedItems SelectableItemsView.SelectionChangedCommand SelectableItemsView.SelectionChangedCommandParameter SelectableItemsView.SelectionMode SelectableItemsView.SelectionChanged StructuredItemsView.HeaderProperty StructuredItemsView.HeaderTemplateProperty StructuredItemsView.FooterProperty StructuredItemsView.FooterTemplateProperty StructuredItemsView.ItemsLayoutProperty StructuredItemsView.ItemSizingStrategyProperty StructuredItemsView.Header StructuredItemsView.HeaderTemplate StructuredItemsView.Footer StructuredItemsView.FooterTemplate StructuredItemsView.ItemsLayout StructuredItemsView.ItemSizingStrategy ItemsView.EmptyViewProperty ItemsView.EmptyViewTemplateProperty ItemsView.ItemsSourceProperty ItemsView.RemainingItemsThresholdReachedCommandProperty ItemsView.RemainingItemsThresholdReachedCommandParameterProperty ItemsView.HorizontalScrollBarVisibilityProperty ItemsView.VerticalScrollBarVisibilityProperty ItemsView.RemainingItemsThresholdProperty ItemsView.ItemTemplateProperty ItemsView.ItemsUpdatingScrollModeProperty ItemsView.AddLogicalChild(Element) ItemsView.RemoveLogicalChild(Element) ItemsView.ScrollTo(Int32, Int32, ScrollToPosition, Boolean) ItemsView.ScrollTo(Object, Object, ScrollToPosition, Boolean) ItemsView.SendRemainingItemsThresholdReached() ItemsView.SendScrolled(ItemsViewScrolledEventArgs) ItemsView.OnMeasure(Double, Double) ItemsView.OnScrollToRequested(ScrollToRequestEventArgs) ItemsView.OnRemainingItemsThresholdReached() ItemsView.OnScrolled(ItemsViewScrolledEventArgs) ItemsView.OnBindingContextChanged() ItemsView.EmptyView ItemsView.EmptyViewTemplate ItemsView.ItemsSource ItemsView.RemainingItemsThresholdReachedCommand ItemsView.RemainingItemsThresholdReachedCommandParameter ItemsView.HorizontalScrollBarVisibility ItemsView.VerticalScrollBarVisibility ItemsView.RemainingItemsThreshold ItemsView.InternalItemsLayout ItemsView.ItemTemplate ItemsView.ItemsUpdatingScrollMode ItemsView.ScrollToRequested ItemsView.Scrolled ItemsView.RemainingItemsThresholdReached View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildRemoved(Element) VisualElement.OnChildRemoved(Element, Int32) VisualElement.OnChildrenReordered() VisualElement.OnSizeAllocated(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class SinglePicker : BasePicker, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers Constructors SinglePicker() Initializes a new instance of the SinglePicker class. Declaration public SinglePicker() Fields HtmlTextCellType Internal Use Declaration protected Type HtmlTextCellType Field Value Type Description Type IsHtmlTextProperty Backing store for SinglePicker's IsHtmlText property Declaration public static readonly BindableProperty IsHtmlTextProperty Field Value Type Description BindableProperty PlainTextCellType Internal use Declaration protected Type PlainTextCellType Field Value Type Description Type Properties IsHtmlText controls value of .IsHtmlText property Declaration public bool IsHtmlText { get; set; } Property Value Type Description Boolean Methods OnPropertyChanged(String) Ons the property changed. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides Forms9Patch.BasePicker.OnPropertyChanged(System.String) Reset() Reset this instance. Declaration public void Reset() Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.SinglePicker.SinglePickerCellContentView.html": {
    "href": "api/Forms9Patch.SinglePicker.SinglePickerCellContentView.html",
    "title": "Class SinglePicker.SinglePickerCellContentView | Forms9Patch",
    "keywords": "Class SinglePicker.SinglePickerCellContentView Contents of a SinglePicker Cell Inheritance Object BindableObject Element NavigableElement VisualElement View Layout Layout < View > Grid SinglePicker.SinglePickerCellContentView MultiPicker.MultiPickerCellContentView SinglePicker.SinglePickerHtmlCellContentView Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers ILayout ILayoutController IViewContainer < View > IGridController IElementConfiguration < Grid > IDisposable Inherited Members Grid.RowProperty Grid.RowSpanProperty Grid.ColumnProperty Grid.ColumnSpanProperty Grid.RowSpacingProperty Grid.ColumnSpacingProperty Grid.ColumnDefinitionsProperty Grid.RowDefinitionsProperty Grid.On<T>() Grid.GetColumn(BindableObject) Grid.GetColumnSpan(BindableObject) Grid.GetRow(BindableObject) Grid.GetRowSpan(BindableObject) Grid.SetColumn(BindableObject, Int32) Grid.SetColumnSpan(BindableObject, Int32) Grid.SetRow(BindableObject, Int32) Grid.SetRowSpan(BindableObject, Int32) Grid.OnAdded(View) Grid.OnRemoved(View) Grid.LayoutChildren(Double, Double, Double, Double) Grid.Children Grid.ColumnDefinitions Grid.ColumnSpacing Grid.RowDefinitions Grid.RowSpacing Layout<View>.OnChildAdded(Element) Layout<View>.OnChildRemoved(Element) Layout<View>.OnChildRemoved(Element, Int32) Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnChildMeasureInvalidated() Layout.OnSizeAllocated(Double, Double) Layout.ShouldInvalidateOnChildAdded(View) Layout.ShouldInvalidateOnChildRemoved(View) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Preserve(AllMembers = true)] protected class SinglePickerCellContentView : Grid, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IViewContainer<View>, IGridController, IElementConfiguration<Grid>, IDisposable Constructors SinglePickerCellContentView() Constructs a Forms9Patch.SinglePickerCellContentView Declaration public SinglePickerCellContentView() Fields IsSelectedProperty Backing store key for IsSelected property Declaration public static readonly BindableProperty IsSelectedProperty Field Value Type Description BindableProperty itemLabel For internal use Declaration protected readonly Label itemLabel Field Value Type Description Label Properties IsSelected Is this cell selected? Declaration public bool IsSelected { get; set; } Property Value Type Description Boolean Methods Dispose() Same as it ever was Declaration public void Dispose() Dispose(Boolean) Same as it ever was Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing OnBindingContextChanged() Same as it ever was Declaration protected override void OnBindingContextChanged() Overrides Grid.OnBindingContextChanged() OnPropertyChanged(String) Same as it ever was Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Overrides Element.OnPropertyChanged(String) OnPropertyChanging(String) Same as it ever was Declaration protected override void OnPropertyChanging(string propertyName = null) Parameters Type Name Description String propertyName Overrides BindableObject.OnPropertyChanging(String) Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Xamarin.Forms.IViewContainer<T> Xamarin.Forms.IGridController Xamarin.Forms.IElementConfiguration<TElement> System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.SinglePicker.SinglePickerHtmlCellContentView.html": {
    "href": "api/Forms9Patch.SinglePicker.SinglePickerHtmlCellContentView.html",
    "title": "Class SinglePicker.SinglePickerHtmlCellContentView | Forms9Patch",
    "keywords": "Class SinglePicker.SinglePickerHtmlCellContentView Contents of a SinglePicker HTML cell Inheritance Object BindableObject Element NavigableElement VisualElement View Layout Layout < View > Grid SinglePicker.SinglePickerCellContentView SinglePicker.SinglePickerHtmlCellContentView Implements INotifyPropertyChanged IAnimatable ITabStopElement IViewController IVisualElementController IElementController IGestureController IGestureRecognizers ILayout ILayoutController IViewContainer < View > IGridController IElementConfiguration < Grid > IDisposable Inherited Members SinglePicker.SinglePickerCellContentView.IsSelectedProperty SinglePicker.SinglePickerCellContentView.IsSelected SinglePicker.SinglePickerCellContentView.itemLabel SinglePicker.SinglePickerCellContentView.Dispose(Boolean) SinglePicker.SinglePickerCellContentView.Dispose() SinglePicker.SinglePickerCellContentView.OnPropertyChanging(String) SinglePicker.SinglePickerCellContentView.OnPropertyChanged(String) Grid.RowProperty Grid.RowSpanProperty Grid.ColumnProperty Grid.ColumnSpanProperty Grid.RowSpacingProperty Grid.ColumnSpacingProperty Grid.ColumnDefinitionsProperty Grid.RowDefinitionsProperty Grid.On<T>() Grid.GetColumn(BindableObject) Grid.GetColumnSpan(BindableObject) Grid.GetRow(BindableObject) Grid.GetRowSpan(BindableObject) Grid.SetColumn(BindableObject, Int32) Grid.SetColumnSpan(BindableObject, Int32) Grid.SetRow(BindableObject, Int32) Grid.SetRowSpan(BindableObject, Int32) Grid.OnAdded(View) Grid.OnRemoved(View) Grid.LayoutChildren(Double, Double, Double, Double) Grid.Children Grid.ColumnDefinitions Grid.ColumnSpacing Grid.RowDefinitions Grid.RowSpacing Layout<View>.OnChildAdded(Element) Layout<View>.OnChildRemoved(Element) Layout<View>.OnChildRemoved(Element, Int32) Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnChildMeasureInvalidated() Layout.OnSizeAllocated(Double, Double) Layout.ShouldInvalidateOnChildAdded(View) Layout.ShouldInvalidateOnChildRemoved(View) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [Preserve(AllMembers = true)] protected class SinglePickerHtmlCellContentView : SinglePicker.SinglePickerCellContentView, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IViewContainer<View>, IGridController, IElementConfiguration<Grid>, IDisposable Constructors SinglePickerHtmlCellContentView() Constructor for a SinglePicker HTML cell Declaration public SinglePickerHtmlCellContentView() Methods OnBindingContextChanged() Same as it ever was Declaration protected override void OnBindingContextChanged() Overrides SinglePicker.SinglePickerCellContentView.OnBindingContextChanged() Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Xamarin.Forms.IViewContainer<T> Xamarin.Forms.IGridController Xamarin.Forms.IElementConfiguration<TElement> System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.SkiaColorExtensions.html": {
    "href": "api/Forms9Patch.SkiaColorExtensions.html",
    "title": "Class SkiaColorExtensions | Forms9Patch",
    "keywords": "Class SkiaColorExtensions Making using Skia just a little easier Inheritance Object SkiaColorExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class SkiaColorExtensions Methods ToSKColor(Color) Convert Xamarin.Forms.Color to Skai SKColor Declaration public static SKColor ToSKColor(this Color color) Parameters Type Name Description Color color Returns Type Description SKColor"
  },
  "api/Forms9Patch.SKRectExtensions.html": {
    "href": "api/Forms9Patch.SKRectExtensions.html",
    "title": "Class SKRectExtensions | Forms9Patch",
    "keywords": "Class SKRectExtensions Making using Skia just a little easier Inheritance Object SKRectExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class SKRectExtensions Methods LineTo(SKPath, Double, Double) Enables use of doubles with Skia Declaration public static void LineTo(this SKPath path, double x, double y) Parameters Type Name Description SKPath path Double x Double y MoveTo(SKPath, Double, Double) Enables use of doubles with Skia Declaration public static void MoveTo(this SKPath path, double x, double y) Parameters Type Name Description SKPath path Double x Double y X(SKRect) Returns X origin (left) or SKRect Declaration public static double X(this SKRect skRect) Parameters Type Name Description SKRect skRect Returns Type Description Double Y(SKRect) Returns Y origin (top) of SKRect Declaration public static double Y(this SKRect skRect) Parameters Type Name Description SKRect skRect Returns Type Description Double"
  },
  "api/Forms9Patch.SliderStepSizeEffect.html": {
    "href": "api/Forms9Patch.SliderStepSizeEffect.html",
    "title": "Class SliderStepSizeEffect | Forms9Patch",
    "keywords": "Class SliderStepSizeEffect Enabled StepSize control of Xamarin.Forms.Slider element Inheritance Object Effect RoutingEffect SliderStepSizeEffect Implements INotifyPropertyChanged Inherited Members RoutingEffect.OnAttached() RoutingEffect.OnDetached() Effect.Resolve(String) Effect.Element Effect.IsAttached Effect.ResolveId Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class SliderStepSizeEffect : RoutingEffect, INotifyPropertyChanged Constructors SliderStepSizeEffect() Constructor for SliderStepSizeEffect Declaration protected SliderStepSizeEffect() SliderStepSizeEffect(Double) Convenience constructor for SliderStepSizeEffect Declaration public SliderStepSizeEffect(double stepSize) Parameters Type Name Description Double stepSize Properties StepSize StepSize property Declaration public double StepSize { get; set; } Property Value Type Description Double Methods ApplyTo(Slider, Assembly) Applies SliderStepSizeEffect to a Xamarin.Forms.Slider Declaration public static bool ApplyTo(Slider slider, Assembly assembly = null) Parameters Type Name Description Slider slider Slider. Assembly assembly Assembly. Returns Type Description Boolean true , if to was applyed, false otherwise. Events PropertyChanged PropertyChanged event handler Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Forms9Patch.SoundEffect.html": {
    "href": "api/Forms9Patch.SoundEffect.html",
    "title": "Enum SoundEffect | Forms9Patch",
    "keywords": "Enum SoundEffect System Sound Effects Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public enum SoundEffect Fields Name Description Delete Give the system delete key response KeyClick Give the system keyclick response None I'll just sit here quietly. Return Give the system return key response"
  },
  "api/Forms9Patch.StackLayout.html": {
    "href": "api/Forms9Patch.StackLayout.html",
    "title": "Class StackLayout | Forms9Patch",
    "keywords": "Class StackLayout Forms9Patch StackLayout. Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView ContentView Frame Forms9Patch.BindableObject < StackLayout > Forms9Patch.Element < StackLayout > Forms9Patch.VisualElement < StackLayout > Forms9Patch.View < StackLayout > Forms9Patch.BaseLayout < StackLayout > Forms9Patch.Layout < StackLayout > StackLayout Implements INotifyPropertyChanged IAnimatable ITabStopElement IGestureController IGestureRecognizers IDisposable IViewController IVisualElementController IElementController ILayout IBackground IShape IElement ILayout ILayoutController IViewContainer < View > IElementConfiguration < StackLayout > Inherited Members Frame.OnPropertyChanged(String) ContentView.ContentProperty ContentView.Content ContentView.IgnoreChildrenProperty ContentView.IgnoreChildren ContentView.BackgroundImageProperty ContentView.BackgroundImage ContentView.LimitMinSizeToBackgroundImageSizeProperty ContentView.LimitMinSizeToBackgroundImageSize ContentView.BackgroundColorProperty ContentView.BackgroundColor ContentView.HasShadowProperty ContentView.HasShadow ContentView.ShadowInvertedProperty ContentView.ShadowInverted ContentView.OutlineColorProperty ContentView.OutlineColor ContentView.BorderColorProperty ContentView.BorderColor ContentView.OutlineRadiusProperty ContentView.OutlineRadius ContentView.BorderRadiusProperty ContentView.BorderRadius ContentView.OutlineWidthProperty ContentView.OutlineWidth ContentView.BorderWidthProperty ContentView.BorderWidth ContentView.ElementShapeProperty ContentView.ElementShape ContentView.InstanceId ContentView._f9pId ContentView._fallbackBackgroundImage ContentView.CurrentBackgroundImage ContentView.BaseInternalChildren ContentView.Dispose(Boolean) ContentView.Dispose() ContentView.Description() ContentView.ToString() ContentView.ShouldInvalidateOnChildAdded(View) ContentView.ShouldInvalidateOnChildRemoved(View) ContentView.OnChildMeasureInvalidated() ContentView.OnSizeRequest(Double, Double) ContentView.LayoutChildren(Double, Double, Double, Double) ContentView.OnBindingContextChanged() TemplatedView.ControlTemplateProperty TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class StackLayout : Layout<StackLayout>, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IGestureController, IGestureRecognizers, IPaddingElement, IControlTemplated, IDisposable, IViewController, IVisualElementController, IElementController, ILayout, IBackground, IShape, IElement, ILayout, ILayoutController, IViewContainer<View>, IElementConfiguration<StackLayout> Constructors StackLayout() Initializes a new instance of the StackLayout class. Declaration public StackLayout() Fields OrientationProperty Backing store for the Orientation property Declaration public static readonly BindableProperty OrientationProperty Field Value Type Description BindableProperty SpacingProperty Backing store for the Spacing property Declaration public static readonly BindableProperty SpacingProperty Field Value Type Description BindableProperty Properties Orientation Gets or sets the orientation of the stack. Declaration public StackOrientation Orientation { get; set; } Property Value Type Description StackOrientation The orientation. Spacing Gets or sets the spacing between children. Declaration public double Spacing { get; set; } Property Value Type Description Double The spacing. Methods On<T>() Marker interface for returning platform-specific configuration elements. Declaration public IPlatformElementConfiguration<T, StackLayout> On<T>() where T : IConfigPlatform Returns Type Description IPlatformElementConfiguration <T, StackLayout > Type Parameters Name Description T Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers System.IDisposable Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController ILayout IBackground IShape IElement Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController Xamarin.Forms.IViewContainer<T> Xamarin.Forms.IElementConfiguration<TElement> Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.StateButton.html": {
    "href": "api/Forms9Patch.StateButton.html",
    "title": "Class StateButton | Forms9Patch",
    "keywords": "Class StateButton Image button. Inheritance Object BindableObject Element NavigableElement VisualElement View Layout TemplatedView ContentView ContentView Frame Button StateButton ImageButton Implements INotifyPropertyChanged IAnimatable ITabStopElement IGestureController IGestureRecognizers ILayout ILayoutController ILayout IDisposable IButton IButtonController IViewController IVisualElementController IElementController IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Inherited Members Button.SelectedFontColorProperty Button.SelectedFontColor Button.StickyBehaviorProperty Button.StickyBehavior Button.ImageSourceProperty Button.ImageSource Button.TrailingImageProperty Button.TrailingImage Button.TintImageProperty Button.TintImage Button.IsEllipticalProperty Button.IsElliptical Button.FontColorProperty Button.FontColor Button.AlignmentProperty Button.Alignment Button.FitProperty Button.Fit Button.Content Button.IsLongPressEnabledProperty Button.IsLongPressEnabled Button.IsClippedProperty Button.IsClipped Button.SelectedTextColorProperty Button.SelectedTextColor Button.SelectedBackgroundColorProperty Button.SelectedBackgroundColor Button.CommandProperty Button.Command Button.CommandParameterProperty Button.CommandParameter Button.ToggleBehaviorProperty Button.ToggleBehavior Button.IsSelectedProperty Button.IsSelected Button.HapticEffectProperty Button.HapticEffect Button.HapticEffectModeProperty Button.HapticEffectMode Button.SoundEffectProperty Button.SoundEffect Button.SoundEffectModeProperty Button.SoundEffectMode Button.IconFontFamilyProperty Button.IconFontFamily Button.TrailingIconProperty Button.TrailingIcon Button.TintIconProperty Button.TintIcon Button.IconColorProperty Button.IconColor Button.IconFontSizeProperty Button.IconFontSize Button.HasTightSpacingProperty Button.HasTightSpacing Button.SpacingProperty Button.Spacing Button.OrientationProperty Button.Orientation Button.BackgroundColorProperty Button.BackgroundColor Button.HasShadowProperty Button.HasShadow Button.OutlineColorProperty Button.OutlineColor Button.BorderColorProperty Button.BorderColor Button.OutlineWidthProperty Button.OutlineWidth Button.BorderWidthProperty Button.BorderWidth Button.TextColorProperty Button.TextColor Button.HorizontalTextAlignmentProperty Button.HorizontalTextAlignment Button.VerticalTextAlignmentProperty Button.VerticalTextAlignment Button.LineBreakModeProperty Button.LineBreakMode Button.AutoFitProperty Button.AutoFit Button.LinesProperty Button.Lines Button.MinFontSizeProperty Button.MinFontSize Button.FontSizeProperty Button.FontSize Button.FontFamilyProperty Button.FontFamily Button.FontAttributesProperty Button.FontAttributes Button.DarkThemeProperty Button.DarkTheme Button.FittedFontSize Button.SynchronizedFontSize Button._iconImage Button._label Button._iconLabel Button._gestureListener Button._constructing Button.ToString() Button.OnTapped(Object, TapEventArgs) Button.UpdateElements(Boolean) Button.Clicked Button.Pressed Button.Released Button.Tapped Button.InvokeTapped(Object, EventArgs) Button.Selected Button.InvokeSelected(Object, EventArgs) Button.LongPressing Button.InvokeLongPressing(Object, EventArgs) Button.LongPressed Button.InvokeLongPressed(Object, EventArgs) Button.GetMinSize() Button.CheckIsClipped(Double, Double) Button.OnPropertyChanging(String) Button.SendTapped() Button.SendClicked() ContentView.ContentProperty ContentView.IgnoreChildrenProperty ContentView.IgnoreChildren ContentView.BackgroundImageProperty ContentView.BackgroundImage ContentView.LimitMinSizeToBackgroundImageSizeProperty ContentView.LimitMinSizeToBackgroundImageSize ContentView.ShadowInvertedProperty ContentView.ShadowInverted ContentView.OutlineRadiusProperty ContentView.OutlineRadius ContentView.BorderRadiusProperty ContentView.BorderRadius ContentView.ElementShapeProperty ContentView.ElementShape ContentView.InstanceId ContentView._f9pId ContentView._fallbackBackgroundImage ContentView.CurrentBackgroundImage ContentView.BaseInternalChildren ContentView.Description() ContentView.ShouldInvalidateOnChildAdded(View) ContentView.ShouldInvalidateOnChildRemoved(View) ContentView.OnChildMeasureInvalidated() ContentView.OnSizeRequest(Double, Double) ContentView.LayoutChildren(Double, Double, Double, Double) ContentView.OnBindingContextChanged() TemplatedView.ControlTemplateProperty TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element) TemplatedView.OnChildRemoved(Element, Int32) TemplatedView.GetTemplateChild(String) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.LayoutChildIntoBoundingRegion(VisualElement, Rectangle) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(Object, EventArgs) Layout.OnSizeAllocated(Double, Double) Layout.UpdateChildrenLayout() Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.GetChildElements(Point) View.GestureController View.GestureRecognizers View.IGestureController.CompositeGestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.OnParentSet() NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class StateButton : Button, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated, ILayout, IDisposable, IButton, IButtonController, IViewController, IVisualElementController, IElementController, IButtonState, IBackground, IShape, ILabel, ILabelStyle, IFontElement, IElement Constructors StateButton() Initializes a new instance of the StateButton class. Declaration public StateButton() Fields DefaultStateProperty Backing store for the DefaultState bindable property. Declaration public static BindableProperty DefaultStateProperty Field Value Type Description BindableProperty DisabledAndSelectedStateProperty Backing store for the DisabledAndSelectedState bindable property. Declaration public static BindableProperty DisabledAndSelectedStateProperty Field Value Type Description BindableProperty DisabledStateProperty Backing store for the DisabledState bindable property. Declaration public static BindableProperty DisabledStateProperty Field Value Type Description BindableProperty HtmlTextProperty Backing store for the formatted text property. Declaration public static readonly BindableProperty HtmlTextProperty Field Value Type Description BindableProperty IconImageProperty Backing store for the IconImage property Declaration public static BindableProperty IconImageProperty Field Value Type Description BindableProperty IconTextProperty The image text property backing store Declaration public static readonly BindableProperty IconTextProperty Field Value Type Description BindableProperty PressingStateProperty Backing store for the PressingState bindable property. Declaration public static BindableProperty PressingStateProperty Field Value Type Description BindableProperty SelectedStateProperty Backing store for the SelectedState bindable property. Declaration public static BindableProperty SelectedStateProperty Field Value Type Description BindableProperty TextProperty Backing store for the Button.Text bindable property. Declaration public static readonly BindableProperty TextProperty Field Value Type Description BindableProperty Properties DefaultState Gets or sets the StateButton's properties for the default button state. Declaration public ButtonState DefaultState { get; set; } Property Value Type Description ButtonState The ButtonState structure for the default button state. DisabledAndSelectedState Gets or sets the StateButton's properties for the disabled and selected button state. Declaration public ButtonState DisabledAndSelectedState { get; set; } Property Value Type Description ButtonState The ButtonState structure for the disabled and selected button state. DisabledState Gets or sets the StateButton's properties for the disabled button state. Declaration public ButtonState DisabledState { get; set; } Property Value Type Description ButtonState The ButtonState structure for the disabled button state. HtmlText Gets or sets the formatted text. Declaration public string HtmlText { get; set; } Property Value Type Description String The formatted text. IconImage Gets or sets the icon image. Alternatively, use IconText Declaration public Image IconImage { get; set; } Property Value Type Description Image IconText Gets or sets the image text - use this to specify the image as an HTML markup string. Declaration public string IconText { get; set; } Property Value Type Description String The image text. PressingState Gets or sets the StateButton's properties for the pressing button state. Declaration public ButtonState PressingState { get; set; } Property Value Type Description ButtonState The ButtonState structure for the pressing button state. SelectedState Gets or sets the StateButton's properties for the selected button state. Declaration public ButtonState SelectedState { get; set; } Property Value Type Description ButtonState The ButtonState structure for the selected button state. Text Gets or sets the text. Declaration public string Text { get; set; } Property Value Type Description String The text. Methods Dispose() Called when the button is disposed Declaration public void Dispose() Dispose(Boolean) Dispose the specified disposing. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Disposing. Overrides Button.Dispose(Boolean) OnDown(Object, DownUpEventArgs) Called when the button is pressed down Declaration protected override void OnDown(object sender, DownUpEventArgs e) Parameters Type Name Description Object sender DownUpEventArgs e Overrides Button.OnDown(Object, DownUpEventArgs) OnLongPressed(Object, LongPressEventArgs) Called when the button is released from a long press state Declaration protected override void OnLongPressed(object sender, LongPressEventArgs e) Parameters Type Name Description Object sender LongPressEventArgs e Overrides Button.OnLongPressed(Object, LongPressEventArgs) OnLongPressing(Object, LongPressEventArgs) Called when the button is in long press state Declaration protected override void OnLongPressing(object sender, LongPressEventArgs e) Parameters Type Name Description Object sender LongPressEventArgs e Overrides Button.OnLongPressing(Object, LongPressEventArgs) OnPropertyChanged(String) Ons the property changed. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides Button.OnPropertyChanged(String) OnUp(Object, DownUpEventArgs) Called when the button is released Declaration protected override void OnUp(object sender, DownUpEventArgs e) Parameters Type Name Description Object sender DownUpEventArgs e Overrides Button.OnUp(Object, DownUpEventArgs) ShowState(ButtonState) Redraws the button to a custom ButtonState Declaration public void ShowState(ButtonState newState) Parameters Type Name Description ButtonState newState Custom ButtonState. Tap() Tap this instance. Declaration public void Tap() UpdateState() Redraws the button to the current state: Default, Selected, Disabled or DisabledAndSelected. Declaration public void UpdateState() Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController ILayout System.IDisposable IButton Xamarin.Forms.IButtonController Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController IButtonState IBackground IShape ILabel ILabelStyle IFontElement IElement Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) FontExtensions.LineHeight(IFontElement) FontExtensions.LineSpace(IFontElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(View) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(View) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(View, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(View) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.StringExtensions.html": {
    "href": "api/Forms9Patch.StringExtensions.html",
    "title": "Class StringExtensions | Forms9Patch",
    "keywords": "Class StringExtensions Forms9Patch String extensions. Inheritance Object StringExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class StringExtensions Methods CompareVersionStrings(String, String) Determines if two version strings are the same Declaration public static int CompareVersionStrings(this string s1, string s2) Parameters Type Name Description String s1 String s2 Returns Type Description Int32 IsValidEmail(String) Tests if string is a valid email address Declaration public static bool IsValidEmail(this string strIn) Parameters Type Name Description String strIn String in. Returns Type Description Boolean true , if valid email, false otherwise."
  },
  "api/Forms9Patch.SwipeMenuItem.html": {
    "href": "api/Forms9Patch.SwipeMenuItem.html",
    "title": "Class SwipeMenuItem | Forms9Patch",
    "keywords": "Class SwipeMenuItem Describes a Swipe action button that appears when a cell is swiped Inheritance Object BindableObject SwipeMenuItem Implements INotifyPropertyChanged IMenuItem Inherited Members BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class SwipeMenuItem : BindableObject, INotifyPropertyChanged, IDynamicResourceHandler, IMenuItem Fields BackgroundColorProperty The background color property backing store. Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty HtmlTextProperty backing store for HtmlText property Declaration public static readonly BindableProperty HtmlTextProperty Field Value Type Description BindableProperty IconFontFamilyProperty Backing store for SwipeMenuItem IconFontFamily property Declaration public static readonly BindableProperty IconFontFamilyProperty Field Value Type Description BindableProperty IconFontSizeProperty Backing store for SwipeMenuItem IconFontSize property Declaration public static readonly BindableProperty IconFontSizeProperty Field Value Type Description BindableProperty IconImageProperty backing store for IconImage property Declaration public static readonly BindableProperty IconImageProperty Field Value Type Description BindableProperty IconTextProperty The icon text property backing store. Declaration public static readonly BindableProperty IconTextProperty Field Value Type Description BindableProperty IsTriggeredOnFullSwipeProperty The swipe executable property backing store. Declaration public static readonly BindableProperty IsTriggeredOnFullSwipeProperty Field Value Type Description BindableProperty KeyProperty The key property backing store. Declaration public static readonly BindableProperty KeyProperty Field Value Type Description BindableProperty TextColorProperty The text color property. Declaration public static readonly BindableProperty TextColorProperty Field Value Type Description BindableProperty TextProperty The text property backing store. Declaration public static readonly BindableProperty TextProperty Field Value Type Description BindableProperty Properties BackgroundColor Gets or sets the color of the background. Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color The color of the background. HtmlText Gets/Sets the HtmlText property Declaration public string HtmlText { get; set; } Property Value Type Description String IconFontFamily controls value of .IconFontFamily property Declaration public string IconFontFamily { get; set; } Property Value Type Description String IconFontSize controls value of .IconFontSize property Declaration public double IconFontSize { get; set; } Property Value Type Description Double IconImage Gets/Sets the IconImage property Declaration public Image IconImage { get; set; } Property Value Type Description Image IconText Gets or sets the icon text - an alternative to IconImageSource. Declaration public string IconText { get; set; } Property Value Type Description String The icon text. IsTriggeredOnFullSwipe Gets or sets a value indicating whether this Forms9Patch.SwipeAction swipe executable. Only used if this SwipeAction is at the top of the stack of SwipeActions. Declaration public bool IsTriggeredOnFullSwipe { get; set; } Property Value Type Description Boolean true if swipe executable; otherwise, false . Key Gets or sets the key - used to identify a SwipeMenuEvent. Will return Text if set to null. Declaration public string Key { get; set; } Property Value Type Description String The key. Text Gets or sets the text (can be in HTML format. Declaration public string Text { get; set; } Property Value Type Description String The html text. TextColor Gets or sets the color of the text and icon (image). Declaration public Color TextColor { get; set; } Property Value Type Description Color The color of the text. Methods OnPropertyChanged(String) BindableProperty has changed. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides BindableObject.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged IMenuItem"
  },
  "api/Forms9Patch.SwipeMenuItemTappedArgs.html": {
    "href": "api/Forms9Patch.SwipeMenuItemTappedArgs.html",
    "title": "Class SwipeMenuItemTappedArgs | Forms9Patch",
    "keywords": "Class SwipeMenuItemTappedArgs Cell swipe menu item tapped arguments. Inheritance Object SwipeMenuItemTappedArgs Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class SwipeMenuItemTappedArgs Properties CellContentView Gets the cell content view where the swipe happened. Declaration public ICellSwipeMenus CellContentView { get; } Property Value Type Description ICellSwipeMenus The cell content view. Group Gets the group. Declaration public object Group { get; } Property Value Type Description Object The group. Item Gets the item. Declaration public object Item { get; } Property Value Type Description Object The item. SwipeMenuItem Gets the swipe menu item that was tapped. Declaration public SwipeMenuItem SwipeMenuItem { get; } Property Value Type Description SwipeMenuItem The swipe menu item."
  },
  "api/Forms9Patch.TargetedMenu.html": {
    "href": "api/Forms9Patch.TargetedMenu.html",
    "title": "Class TargetedMenu | Forms9Patch",
    "keywords": "Class TargetedMenu Forms9Patch.TargetedMenu class Inheritance Object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage PopupPage Forms9Patch.PopupBase BubblePopup TargetedMenu Implements INotifyPropertyChanged IAnimatable ITabStopElement ILayout IPageController IVisualElementController IElementController IElementConfiguration < Page > IPopup IBackground IShape IElement IDisposable Inherited Members BubblePopup.Content BubblePopup.TargetBiasProperty BubblePopup.TargetBias BubblePopup.PointerLengthProperty BubblePopup.PointerLength BubblePopup.PointerTipRadiusProperty BubblePopup.PointerTipRadius BubblePopup.PointerDirectionProperty BubblePopup.PointerDirection BubblePopup.PreferredPointerDirectionProperty BubblePopup.PreferredPointerDirection BubblePopup.PointerCornerRadiusProperty BubblePopup.PointerCornerRadius BubblePopup.PointProperty BubblePopup.Point BubblePopup.OnAppearingAnimationBegin() BubblePopup.UsePoint BubblePopup.Available(Double, Double, Rectangle) BubblePopup.LayoutChildren(Double, Double, Double, Double) PopupPage.BackgroundClicked PopupPage.IsAnimationEnabledProperty PopupPage.IsAnimationEnabled PopupPage.HasSystemPaddingProperty PopupPage.HasSystemPadding PopupPage.AnimationProperty PopupPage.Animation PopupPage.SystemPaddingProperty PopupPage.SystemPadding PopupPage.SystemPaddingSidesProperty PopupPage.SystemPaddingSides PopupPage.CloseWhenBackgroundIsClickedProperty PopupPage.CloseWhenBackgroundIsClicked PopupPage.BackgroundInputTransparentProperty PopupPage.BackgroundInputTransparent PopupPage.HasKeyboardOffsetProperty PopupPage.HasKeyboardOffset PopupPage.KeyboardOffsetProperty PopupPage.KeyboardOffset PopupPage.OnBackButtonPressed() PopupPage.OnDisappearingAnimationBegin() PopupPage.OnDisappearingAnimationEnd() PopupPage.OnAppearingAnimationBeginAsync() PopupPage.OnAppearingAnimationEndAsync() PopupPage.OnDisappearingAnimationBeginAsync() PopupPage.OnDisappearingAnimationEndAsync() PopupPage.OnBackgroundClicked() ContentPage.ContentProperty ContentPage.OnBindingContextChanged() TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element) TemplatedPage.OnChildRemoved(Element, Int32) TemplatedPage.GetTemplateChild(String) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(String, String, String, String[]) Page.DisplayAlert(String, String, String) Page.DisplayAlert(String, String, String, String) Page.DisplayPromptAsync(String, String, String, String, String, Int32, Keyboard, String) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnAppearing() Page.OnChildMeasureInvalidated(Object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(Double, Double) Page.UpdateChildrenLayout() Page.On<T>() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.LayoutChanged Page.Appearing Page.Disappearing VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax [ContentProperty(\"Segments\")] public class TargetedMenu : BubblePopup, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, IPaddingElement, IControlTemplated, IPopup, IBackground, IShape, IElement, IDisposable Constructors TargetedMenu(VisualElement) Constructor for TargetedMenu Declaration public TargetedMenu(VisualElement target) Parameters Type Name Description VisualElement target TargetedMenu(VisualElement, Point) Constructor for TargetedMenu at a Point Declaration public TargetedMenu(VisualElement target, Point point) Parameters Type Name Description VisualElement target Point point Fields FontFamilyProperty Key for FontFamily property Declaration public static readonly BindableProperty FontFamilyProperty Field Value Type Description BindableProperty FontSizeProperty backing store for FontSize property Declaration public static readonly BindableProperty FontSizeProperty Field Value Type Description BindableProperty HapticEffectModeProperty backing store for HapticEffectMode property Declaration public static readonly BindableProperty HapticEffectModeProperty Field Value Type Description BindableProperty HapticEffectProperty backing store for HapticEffect property Declaration public static readonly BindableProperty HapticEffectProperty Field Value Type Description BindableProperty IconFontFamilyProperty Key for Icon Font Family property Declaration public static readonly BindableProperty IconFontFamilyProperty Field Value Type Description BindableProperty IconFontSizeProperty Backing store for TargetedMenu IconFontSize property Declaration public static readonly BindableProperty IconFontSizeProperty Field Value Type Description BindableProperty OrientationProperty Key for Orientaton of menu Declaration public static readonly BindableProperty OrientationProperty Field Value Type Description BindableProperty SeparatorColorProperty backing store for SeparatorColor property Declaration public static readonly BindableProperty SeparatorColorProperty Field Value Type Description BindableProperty SeparatorThicknessProperty backing store for SeparatorWidth property Declaration public static readonly BindableProperty SeparatorThicknessProperty Field Value Type Description BindableProperty SoundEffectModeProperty The backing store for the sound effect mode property. Declaration public static readonly BindableProperty SoundEffectModeProperty Field Value Type Description BindableProperty SoundEffectProperty The backing store for the sound effect property. Declaration public static readonly BindableProperty SoundEffectProperty Field Value Type Description BindableProperty TextColorProperty backing store for FontColor property Declaration public static readonly BindableProperty TextColorProperty Field Value Type Description BindableProperty Properties FontFamily Font Family property Declaration public string FontFamily { get; set; } Property Value Type Description String FontSize Gets/Sets the FontSize property Declaration public double FontSize { get; set; } Property Value Type Description Double HapticEffect Gets/Sets the HapticEffect property Declaration public HapticEffect HapticEffect { get; set; } Property Value Type Description HapticEffect HapticEffectMode Gets/Sets the HapticEffectMode property Declaration public EffectMode HapticEffectMode { get; set; } Property Value Type Description EffectMode IconFontFamily Icon Font Familiy property Declaration public string IconFontFamily { get; set; } Property Value Type Description String IconFontSize controls value of .IconFontSize property Declaration public double IconFontSize { get; set; } Property Value Type Description Double Orientation Orienation of menu Declaration public StackOrientation Orientation { get; set; } Property Value Type Description StackOrientation Segments The container for the Segmented Control's buttons. Declaration public IList<Segment> Segments { get; set; } Property Value Type Description IList < Segment > The buttons. SelectedSegment Returns the currently selected segment Declaration public Segment SelectedSegment { get; } Property Value Type Description Segment SelectedSegmentProperty SelectedSegment BindableProperty Declaration public static BindableProperty SelectedSegmentProperty { get; } Property Value Type Description BindableProperty SeparatorColor Gets/Sets the SeparatorColor property Declaration public Color SeparatorColor { get; set; } Property Value Type Description Color SeparatorThickness Gets/Sets the SeparatorWidth property Declaration public double SeparatorThickness { get; set; } Property Value Type Description Double SoundEffect Gets or sets the sound effect played when a menu item is tapped. Declaration public SoundEffect SoundEffect { get; set; } Property Value Type Description SoundEffect The sound effect. SoundEffectMode Gets or sets if the sound effect is played when a menu item is tapped Declaration public EffectMode SoundEffectMode { get; set; } Property Value Type Description EffectMode The sound effect mode. TextColor Gets/Sets the FontColor property Declaration public Color TextColor { get; set; } Property Value Type Description Color Methods Create(VisualElement, List<String>) Instantiates, populates and presents a TargetedMenu Declaration public static TargetedMenu Create(VisualElement target, List<string> htmlTexts = null) Parameters Type Name Description VisualElement target VisualElement to target List < String > htmlTexts List of text for menu items (with optional HTML markup) Returns Type Description TargetedMenu Create(VisualElement, Point, List<String>) Instantiates, populates and presents a TargetedMenu at a Point Declaration public static TargetedMenu Create(VisualElement target, Point point, List<string> htmlTexts = null) Parameters Type Name Description VisualElement target Point point List < String > htmlTexts Returns Type Description TargetedMenu CreateVertical(VisualElement, List<String>) Creates a vertical Targeted Menu. Declaration public static TargetedMenu CreateVertical(VisualElement target, List<string> htmlTexts = null) Parameters Type Name Description VisualElement target Target. List < String > htmlTexts Html texts. Returns Type Description TargetedMenu The vertical. CreateVertical(VisualElement, Point, List<String>) Create the specified target menu, at a point. Declaration public static TargetedMenu CreateVertical(VisualElement target, Point point, List<string> htmlTexts = null) Parameters Type Name Description VisualElement target Target. Point point Point. List < String > htmlTexts Html texts. Returns Type Description TargetedMenu The create. Dispose(Boolean) Instance is being disposed Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides Forms9Patch.PopupBase.Dispose(System.Boolean) OnAppearingAnimationEnd() Called when appearing animation has ended Declaration protected override void OnAppearingAnimationEnd() Overrides Forms9Patch.PopupBase.OnAppearingAnimationEnd() OnPropertyChanged(String) A property changed. Let's deal with it. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Overrides BubblePopup.OnPropertyChanged(String) Events SegmentTapped Event fired with a menu item (segment) has been tapped Declaration public event SegmentedControlEventHandler SegmentTapped Event Type Type Description SegmentedControlEventHandler Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.ILayout Xamarin.Forms.IPageController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.IElementConfiguration<TElement> IPopup IBackground IShape IElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(PopupBase) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.TargetedToast.html": {
    "href": "api/Forms9Patch.TargetedToast.html",
    "title": "Class TargetedToast | Forms9Patch",
    "keywords": "Class TargetedToast A simple toast that points to an element Inheritance Object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage PopupPage Forms9Patch.PopupBase BubblePopup TargetedToast Implements INotifyPropertyChanged IAnimatable ITabStopElement ILayout IPageController IVisualElementController IElementController IElementConfiguration < Page > IPopup IBackground IShape IElement IDisposable Inherited Members BubblePopup.Content BubblePopup.TargetBiasProperty BubblePopup.TargetBias BubblePopup.PointerLengthProperty BubblePopup.PointerLength BubblePopup.PointerTipRadiusProperty BubblePopup.PointerTipRadius BubblePopup.PointerDirectionProperty BubblePopup.PointerDirection BubblePopup.PreferredPointerDirectionProperty BubblePopup.PreferredPointerDirection BubblePopup.PointerCornerRadiusProperty BubblePopup.PointerCornerRadius BubblePopup.PointProperty BubblePopup.Point BubblePopup.OnAppearingAnimationBegin() BubblePopup.UsePoint BubblePopup.Available(Double, Double, Rectangle) BubblePopup.LayoutChildren(Double, Double, Double, Double) PopupPage.BackgroundClicked PopupPage.IsAnimationEnabledProperty PopupPage.IsAnimationEnabled PopupPage.HasSystemPaddingProperty PopupPage.HasSystemPadding PopupPage.AnimationProperty PopupPage.Animation PopupPage.SystemPaddingProperty PopupPage.SystemPadding PopupPage.SystemPaddingSidesProperty PopupPage.SystemPaddingSides PopupPage.CloseWhenBackgroundIsClickedProperty PopupPage.CloseWhenBackgroundIsClicked PopupPage.BackgroundInputTransparentProperty PopupPage.BackgroundInputTransparent PopupPage.HasKeyboardOffsetProperty PopupPage.HasKeyboardOffset PopupPage.KeyboardOffsetProperty PopupPage.KeyboardOffset PopupPage.OnBackButtonPressed() PopupPage.OnAppearingAnimationEnd() PopupPage.OnDisappearingAnimationBegin() PopupPage.OnDisappearingAnimationEnd() PopupPage.OnAppearingAnimationBeginAsync() PopupPage.OnAppearingAnimationEndAsync() PopupPage.OnDisappearingAnimationBeginAsync() PopupPage.OnDisappearingAnimationEndAsync() PopupPage.OnBackgroundClicked() ContentPage.ContentProperty ContentPage.OnBindingContextChanged() TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element) TemplatedPage.OnChildRemoved(Element, Int32) TemplatedPage.GetTemplateChild(String) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.IconImageSourceProperty Page.DisplayActionSheet(String, String, String, String[]) Page.DisplayAlert(String, String, String) Page.DisplayAlert(String, String, String, String) Page.DisplayPromptAsync(String, String, String, String, String, Int32, Keyboard, String) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnAppearing() Page.OnChildMeasureInvalidated(Object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(Double, Double) Page.UpdateChildrenLayout() Page.On<T>() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.ToolbarItems Page.LayoutChanged Page.Appearing Page.Disappearing VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class TargetedToast : BubblePopup, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, IPaddingElement, IControlTemplated, IPopup, IBackground, IShape, IElement, IDisposable Constructors TargetedToast(VisualElement) Initializes a new instance of the TargetedToast class. Declaration public TargetedToast(VisualElement target) Parameters Type Name Description VisualElement target Target. Fields OkButtonColorProperty The ok button color property. Declaration public static readonly BindableProperty OkButtonColorProperty Field Value Type Description BindableProperty OkTextColorProperty The ok text color property. Declaration public static readonly BindableProperty OkTextColorProperty Field Value Type Description BindableProperty OkTextProperty The ok text property. Declaration public static readonly BindableProperty OkTextProperty Field Value Type Description BindableProperty TextColorProperty The text color property. Declaration public static readonly BindableProperty TextColorProperty Field Value Type Description BindableProperty TextProperty The text property backing store. Declaration public static readonly BindableProperty TextProperty Field Value Type Description BindableProperty TitleProperty The title property backing store. Declaration public static readonly BindableProperty TitleProperty Field Value Type Description BindableProperty Properties OkButtonColor Gets or sets the color of the ok button. Declaration public Color OkButtonColor { get; set; } Property Value Type Description Color The color of the ok button. OkText Gets or sets the ok text. Declaration public string OkText { get; set; } Property Value Type Description String The ok text. OkTextColor Gets or sets the color of the ok text. Declaration public Color OkTextColor { get; set; } Property Value Type Description Color The color of the ok text. Text Gets or sets the text. Declaration public string Text { get; set; } Property Value Type Description String The text. TextColor Gets or sets the color of the text. Declaration public Color TextColor { get; set; } Property Value Type Description Color The color of the text. Title Gets or sets the title. Declaration public string Title { get; set; } Property Value Type Description String The title. Methods Create(VisualElement, String, String, TimeSpan) Create a toast, pointing at the specified target, with title, text, and optional timeout (popAfter) Declaration public static TargetedToast Create(VisualElement target, string title, string text, TimeSpan popAfter = default(TimeSpan)) Parameters Type Name Description VisualElement target String title String text TimeSpan popAfter Returns Type Description TargetedToast OnPropertyChanged(String) Ons the property changed. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides BubblePopup.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.ILayout Xamarin.Forms.IPageController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.IElementConfiguration<TElement> IPopup IBackground IShape IElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(PopupBase) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.TemplateSelectorBase.html": {
    "href": "api/Forms9Patch.TemplateSelectorBase.html",
    "title": "Class TemplateSelectorBase | Forms9Patch",
    "keywords": "Class TemplateSelectorBase Data template selector: Used to match types of objects with the types of views that will be used to display them in a ListView. Inheritance Object ElementTemplate DataTemplate DataTemplateSelector TemplateSelectorBase DataTemplateSelector Inherited Members DataTemplateSelector.SelectTemplate(Object, BindableObject) DataTemplate.SetBinding(BindableProperty, BindingBase) DataTemplate.SetValue(BindableProperty, Object) DataTemplate.Bindings DataTemplate.Values ElementTemplate.CreateContent() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class TemplateSelectorBase : DataTemplateSelector, IElement, IDataTemplate, IDataTemplateController Constructors TemplateSelectorBase() Initializes a new instance of the DataTemplateSelector class. Declaration protected TemplateSelectorBase() TemplateSelectorBase(Type) Initializes a new instance of the Forms9Patch.GroupTemplate class. Declaration public TemplateSelectorBase(Type groupContentViewType) Parameters Type Name Description Type groupContentViewType Group content view type. Fields _cellTemplates The cell templates. Declaration protected readonly Dictionary<Type, DataTemplate> _cellTemplates Field Value Type Description Dictionary < Type , DataTemplate > Methods Add(Type, Type) Add to the DetaTemplateSelector a viewType that will be used to display any objects of itemBaseType. Declaration protected void Add(Type dataType, Type viewType) Parameters Type Name Description Type dataType Item base type. Type viewType View type. Clear() Clear all cell templates Declaration public void Clear() OnSelectTemplate(Object, BindableObject) Triggered when a Forms9Patch.ListView needs to create a view template for an item. Declaration protected override DataTemplate OnSelectTemplate(object item, BindableObject container) Parameters Type Name Description Object item Item. BindableObject container Container. Returns Type Description DataTemplate The select template. Overrides DataTemplateSelector.OnSelectTemplate(Object, BindableObject) RemoveFactoryDefaults() Removes the factory defaults, to make more space for Andriod implementation. Declaration public void RemoveFactoryDefaults()"
  },
  "api/Forms9Patch.ThicknessExtension.html": {
    "href": "api/Forms9Patch.ThicknessExtension.html",
    "title": "Class ThicknessExtension | Forms9Patch",
    "keywords": "Class ThicknessExtension Forms9Patch Thickness extension. Inheritance Object ThicknessExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class ThicknessExtension Methods Description(Thickness) Description the specified thickness. Declaration public static string Description(this Thickness thickness) Parameters Type Name Description Thickness thickness Thickness. Returns Type Description String IsEmpty(Thickness) Is the Thickness empty? Declaration public static bool IsEmpty(this Thickness thickness) Parameters Type Name Description Thickness thickness Returns Type Description Boolean"
  },
  "api/Forms9Patch.Toast.html": {
    "href": "api/Forms9Patch.Toast.html",
    "title": "Class Toast | Forms9Patch",
    "keywords": "Class Toast Toast Popup: Plain and simple Inheritance Object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage PopupPage Forms9Patch.PopupBase ModalPopup Toast Implements INotifyPropertyChanged IAnimatable ITabStopElement ILayout IPageController IVisualElementController IElementController IElementConfiguration < Page > IPopup IBackground IShape IElement IDisposable Inherited Members ModalPopup.Content ModalPopup.LocationProperty ModalPopup.Location ModalPopup.ScaleProperty ModalPopup.Scale ModalPopup.LayoutChildren(Double, Double, Double, Double) PopupPage.BackgroundClicked PopupPage.IsAnimationEnabledProperty PopupPage.IsAnimationEnabled PopupPage.HasSystemPaddingProperty PopupPage.HasSystemPadding PopupPage.AnimationProperty PopupPage.Animation PopupPage.SystemPaddingProperty PopupPage.SystemPadding PopupPage.SystemPaddingSidesProperty PopupPage.SystemPaddingSides PopupPage.CloseWhenBackgroundIsClickedProperty PopupPage.CloseWhenBackgroundIsClicked PopupPage.BackgroundInputTransparentProperty PopupPage.BackgroundInputTransparent PopupPage.HasKeyboardOffsetProperty PopupPage.HasKeyboardOffset PopupPage.KeyboardOffsetProperty PopupPage.KeyboardOffset PopupPage.OnBackButtonPressed() PopupPage.OnAppearingAnimationBegin() PopupPage.OnAppearingAnimationEnd() PopupPage.OnDisappearingAnimationBegin() PopupPage.OnDisappearingAnimationEnd() PopupPage.OnAppearingAnimationBeginAsync() PopupPage.OnAppearingAnimationEndAsync() PopupPage.OnDisappearingAnimationBeginAsync() PopupPage.OnDisappearingAnimationEndAsync() PopupPage.OnBackgroundClicked() ContentPage.ContentProperty ContentPage.OnBindingContextChanged() TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element) TemplatedPage.OnChildRemoved(Element, Int32) TemplatedPage.GetTemplateChild(String) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.IconImageSourceProperty Page.DisplayActionSheet(String, String, String, String[]) Page.DisplayAlert(String, String, String) Page.DisplayAlert(String, String, String, String) Page.DisplayPromptAsync(String, String, String, String, String, Int32, Keyboard, String) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnAppearing() Page.OnChildMeasureInvalidated(Object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(Double, Double) Page.UpdateChildrenLayout() Page.On<T>() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.ToolbarItems Page.LayoutChanged Page.Appearing Page.Disappearing VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.TabIndexProperty VisualElement.IsTabStopProperty VisualElement.OnTabIndexPropertyChanged(Int32, Int32) VisualElement.TabIndexDefaultValueCreator() VisualElement.OnTabStopPropertyChanged(Boolean, Boolean) VisualElement.TabStopDefaultValueCreator() VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Layout(Rectangle) VisualElement.Measure(Double, Double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(Double, Double) VisualElement.SizeAllocated(Double, Double) VisualElement.IVisualElementController.InvalidateMeasure(InvalidationTrigger) VisualElement.ChangeVisualState() VisualElement.Visual VisualElement.FlowDirection VisualElement.IVisualElementController.EffectiveFlowDirection VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.ScaleX VisualElement.ScaleY VisualElement.TabIndex VisualElement.IsTabStop VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.MenuProperty Element.AutomationIdProperty Element.ClassIdProperty Element.GetMenu(BindableObject) Element.SetMenu(BindableObject, Menu) Element.IElementController.SetValueFromRenderer(BindableProperty, Object) Element.FindByName(String) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, String) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class Toast : ModalPopup, INotifyPropertyChanged, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, IPaddingElement, IControlTemplated, IPopup, IBackground, IShape, IElement, IDisposable Constructors Toast() Initializes a new instance of the Toast class. Declaration public Toast() Fields TextColorProperty The text color property. Declaration public static readonly BindableProperty TextColorProperty Field Value Type Description BindableProperty TextProperty The text property backing store. Declaration public static readonly BindableProperty TextProperty Field Value Type Description BindableProperty TitleProperty The title property backing store. Declaration public static readonly BindableProperty TitleProperty Field Value Type Description BindableProperty Properties Text Gets or sets the text. Declaration public string Text { get; set; } Property Value Type Description String The text. TextColor Gets or sets the color of the text. Declaration public Color TextColor { get; set; } Property Value Type Description Color The color of the text. Title Gets or sets the title. Declaration public string Title { get; set; } Property Value Type Description String The title. Methods Create(String, String, TimeSpan) Create the specified title and text. Declaration public static Toast Create(string title, string text, TimeSpan popAfter = default(TimeSpan)) Parameters Type Name Description String title String text TimeSpan popAfter Will dissappear after popAfter TimeSpan Returns Type Description Toast Dispose(Boolean) Dispose Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides Forms9Patch.PopupBase.Dispose(System.Boolean) OnPropertyChanged(String) Ons the property changed. Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description String propertyName Property name. Overrides ModalPopup.OnPropertyChanged(String) Events ActionTagTapped Occurs when HtmlText wrapped with an action (<a>) tag is tapped. Declaration public event EventHandler<ActionTagEventArgs> ActionTagTapped Event Type Type Description EventHandler < ActionTagEventArgs > Implements System.ComponentModel.INotifyPropertyChanged Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.ILayout Xamarin.Forms.IPageController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.IElementConfiguration<TElement> IPopup IBackground IShape IElement System.IDisposable Extension Methods VisualElementExtensions.IsDescendentOf(Element, Element) VisualElementExtensions.IsAncestorOf(Element, Element) VisualElementExtensions.BoundsInWindowCoord(VisualElement) VisualElementExtensions.BoundsInElementCoord(VisualElement, VisualElement) VisualElementExtensions.LocationInWindowCoord(VisualElement) VisualElementExtensions.PointInWindowCoord(VisualElement, Point) VisualElementExtensions.LocationInElementCoord(VisualElement, VisualElement) VisualElementExtensions.PointInElementCoord(VisualElement, Point, VisualElement) VisualElementExtensions.HitTest(VisualElement, Point, VisualElement) VisualElementExtensions.GestureListener(VisualElement) VisualElementExtensions.FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) VisualElementExtensions.FindChildrenWithProperty(VisualElement, String) VisualElementExtensions.FindVisualElementsOfType<T>(VisualElement) VisualElementExtensions.FindChildWithFocus(Element) VisualElementExtensions.FindAncestorOfType(Element, Type) VisualElementExtensions.IsInVisibleViewTree(VisualElement) ElementExtensions.AncestorOfBaseType<T>(Element) ElementExtensions.Ancestor<T>(Element) ElementExtensions.IsInNativeLayout(VisualElement) ElementExtensions.SetIsInNativeLayout(VisualElement, Boolean) ElementExtensions.GetRenderer(VisualElement) ElementExtensions.HasRenderer(VisualElement) HardwareKeyListenerExtensions.GetHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.ClearHardwareKeyListeners(PopupBase) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String, EventHandler<HardwareKeyEventArgs>) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, String) HardwareKeyListenerExtensions.AddHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, String, HardwareKeyModifierKeys) HardwareKeyListenerExtensions.RemoveHardwareKeyListener(PopupBase, HardwareKeyListener) HardwareKeyListenerExtensions.HardwareKeyFocus(PopupBase) HardwareKeyListenerExtensions.HardwareKeyUnfocus(VisualElement)"
  },
  "api/Forms9Patch.ToFileResult.html": {
    "href": "api/Forms9Patch.ToFileResult.html",
    "title": "Class ToFileResult | Forms9Patch",
    "keywords": "Class ToFileResult Result from ToPng and ToPdf processes Inheritance Object ToFileResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class ToFileResult Properties IsError Flags if the Result is an error; Declaration public bool IsError { get; } Property Value Type Description Boolean Result Either success or error result Declaration public string Result { get; } Property Value Type Description String"
  },
  "api/Forms9Patch.ToPdfService.html": {
    "href": "api/Forms9Patch.ToPdfService.html",
    "title": "Class ToPdfService | Forms9Patch",
    "keywords": "Class ToPdfService Html string extensions. Inheritance Object ToPdfService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class ToPdfService Properties IsAvailable Returns true if PDF generation is available on this device Declaration public static bool IsAvailable { get; } Property Value Type Description Boolean Methods ToPdfAsync(String, String, PageSize, PageMargin) Converts HTML text to PNG Declaration public static Task<ToFileResult> ToPdfAsync(this string html, string fileName, PageSize pageSize = null, PageMargin margin = null) Parameters Type Name Description String html HTML string to be converted to PDF String fileName Name (not path), excluding suffix, of PDF file PageSize pageSize PDF page size, in points. (default based upon user's region) PageMargin margin PDF page's margin, in points. (default is zero) Returns Type Description Task < ToFileResult > ToPdfAsync(WebView, String, PageSize, PageMargin) Creates a PNG from the contents of a Xamarin.Forms.WebView Declaration public static Task<ToFileResult> ToPdfAsync(this WebView webView, string fileName, PageSize pageSize = null, PageMargin margin = null) Parameters Type Name Description WebView webView Xamarin.Forms.WebView String fileName Name (not path), excluding suffix, of PDF file PageSize pageSize PDF page size, in points. (default based upon user's region) PageMargin margin PDF page's margin, in points. (default is zero) Returns Type Description Task < ToFileResult > Forms9Patch.ToFileResult"
  },
  "api/Forms9Patch.ToPngService.html": {
    "href": "api/Forms9Patch.ToPngService.html",
    "title": "Class ToPngService | Forms9Patch",
    "keywords": "Class ToPngService Html string extensions. Inheritance Object ToPngService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class ToPngService Methods ToPng(String, String, Action<String>) OBSOLETE Declaration [Obsolete(\"Use ToPngAsync instead\", true)] public static void ToPng(this string html, string fileName, Action<string> onComplete) Parameters Type Name Description String html String fileName Action < String > onComplete ToPngAsync(String, String, Int32) Converts HTML text to PNG Declaration public static Task<ToFileResult> ToPngAsync(this string html, string fileName, int width = -1) Parameters Type Name Description String html HTML string to be converted to PNG String fileName Name (not path), excluding suffix, of PNG file Int32 width Width of resulting PNG (in pixels). Returns Type Description Task < ToFileResult > ToPngAsync(WebView, String, Int32) Creates a PNG from the contents of a Xamarin.Forms.WebView Declaration public static Task<ToFileResult> ToPngAsync(this WebView webView, string fileName, int width = -1) Parameters Type Name Description WebView webView Xamarin.Forms.WebView String fileName Name (not path), excluding suffix, of PNG file Int32 width Width of resulting PNG (in pixels). Returns Type Description Task < ToFileResult >"
  },
  "api/Forms9Patch.WebViewPrintEffect.html": {
    "href": "api/Forms9Patch.WebViewPrintEffect.html",
    "title": "Class WebViewPrintEffect | Forms9Patch",
    "keywords": "Class WebViewPrintEffect Effect required to enable Printing of content of Xamarin.Forms.WebView Inheritance Object Effect RoutingEffect WebViewPrintEffect Inherited Members RoutingEffect.OnAttached() RoutingEffect.OnDetached() Effect.Resolve(String) Effect.Element Effect.IsAttached Effect.ResolveId Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public class WebViewPrintEffect : RoutingEffect Constructors WebViewPrintEffect(WebView) Effect required to enable printing of content of Xamarin.Forms.Webview Declaration protected WebViewPrintEffect(WebView webView) Parameters Type Name Description WebView webView Fields ActualSourceProperty Backing store for WebViewPrintEffect's ActualSource property Declaration public static readonly BindableProperty ActualSourceProperty Field Value Type Description BindableProperty Methods ApplyTo(WebView) Apply WebViewPrintEffect to Xamarin.Forms.WebView Declaration public static bool ApplyTo(WebView webView) Parameters Type Name Description WebView webView Returns Type Description Boolean"
  },
  "api/Forms9Patch.XamarinEssentialsExtensions.html": {
    "href": "api/Forms9Patch.XamarinEssentialsExtensions.html",
    "title": "Class XamarinEssentialsExtensions | Forms9Patch",
    "keywords": "Class XamarinEssentialsExtensions Extension methods to make using Xamarin.Essentials just a tiny bit easier to use. Inheritance Object XamarinEssentialsExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Forms9Patch Assembly : Forms9Patch.dll Syntax public static class XamarinEssentialsExtensions Methods ConfirmOrRequest<TPermission>() Combine CheckStatusAsync with RequestAsync Declaration public static Task<bool> ConfirmOrRequest<TPermission>() where TPermission : Permissions.BasePermission, new() Returns Type Description Task < Boolean > true if permission granted, otherwise false Type Parameters Name Description TPermission Xamarin.Essensials.Permissions"
  },
  "api/FormsGestures.BaseGestureEventArgs.html": {
    "href": "api/FormsGestures.BaseGestureEventArgs.html",
    "title": "Class BaseGestureEventArgs | Forms9Patch",
    "keywords": "Class BaseGestureEventArgs FormsGestures Base gesture event arguments. Inheritance Object EventArgs BaseGestureEventArgs DownUpEventArgs PanEventArgs PinchEventArgs RightClickEventArgs RotateEventArgs SwipeEventArgs TapEventArgs Inherited Members EventArgs.Empty Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public class BaseGestureEventArgs : EventArgs Constructors BaseGestureEventArgs(BaseGestureEventArgs, Listener) constructor Declaration public BaseGestureEventArgs(BaseGestureEventArgs source = null, Listener newListener = null) Parameters Type Name Description BaseGestureEventArgs source Listener newListener Properties Cancelled has the touch been cancelled (and thus this is the last of the touch sequence) Declaration public virtual bool Cancelled { get; } Property Value Type Description Boolean ElementPosition current position of VisualElement in Window coordinates Declaration public virtual Rectangle ElementPosition { get; protected set; } Property Value Type Description Rectangle ElementTouches Set of touch points, in VisualElement coordinates, that make up this event Declaration public virtual Point[] ElementTouches { get; } Property Value Type Description Point [] Event Name of event that has been triggered Declaration public string Event { get; } Property Value Type Description String Handled gets/sets if the gesture was handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean IsTouchCenterInView Tests if the TouchCenter is within the bounds of the view Declaration public bool IsTouchCenterInView { get; } Property Value Type Description Boolean Listener gets/sets Listener Declaration public virtual Listener Listener { get; set; } Property Value Type Description Listener NumberOfTouches Number of touches in touch event Declaration public virtual int NumberOfTouches { get; } Property Value Type Description Int32 WindowTouches Set of touch points, in Window coordinates, that make up this touch event Declaration public virtual Point[] WindowTouches { get; } Property Value Type Description Point [] Methods Center(Point[]) center of a set of touch points Declaration public virtual Point Center(Point[] touches) Parameters Type Name Description Point [] touches Returns Type Description Point Contains(Point) Tests if a point, in Window coordinates, is within the bounds of the view Declaration public bool Contains(Point p) Parameters Type Name Description Point p Returns Type Description Boolean Equals(BaseGestureEventArgs) Equal test Declaration public bool Equals(BaseGestureEventArgs other) Parameters Type Name Description BaseGestureEventArgs other Returns Type Description Boolean Equals(Object) Equal test Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() HasCode getter Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() ValueFrom(BaseGestureEventArgs) Updates properties of this instance with values from an other instance Declaration public void ValueFrom(BaseGestureEventArgs other) Parameters Type Name Description BaseGestureEventArgs other"
  },
  "api/FormsGestures.Debug.html": {
    "href": "api/FormsGestures.Debug.html",
    "title": "Class Debug | Forms9Patch",
    "keywords": "Class Debug FormsGestures Debug Helper Inheritance Object Debug Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public static class Debug"
  },
  "api/FormsGestures.Direction.html": {
    "href": "api/FormsGestures.Direction.html",
    "title": "Enum Direction | Forms9Patch",
    "keywords": "Enum Direction Direction of gesture Namespace : FormsGestures Assembly : FormsGestures.dll Syntax [Flags] public enum Direction Fields Name Description All Down Horizontal Left NotClear Right Up Vertical Extension Methods DirectionExtension.IsHorizontal() DirectionExtension.IsVertical()"
  },
  "api/FormsGestures.DirectionExtension.html": {
    "href": "api/FormsGestures.DirectionExtension.html",
    "title": "Class DirectionExtension | Forms9Patch",
    "keywords": "Class DirectionExtension Direction extension. Inheritance Object DirectionExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public static class DirectionExtension Methods IsHorizontal(Direction) Is the Direction horizontal? Declaration public static bool IsHorizontal(this Direction dir) Parameters Type Name Description Direction dir Direction instance. Returns Type Description Boolean IsVertical(Direction) Is the Direction vertical? Declaration public static bool IsVertical(this Direction dir) Parameters Type Name Description Direction dir Direction instance. Returns Type Description Boolean"
  },
  "api/FormsGestures.Display.html": {
    "href": "api/FormsGestures.Display.html",
    "title": "Class Display | Forms9Patch",
    "keywords": "Class Display Display metrics. Inheritance Object Display Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public static class Display Properties Height The hieght (pixels) of the screen Declaration public static float Height { get; } Property Value Type Description Single screen height (pixels) IsLandscape Gets a value indicating whether this Display is landscape. Declaration public static bool IsLandscape { get; } Property Value Type Description Boolean true if is landscape; otherwise, false . IsPortrait Gets a value indicating whether this Display is portrait. Declaration public static bool IsPortrait { get; } Property Value Type Description Boolean true if is portrait; otherwise, false . Orientation Gets the orientation. Declaration public static DisplayOrientation Orientation { get; } Property Value Type Description DisplayOrientation The orientation. SafeAreaInset Gets or sets the safe area inset (I'm looking at you, iPhone X). Declaration public static Thickness SafeAreaInset { get; } Property Value Type Description Thickness The safe area inset. Scale The scale (relative to 160 dpi) of the screen Declaration public static float Scale { get; } Property Value Type Description Single screen scale (1x=160dpi) StatusBarOffset Gets the status bar offset - the offset needed for MainPage to be in the right place at app start. Declaration public static double StatusBarOffset { get; } Property Value Type Description Double The status bar offset. Width The width (pixels) of the screen Declaration public static float Width { get; } Property Value Type Description Single screen width (pixels)"
  },
  "api/FormsGestures.DisplayOrientation.html": {
    "href": "api/FormsGestures.DisplayOrientation.html",
    "title": "Enum DisplayOrientation | Forms9Patch",
    "keywords": "Enum DisplayOrientation Display orientation. Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public enum DisplayOrientation Fields Name Description LandscapeLeft Landscape left orientation LandscapeRight Landscape right orientation Portrait Right side up portrait orientation. PortraitUpsideDown Upside down portrait orientation"
  },
  "api/FormsGestures.DownUpEventArgs.html": {
    "href": "api/FormsGestures.DownUpEventArgs.html",
    "title": "Class DownUpEventArgs | Forms9Patch",
    "keywords": "Class DownUpEventArgs FormsGestures Down up event arguments. Inheritance Object EventArgs BaseGestureEventArgs DownUpEventArgs Inherited Members BaseGestureEventArgs.Event BaseGestureEventArgs.Handled BaseGestureEventArgs.Listener BaseGestureEventArgs.Cancelled BaseGestureEventArgs.ElementPosition BaseGestureEventArgs.ElementTouches BaseGestureEventArgs.WindowTouches BaseGestureEventArgs.NumberOfTouches BaseGestureEventArgs.Center(Point[]) BaseGestureEventArgs.Equals(Object) BaseGestureEventArgs.Equals(BaseGestureEventArgs) BaseGestureEventArgs.GetHashCode() BaseGestureEventArgs.ValueFrom(BaseGestureEventArgs) BaseGestureEventArgs.Contains(Point) BaseGestureEventArgs.IsTouchCenterInView EventArgs.Empty Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public class DownUpEventArgs : BaseGestureEventArgs Constructors DownUpEventArgs(DownUpEventArgs, Listener) creates new DownUpEventArgs Declaration public DownUpEventArgs(DownUpEventArgs source = null, Listener newListener = null) Parameters Type Name Description DownUpEventArgs source Listener newListener Properties TriggeringTouches enumerates the touches that triggered the gesture Declaration public virtual int[] TriggeringTouches { get; protected set; } Property Value Type Description Int32 [] Methods ValueFrom(DownUpEventArgs) Updates properties from the values from another instance Declaration public void ValueFrom(DownUpEventArgs source) Parameters Type Name Description DownUpEventArgs source"
  },
  "api/FormsGestures.html": {
    "href": "api/FormsGestures.html",
    "title": "Namespace FormsGestures | Forms9Patch",
    "keywords": "Namespace FormsGestures Classes BaseGestureEventArgs FormsGestures Base gesture event arguments. Debug FormsGestures Debug Helper DirectionExtension Direction extension. Display Display metrics. DownUpEventArgs FormsGestures Down up event arguments. Listener FormsGestures Listener LongPressEventArgs FormsGestures Long press event arguments. PanEventArgs FormsGestures Pan event arguments. PinchEventArgs FormsGestures Pinch event arguments. PointExtensions Make your life easier RightClickEventArgs Arguments for RightClick gesture event RotateEventArgs FormsGestures Rotate event arguments. SwipeEventArgs FormsGestures Swipe event arguments. TapEventArgs FormsGestures Tap event arguments. VisualElementExtensions Xamarin.Forms.VisualElement extension methods Interfaces ICoordTransform Interface for coordinate tranform complient Enums Direction Direction of gesture DisplayOrientation Display orientation. Proximity Where to place a hover over"
  },
  "api/FormsGestures.ICoordTransform.html": {
    "href": "api/FormsGestures.ICoordTransform.html",
    "title": "Interface ICoordTransform | Forms9Patch",
    "keywords": "Interface ICoordTransform Interface for coordinate tranform complient Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public interface ICoordTransform Methods BoundsInWindowCoord(VisualElement) Returns bounds of view in DIP Screen Coordinates Declaration Rectangle BoundsInWindowCoord(VisualElement element) Parameters Type Name Description VisualElement element Returns Type Description Rectangle CoordTransform(VisualElement, Point, VisualElement) point transform Declaration Point CoordTransform(VisualElement fromElement, Point p, VisualElement toElement) Parameters Type Name Description VisualElement fromElement Point p VisualElement toElement Returns Type Description Point CoordTransform(VisualElement, Rectangle, VisualElement) rectangle transform Declaration Rectangle CoordTransform(VisualElement fromElement, Rectangle r, VisualElement toElement) Parameters Type Name Description VisualElement fromElement Rectangle r VisualElement toElement Returns Type Description Rectangle PointInWindowCoord(VisualElement, Point) Returns point within view in DIP Screen Coordinates Declaration Point PointInWindowCoord(VisualElement element, Point point) Parameters Type Name Description VisualElement element Point point Returns Type Description Point"
  },
  "api/FormsGestures.Listener.html": {
    "href": "api/FormsGestures.Listener.html",
    "title": "Class Listener | Forms9Patch",
    "keywords": "Class Listener FormsGestures Listener Inheritance Object BindableObject Listener Implements INotifyPropertyChanged IDisposable Inherited Members BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(String) BindableObject.OnPropertyChanging(String) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, Object) BindableObject.SetValue(BindablePropertyKey, Object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public class Listener : BindableObject, INotifyPropertyChanged, IDynamicResourceHandler, IDisposable Fields DoubleTappedCallbackParameterProperty backing store for DoubleTappedCallbackParameter property Declaration public static readonly BindableProperty DoubleTappedCallbackParameterProperty Field Value Type Description BindableProperty DoubleTappedCallbackProperty backing store for DoubleTappedCallback property Declaration public static readonly BindableProperty DoubleTappedCallbackProperty Field Value Type Description BindableProperty DoubleTappedCommandParameterProperty backing store for the DoubleTappedCommmandParameter property Declaration public static readonly BindableProperty DoubleTappedCommandParameterProperty Field Value Type Description BindableProperty DoubleTappedCommandProperty backing store for the DoubleTappedCommand property Declaration public static readonly BindableProperty DoubleTappedCommandProperty Field Value Type Description BindableProperty DownCallbackParameterProperty backing store for DownCallbackParameter property Declaration public static readonly BindableProperty DownCallbackParameterProperty Field Value Type Description BindableProperty DownCallbackProperty backing store for DownCallback property Declaration public static readonly BindableProperty DownCallbackProperty Field Value Type Description BindableProperty DownCommandParameterProperty backing store for down command parameter Declaration public static readonly BindableProperty DownCommandParameterProperty Field Value Type Description BindableProperty DownCommandProperty backing store for command invoked upon down event Declaration public static readonly BindableProperty DownCommandProperty Field Value Type Description BindableProperty LongPressedCallbackParameterProperty backing store for LongPressedCallbackParameter property Declaration public static readonly BindableProperty LongPressedCallbackParameterProperty Field Value Type Description BindableProperty LongPressedCallbackProperty backing store for LongPressedCallback property Declaration public static readonly BindableProperty LongPressedCallbackProperty Field Value Type Description BindableProperty LongPressedCommandParameterProperty backing store for LongPressedCommandParameter property Declaration public static readonly BindableProperty LongPressedCommandParameterProperty Field Value Type Description BindableProperty LongPressedCommandProperty backing store for LongPressedCommand property Declaration public static readonly BindableProperty LongPressedCommandProperty Field Value Type Description BindableProperty LongPressingCallbackParameterProperty backing store for LongPressingCallbackParameter property Declaration public static readonly BindableProperty LongPressingCallbackParameterProperty Field Value Type Description BindableProperty LongPressingCallbackProperty backing store for LongPressingCallback property Declaration public static readonly BindableProperty LongPressingCallbackProperty Field Value Type Description BindableProperty LongPressingCommandParameterProperty backing store for LongPressingCommandParameter property Declaration public static readonly BindableProperty LongPressingCommandParameterProperty Field Value Type Description BindableProperty LongPressingCommandProperty backing store for LongPressingCommand property Declaration public static readonly BindableProperty LongPressingCommandProperty Field Value Type Description BindableProperty PannedCallbackParameterProperty backing store for the PanndedCallbackParameter property Declaration public static readonly BindableProperty PannedCallbackParameterProperty Field Value Type Description BindableProperty PannedCallbackProperty backing store for the PanndedCallback property Declaration public static readonly BindableProperty PannedCallbackProperty Field Value Type Description BindableProperty PannedCommandParameterProperty backing store for the PannedCommandParameter property Declaration public static readonly BindableProperty PannedCommandParameterProperty Field Value Type Description BindableProperty PannedCommandProperty backing store for the PannedCommand property Declaration public static readonly BindableProperty PannedCommandProperty Field Value Type Description BindableProperty PanningCallbackParameterProperty backing store for the PanningCallbackParameter parameter Declaration public static readonly BindableProperty PanningCallbackParameterProperty Field Value Type Description BindableProperty PanningCallbackProperty backing store for the PanningCallback parameter Declaration public static readonly BindableProperty PanningCallbackProperty Field Value Type Description BindableProperty PanningCommandParameterProperty backing store for the PanningCommandParameter parameter Declaration public static readonly BindableProperty PanningCommandParameterProperty Field Value Type Description BindableProperty PanningCommandProperty backing store for the PanningCommand parameter Declaration public static readonly BindableProperty PanningCommandProperty Field Value Type Description BindableProperty PinchedCallbackParameterProperty backing store for the PinchedCallbackParameter property Declaration public static readonly BindableProperty PinchedCallbackParameterProperty Field Value Type Description BindableProperty PinchedCallbackProperty backing store for the PinchedCallback property Declaration public static readonly BindableProperty PinchedCallbackProperty Field Value Type Description BindableProperty PinchedCommandParameterProperty backing store for the PinchedCommandParameter property Declaration public static readonly BindableProperty PinchedCommandParameterProperty Field Value Type Description BindableProperty PinchedCommandProperty backing store for the PinchedCommand property Declaration public static readonly BindableProperty PinchedCommandProperty Field Value Type Description BindableProperty PinchingCallbackParameterProperty backing store for the PinchingCallbackParameter property Declaration public static readonly BindableProperty PinchingCallbackParameterProperty Field Value Type Description BindableProperty PinchingCallbackProperty backing store for the PinchingCallback property Declaration public static readonly BindableProperty PinchingCallbackProperty Field Value Type Description BindableProperty PinchingCommandParameterProperty backing store for the PinchingCommandParameter property Declaration public static readonly BindableProperty PinchingCommandParameterProperty Field Value Type Description BindableProperty PinchingCommandProperty backing store for the PinchingCommand property Declaration public static readonly BindableProperty PinchingCommandProperty Field Value Type Description BindableProperty RightClickedCallbackParameterProperty backing store for a TappedCallbackParameter property Declaration public static readonly BindableProperty RightClickedCallbackParameterProperty Field Value Type Description BindableProperty RightClickedCallbackProperty backing store for a TappedCallback property Declaration public static readonly BindableProperty RightClickedCallbackProperty Field Value Type Description BindableProperty RightClickedCommandParameterProperty backing store for the TappedCommandParameter property Declaration public static readonly BindableProperty RightClickedCommandParameterProperty Field Value Type Description BindableProperty RightClickedCommandProperty backing store for the TappedCommand property Declaration public static readonly BindableProperty RightClickedCommandProperty Field Value Type Description BindableProperty RotatedCallbackParameterProperty backing store for the RotatedCallbackParameter property Declaration public static readonly BindableProperty RotatedCallbackParameterProperty Field Value Type Description BindableProperty RotatedCallbackProperty backing store for the RotatedCallback property Declaration public static readonly BindableProperty RotatedCallbackProperty Field Value Type Description BindableProperty RotatedCommandParameterProperty backing store for the RotatedCommandParameter property Declaration public static readonly BindableProperty RotatedCommandParameterProperty Field Value Type Description BindableProperty RotatedCommandProperty backing store for the RotatedCommand property Declaration public static readonly BindableProperty RotatedCommandProperty Field Value Type Description BindableProperty RotatingCallbackParameterProperty backing store for the RotatingCallbackParameter property Declaration public static readonly BindableProperty RotatingCallbackParameterProperty Field Value Type Description BindableProperty RotatingCallbackProperty backing store for the RotatingCallback property Declaration public static readonly BindableProperty RotatingCallbackProperty Field Value Type Description BindableProperty RotatingCommandParameterProperty backing store for the RotatingCommandParameter property Declaration public static readonly BindableProperty RotatingCommandParameterProperty Field Value Type Description BindableProperty RotatingCommandProperty backing store for the RotatingCommand property Declaration public static readonly BindableProperty RotatingCommandProperty Field Value Type Description BindableProperty SwipedCallbackParameterProperty backing store for the SwipedCallbackParameter property Declaration public static readonly BindableProperty SwipedCallbackParameterProperty Field Value Type Description BindableProperty SwipedCallbackProperty backing store for the SwipedCallback property Declaration public static readonly BindableProperty SwipedCallbackProperty Field Value Type Description BindableProperty SwipedCommandParameterProperty backing store for the SwipedCommandParameter property Declaration public static readonly BindableProperty SwipedCommandParameterProperty Field Value Type Description BindableProperty SwipedCommandProperty backing store for the SwipedCommand property Declaration public static readonly BindableProperty SwipedCommandProperty Field Value Type Description BindableProperty TappedCallbackParameterProperty backing store for a TappedCallbackParameter property Declaration public static readonly BindableProperty TappedCallbackParameterProperty Field Value Type Description BindableProperty TappedCallbackProperty backing store for a TappedCallback property Declaration public static readonly BindableProperty TappedCallbackProperty Field Value Type Description BindableProperty TappedCommandParameterProperty backing store for the TappedCommandParameter property Declaration public static readonly BindableProperty TappedCommandParameterProperty Field Value Type Description BindableProperty TappedCommandProperty backing store for the TappedCommand property Declaration public static readonly BindableProperty TappedCommandProperty Field Value Type Description BindableProperty TappingCallbackParameterProperty backing store for the TappingCallbackParameter property Declaration public static readonly BindableProperty TappingCallbackParameterProperty Field Value Type Description BindableProperty TappingCallbackProperty backing store for the TappingCallback property Declaration public static readonly BindableProperty TappingCallbackProperty Field Value Type Description BindableProperty TappingCommandParameterProperty backing store for the TappingCommandParameter property Declaration public static readonly BindableProperty TappingCommandParameterProperty Field Value Type Description BindableProperty TappingCommandProperty backing store for the TappingCommand property Declaration public static readonly BindableProperty TappingCommandProperty Field Value Type Description BindableProperty UpCallbackParameterProperty Backing store for UpCallbackParameter Declaration public static readonly BindableProperty UpCallbackParameterProperty Field Value Type Description BindableProperty UpCallbackProperty Backing store for UpCallback Declaration public static readonly BindableProperty UpCallbackProperty Field Value Type Description BindableProperty UpCommandParameterProperty backing store for UpCommandParameter Declaration public static readonly BindableProperty UpCommandParameterProperty Field Value Type Description BindableProperty UpCommandProperty backing store for UpCommand Declaration public static readonly BindableProperty UpCommandProperty Field Value Type Description BindableProperty Properties DoubleTappedCallback Action invoked after a double tap motion Declaration public Action<Listener, object> DoubleTappedCallback { get; set; } Property Value Type Description Action < Listener , Object > DoubleTappedCallbackParameter Parameter sent to Action invoked after a double tap motion Declaration public object DoubleTappedCallbackParameter { get; set; } Property Value Type Description Object DoubleTappedCommand Command invoked after a double tap motion Declaration public ICommand DoubleTappedCommand { get; set; } Property Value Type Description ICommand DoubleTappedCommandParameter Parameter sent with Command invoked after a double tap motion Declaration public object DoubleTappedCommandParameter { get; set; } Property Value Type Description Object DownCallback Action invoked invoked upon down event Declaration public Action<Listener, object> DownCallback { get; set; } Property Value Type Description Action < Listener , Object > DownCallbackParameter parameter passed with to Action invoked invoked upon down event Declaration public object DownCallbackParameter { get; set; } Property Value Type Description Object DownCommand command invoked upon down event Declaration public ICommand DownCommand { get; set; } Property Value Type Description ICommand DownCommandParameter parameter passed with command invoked upon down event Declaration public object DownCommandParameter { get; set; } Property Value Type Description Object Element VisualElement that is the focus of this Listener Declaration public VisualElement Element { get; } Property Value Type Description VisualElement HandlesDoubleTapped does this Listener invoke anything upon double tap motion? Declaration public bool HandlesDoubleTapped { get; } Property Value Type Description Boolean HandlesDown returns if Listener is configured to handle down touch Declaration public bool HandlesDown { get; } Property Value Type Description Boolean HandlesLongPressed Does this Listener invoke anything after a long press Declaration public bool HandlesLongPressed { get; } Property Value Type Description Boolean HandlesLongPressing Does this Listner invoke anything during long press motion? Declaration public bool HandlesLongPressing { get; } Property Value Type Description Boolean HandlesPanned Does this Listener invoke anything after pan motion? Declaration public bool HandlesPanned { get; } Property Value Type Description Boolean HandlesPanning Does Listener invoke anything during pan motion? Declaration public bool HandlesPanning { get; } Property Value Type Description Boolean HandlesPinched Does this Listener invoke anything after pinch motion Declaration public bool HandlesPinched { get; } Property Value Type Description Boolean HandlesPinching does this Listener invoke anything during pinch motion? Declaration public bool HandlesPinching { get; } Property Value Type Description Boolean HandlesRightClicked does this Listener invoke anything after a tap motion? Declaration public bool HandlesRightClicked { get; } Property Value Type Description Boolean HandlesRotated Does Listener invoke anything after rotation motion? Declaration public bool HandlesRotated { get; } Property Value Type Description Boolean HandlesRotating Does Listener invoke anything during rotation motion? Declaration public bool HandlesRotating { get; } Property Value Type Description Boolean HandlesSwiped Does this Listener invoke anything after swipe motion Declaration public bool HandlesSwiped { get; } Property Value Type Description Boolean HandlesTapped does this Listener invoke anything after a tap motion? Declaration public bool HandlesTapped { get; } Property Value Type Description Boolean HandlesTapping does this Listner invoke anything during a tap motion? Declaration public bool HandlesTapping { get; } Property Value Type Description Boolean HandlesUp Does this Listener invoke anything upon an up touch? Declaration public bool HandlesUp { get; } Property Value Type Description Boolean LongPressedCallback Action invoked after long press motion Declaration public Action<Listener, object> LongPressedCallback { get; set; } Property Value Type Description Action < Listener , Object > LongPressedCallbackParameter Parameter sent with Action invoked after long press motion Declaration public object LongPressedCallbackParameter { get; set; } Property Value Type Description Object LongPressedCommand Command invoked after long press motion Declaration public ICommand LongPressedCommand { get; set; } Property Value Type Description ICommand LongPressedCommandParameter Parameter sent with Command invoked after long press motion Declaration public object LongPressedCommandParameter { get; set; } Property Value Type Description Object LongPressingCallback Action invoked during long pressing motion Declaration public Action<Listener, object> LongPressingCallback { get; set; } Property Value Type Description Action < Listener , Object > LongPressingCallbackParameter Parameter sent to Action invoked during long pressing motion Declaration public object LongPressingCallbackParameter { get; set; } Property Value Type Description Object LongPressingCommand Command invoked during long pressing motion Declaration public ICommand LongPressingCommand { get; set; } Property Value Type Description ICommand LongPressingCommandParameter Parameter sent to Command invoked during long pressing motion Declaration public object LongPressingCommandParameter { get; set; } Property Value Type Description Object PannedCallback Action invoked after pan motion Declaration public Action<Listener, object> PannedCallback { get; set; } Property Value Type Description Action < Listener , Object > PannedCallbackParameter Parameter sent with Action invoked after pan motion Declaration public object PannedCallbackParameter { get; set; } Property Value Type Description Object PannedCommand Command invoked after pan motion Declaration public ICommand PannedCommand { get; set; } Property Value Type Description ICommand PannedCommandParameter Parameter sent with Command invoked after pan motion Declaration public object PannedCommandParameter { get; set; } Property Value Type Description Object PanningCallback Action invoked duing pan motion Declaration public Action<Listener, object> PanningCallback { get; set; } Property Value Type Description Action < Listener , Object > PanningCallbackParameter Parameter sent to Action invoked duing pan motion Declaration public object PanningCallbackParameter { get; set; } Property Value Type Description Object PanningCommand Command invoked duing pan motion Declaration public ICommand PanningCommand { get; set; } Property Value Type Description ICommand PanningCommandParameter Parameter sent with Command invoked duing pan motion Declaration public object PanningCommandParameter { get; set; } Property Value Type Description Object PinchedCallback Action invoked after pinch motion Declaration public Action<Listener, object> PinchedCallback { get; set; } Property Value Type Description Action < Listener , Object > PinchedCallbackParameter Parameter passed to Action invoked after pinch motion Declaration public object PinchedCallbackParameter { get; set; } Property Value Type Description Object PinchedCommand Command invoked after pinch motion Declaration public ICommand PinchedCommand { get; set; } Property Value Type Description ICommand PinchedCommandParameter Parameter sent with Command invoked after pinch motion Declaration public object PinchedCommandParameter { get; set; } Property Value Type Description Object PinchingCallback Action invoked during pinch motion Declaration public Action<Listener, object> PinchingCallback { get; set; } Property Value Type Description Action < Listener , Object > PinchingCallbackParameter Parameter sent to Action invoked during pinch motion Declaration public object PinchingCallbackParameter { get; set; } Property Value Type Description Object PinchingCommand Command invoked during pinch motion Declaration public ICommand PinchingCommand { get; set; } Property Value Type Description ICommand PinchingCommandParameter Parameter sent with Command invoked during pinch motion Declaration public object PinchingCommandParameter { get; set; } Property Value Type Description Object RightClickedCallback Action invoked after a tap motion Declaration public Action<Listener, object> RightClickedCallback { get; set; } Property Value Type Description Action < Listener , Object > RightClickedCallbackParameter Parameter passed to Action invoked after a tap motion Declaration public object RightClickedCallbackParameter { get; set; } Property Value Type Description Object RightClickedCommand Command invoked after a tap motion Declaration public ICommand RightClickedCommand { get; set; } Property Value Type Description ICommand RightClickedCommandParameter Parameter passed with Command invoked after a tap motion Declaration public object RightClickedCommandParameter { get; set; } Property Value Type Description Object RotatedCallback Action invoked after rotation motion Declaration public Action<Listener, object> RotatedCallback { get; set; } Property Value Type Description Action < Listener , Object > RotatedCallbackParameter Parameter sent with Action invoked after rotation motion Declaration public object RotatedCallbackParameter { get; set; } Property Value Type Description Object RotatedCommand Command invoked after rotation motion Declaration public ICommand RotatedCommand { get; set; } Property Value Type Description ICommand RotatedCommandParameter Parameter sent with Command invoked after rotation motion Declaration public object RotatedCommandParameter { get; set; } Property Value Type Description Object RotatingCallback Action invoked during rotation motion Declaration public Action<Listener, object> RotatingCallback { get; set; } Property Value Type Description Action < Listener , Object > RotatingCallbackParameter Parameter sent with Action invoked during rotation motion Declaration public object RotatingCallbackParameter { get; set; } Property Value Type Description Object RotatingCommand Command invoked during rotation motion Declaration public ICommand RotatingCommand { get; set; } Property Value Type Description ICommand RotatingCommandParameter Parameter sent with Command invoked during rotation motion Declaration public object RotatingCommandParameter { get; set; } Property Value Type Description Object SwipedCallback Action invoked after swipe motion Declaration public Action<Listener, object> SwipedCallback { get; set; } Property Value Type Description Action < Listener , Object > SwipedCallbackParameter Parameter sent with Action invoked after swipe motion Declaration public object SwipedCallbackParameter { get; set; } Property Value Type Description Object SwipedCommand Command invoked after swipe motion Declaration public ICommand SwipedCommand { get; set; } Property Value Type Description ICommand SwipedCommandParameter Parameter sent with Command invoked after swipe motion Declaration public object SwipedCommandParameter { get; set; } Property Value Type Description Object TappedCallback Action invoked after a tap motion Declaration public Action<Listener, object> TappedCallback { get; set; } Property Value Type Description Action < Listener , Object > TappedCallbackParameter Parameter passed to Action invoked after a tap motion Declaration public object TappedCallbackParameter { get; set; } Property Value Type Description Object TappedCommand Command invoked after a tap motion Declaration public ICommand TappedCommand { get; set; } Property Value Type Description ICommand TappedCommandParameter Parameter passed with Command invoked after a tap motion Declaration public object TappedCommandParameter { get; set; } Property Value Type Description Object TappingCallback Action invoked upon tap event Declaration public Action<Listener, object> TappingCallback { get; set; } Property Value Type Description Action < Listener , Object > TappingCallbackParameter Parameter passed to Action invoked during tap event Declaration public object TappingCallbackParameter { get; set; } Property Value Type Description Object TappingCommand Command invoked during tap event Declaration public ICommand TappingCommand { get; set; } Property Value Type Description ICommand TappingCommandParameter Parameter padded to command invoked during tap event Declaration public object TappingCommandParameter { get; set; } Property Value Type Description Object UpCallback Action invoked upon up touch Declaration public Action<Listener, object> UpCallback { get; set; } Property Value Type Description Action < Listener , Object > UpCallbackParameter Parameter passed to Action invoked upon up touch Declaration public object UpCallbackParameter { get; set; } Property Value Type Description Object UpCommand command invoked upon up touch Declaration public ICommand UpCommand { get; set; } Property Value Type Description ICommand UpCommandParameter parameter passed to command invoked upon up touch Declaration public object UpCommandParameter { get; set; } Property Value Type Description Object Methods Dispose() Disposer Declaration public void Dispose() Dispose(Boolean) Dispoer Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing For(VisualElement) Constructor Declaration public static Listener For(VisualElement element) Parameters Type Name Description VisualElement element Returns Type Description Listener Events Disposing Event handler for Disposing event Declaration public event EventHandler Disposing Event Type Type Description EventHandler DoubleTapped DoubleTapped event handler Declaration public event EventHandler<TapEventArgs> DoubleTapped Event Type Type Description EventHandler < TapEventArgs > Down Down event handler Declaration public event EventHandler<DownUpEventArgs> Down Event Type Type Description EventHandler < DownUpEventArgs > HandlesDoubleTappedChanged Occurs when handles double tapped changed. Declaration public event EventHandler<bool> HandlesDoubleTappedChanged Event Type Type Description EventHandler < Boolean > HandlesDownChanged Event to notify if the ability to handle down events has changed Declaration public event EventHandler<bool> HandlesDownChanged Event Type Type Description EventHandler < Boolean > HandlesLongPressedChanged Event triggered when HandlesLongPressed had changed Declaration public event EventHandler<bool> HandlesLongPressedChanged Event Type Type Description EventHandler < Boolean > HandlesLongPressingChanged Event triggered when HandlesLongPressing has changed Declaration public event EventHandler<bool> HandlesLongPressingChanged Event Type Type Description EventHandler < Boolean > HandlesPannedChanged Event triggered when HandlesPanned has changed Declaration public event EventHandler<bool> HandlesPannedChanged Event Type Type Description EventHandler < Boolean > HandlesPanningChanged Event triggered when HandlesPanning has changed Declaration public event EventHandler<bool> HandlesPanningChanged Event Type Type Description EventHandler < Boolean > HandlesPinchedChanged Event triggered when HandlesPinched has changed Declaration public event EventHandler<bool> HandlesPinchedChanged Event Type Type Description EventHandler < Boolean > HandlesPinchingChanged Event triggered when HandlesPinching has changed Declaration public event EventHandler<bool> HandlesPinchingChanged Event Type Type Description EventHandler < Boolean > HandlesRightClickedChanged Event triggered when HandlesRightClicked has changed Declaration public event EventHandler<bool> HandlesRightClickedChanged Event Type Type Description EventHandler < Boolean > HandlesRotatedChanged Event trigged when HandlesRotated has changed Declaration public event EventHandler<bool> HandlesRotatedChanged Event Type Type Description EventHandler < Boolean > HandlesRotatingChanged Event trigged when HandlesRotating has changed Declaration public event EventHandler<bool> HandlesRotatingChanged Event Type Type Description EventHandler < Boolean > HandlesSwipedChanged Event triggered when HandlesSwiped has changed Declaration public event EventHandler<bool> HandlesSwipedChanged Event Type Type Description EventHandler < Boolean > HandlesTappedChanged Event triggered when HandlesTapped has changed Declaration public event EventHandler<bool> HandlesTappedChanged Event Type Type Description EventHandler < Boolean > HandlesTappingChanged Event triggered when HandlesTapping state has changed Declaration public event EventHandler<bool> HandlesTappingChanged Event Type Type Description EventHandler < Boolean > HandlesUpChanged Event triggered when HandlesUp status has changed; Declaration public event EventHandler<bool> HandlesUpChanged Event Type Type Description EventHandler < Boolean > LongPressed LongPressed event handler Declaration public event EventHandler<LongPressEventArgs> LongPressed Event Type Type Description EventHandler < LongPressEventArgs > LongPressing LongPressing event handler Declaration public event EventHandler<LongPressEventArgs> LongPressing Event Type Type Description EventHandler < LongPressEventArgs > Panned Pannded event handler Declaration public event EventHandler<PanEventArgs> Panned Event Type Type Description EventHandler < PanEventArgs > Panning Panning event handler Declaration public event EventHandler<PanEventArgs> Panning Event Type Type Description EventHandler < PanEventArgs > Pinched Pinched event handler Declaration public event EventHandler<PinchEventArgs> Pinched Event Type Type Description EventHandler < PinchEventArgs > Pinching Pinching event listener Declaration public event EventHandler<PinchEventArgs> Pinching Event Type Type Description EventHandler < PinchEventArgs > RightClicked Tapped event handler Declaration public event EventHandler<RightClickEventArgs> RightClicked Event Type Type Description EventHandler < RightClickEventArgs > Rotated Rotated event handler Declaration public event EventHandler<RotateEventArgs> Rotated Event Type Type Description EventHandler < RotateEventArgs > Rotating Rotating event handler Declaration public event EventHandler<RotateEventArgs> Rotating Event Type Type Description EventHandler < RotateEventArgs > Swiped Swiped event handler Declaration public event EventHandler<SwipeEventArgs> Swiped Event Type Type Description EventHandler < SwipeEventArgs > Tapped Tapped event handler Declaration public event EventHandler<TapEventArgs> Tapped Event Type Type Description EventHandler < TapEventArgs > Tapping Tapping event handler Declaration public event EventHandler<TapEventArgs> Tapping Event Type Type Description EventHandler < TapEventArgs > Up Up event motion handler Declaration public event EventHandler<DownUpEventArgs> Up Event Type Type Description EventHandler < DownUpEventArgs > Implements System.ComponentModel.INotifyPropertyChanged System.IDisposable"
  },
  "api/FormsGestures.LongPressEventArgs.html": {
    "href": "api/FormsGestures.LongPressEventArgs.html",
    "title": "Class LongPressEventArgs | Forms9Patch",
    "keywords": "Class LongPressEventArgs FormsGestures Long press event arguments. Inheritance Object EventArgs BaseGestureEventArgs TapEventArgs LongPressEventArgs Inherited Members TapEventArgs.NumberOfTaps TapEventArgs.ValueFrom(TapEventArgs) BaseGestureEventArgs.Event BaseGestureEventArgs.Handled BaseGestureEventArgs.Listener BaseGestureEventArgs.Cancelled BaseGestureEventArgs.ElementPosition BaseGestureEventArgs.ElementTouches BaseGestureEventArgs.WindowTouches BaseGestureEventArgs.NumberOfTouches BaseGestureEventArgs.Center(Point[]) BaseGestureEventArgs.Equals(Object) BaseGestureEventArgs.Equals(BaseGestureEventArgs) BaseGestureEventArgs.GetHashCode() BaseGestureEventArgs.ValueFrom(BaseGestureEventArgs) BaseGestureEventArgs.Contains(Point) BaseGestureEventArgs.IsTouchCenterInView EventArgs.Empty Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public class LongPressEventArgs : TapEventArgs Constructors LongPressEventArgs(LongPressEventArgs, Listener) constructs new LongPressEnventArgs Declaration public LongPressEventArgs(LongPressEventArgs source = null, Listener newListener = null) Parameters Type Name Description LongPressEventArgs source Listener newListener Properties Duration Duration of long press Declaration public virtual long Duration { get; protected set; } Property Value Type Description Int64 Methods ValueFrom(LongPressEventArgs) Updates properties from the values from another instance Declaration public void ValueFrom(LongPressEventArgs source) Parameters Type Name Description LongPressEventArgs source"
  },
  "api/FormsGestures.PanEventArgs.html": {
    "href": "api/FormsGestures.PanEventArgs.html",
    "title": "Class PanEventArgs | Forms9Patch",
    "keywords": "Class PanEventArgs FormsGestures Pan event arguments. Inheritance Object EventArgs BaseGestureEventArgs PanEventArgs Inherited Members BaseGestureEventArgs.Event BaseGestureEventArgs.Handled BaseGestureEventArgs.Listener BaseGestureEventArgs.Cancelled BaseGestureEventArgs.ElementPosition BaseGestureEventArgs.ElementTouches BaseGestureEventArgs.WindowTouches BaseGestureEventArgs.NumberOfTouches BaseGestureEventArgs.Center(Point[]) BaseGestureEventArgs.Equals(BaseGestureEventArgs) BaseGestureEventArgs.ValueFrom(BaseGestureEventArgs) BaseGestureEventArgs.Contains(Point) BaseGestureEventArgs.IsTouchCenterInView EventArgs.Empty Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public class PanEventArgs : BaseGestureEventArgs Constructors PanEventArgs(PanEventArgs, Listener) constructs new PanEventArgs Declaration public PanEventArgs(PanEventArgs source = null, Listener newListener = null) Parameters Type Name Description PanEventArgs source Listener newListener Properties DeltaDistance distance since last sample of pan motion Declaration public virtual Point DeltaDistance { get; protected set; } Property Value Type Description Point TotalDistance total distance of pan motion Declaration public virtual Point TotalDistance { get; protected set; } Property Value Type Description Point Velocity currently velocity of pan motion Declaration public virtual Point Velocity { get; protected set; } Property Value Type Description Point Methods CalculateDistances(BaseGestureEventArgs) calculates the distance traversed since last sample Declaration protected void CalculateDistances(BaseGestureEventArgs previous) Parameters Type Name Description BaseGestureEventArgs previous Equals(PanEventArgs) Equality test Declaration public bool Equals(PanEventArgs other) Parameters Type Name Description PanEventArgs other Returns Type Description Boolean Equals(Object) Equality test Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides BaseGestureEventArgs.Equals(Object) GetHashCode() returns hash code Declaration public override int GetHashCode() Returns Type Description Int32 Overrides BaseGestureEventArgs.GetHashCode() ToString() Returns a String that represents the current PanEventArgs . Declaration public override string ToString() Returns Type Description String A String that represents the current PanEventArgs . Overrides Object.ToString() ValueFrom(PanEventArgs) Updates properties from the values from another instance Declaration public void ValueFrom(PanEventArgs source) Parameters Type Name Description PanEventArgs source"
  },
  "api/FormsGestures.PinchEventArgs.html": {
    "href": "api/FormsGestures.PinchEventArgs.html",
    "title": "Class PinchEventArgs | Forms9Patch",
    "keywords": "Class PinchEventArgs FormsGestures Pinch event arguments. Inheritance Object EventArgs BaseGestureEventArgs PinchEventArgs Inherited Members BaseGestureEventArgs.Event BaseGestureEventArgs.Handled BaseGestureEventArgs.Listener BaseGestureEventArgs.Cancelled BaseGestureEventArgs.ElementPosition BaseGestureEventArgs.ElementTouches BaseGestureEventArgs.WindowTouches BaseGestureEventArgs.NumberOfTouches BaseGestureEventArgs.Center(Point[]) BaseGestureEventArgs.Equals(Object) BaseGestureEventArgs.Equals(BaseGestureEventArgs) BaseGestureEventArgs.GetHashCode() BaseGestureEventArgs.ValueFrom(BaseGestureEventArgs) BaseGestureEventArgs.Contains(Point) BaseGestureEventArgs.IsTouchCenterInView EventArgs.Empty Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public class PinchEventArgs : BaseGestureEventArgs Constructors PinchEventArgs(PinchEventArgs, Listener) constructor Declaration public PinchEventArgs(PinchEventArgs source = null, Listener newListener = null) Parameters Type Name Description PinchEventArgs source Listener newListener Properties DeltaScale Scale of most recent sample of pinch motion (relative to first sample) Declaration public virtual double DeltaScale { get; protected set; } Property Value Type Description Double Distance Distance of most recent sampling of pinch motion Declaration public virtual double Distance { get; protected set; } Property Value Type Description Double TotalScale Total change in scale of pinch motion Declaration public virtual double TotalScale { get; protected set; } Property Value Type Description Double Methods CalculateScales(PinchEventArgs) Calculates total and most recent change in scale Declaration protected void CalculateScales(PinchEventArgs previous) Parameters Type Name Description PinchEventArgs previous ValueFrom(PinchEventArgs) Updates properties from the values from another instance Declaration public void ValueFrom(PinchEventArgs source) Parameters Type Name Description PinchEventArgs source"
  },
  "api/FormsGestures.PointExtensions.html": {
    "href": "api/FormsGestures.PointExtensions.html",
    "title": "Class PointExtensions | Forms9Patch",
    "keywords": "Class PointExtensions Make your life easier Inheritance Object PointExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public static class PointExtensions Methods Add(Point, Point) Add the specified first and second point. Declaration public static Point Add(this Point first, Point second) Parameters Type Name Description Point first First. Point second Second. Returns Type Description Point Subtract(Point, Point) Subtract the specified first and second point. Declaration public static Point Subtract(this Point first, Point second) Parameters Type Name Description Point first First. Point second Second. Returns Type Description Point ToString(Point, String) Handy dandy formated ToString for Xamarin.Forms.Point Declaration public static string ToString(this Point point, string format) Parameters Type Name Description Point point String format Returns Type Description String ToString(Rectangle, String) Handy dandy formated ToString for Xamarin.Forms.Rectangle Declaration public static string ToString(this Rectangle rectangle, string format) Parameters Type Name Description Rectangle rectangle String format Returns Type Description String"
  },
  "api/FormsGestures.Proximity.html": {
    "href": "api/FormsGestures.Proximity.html",
    "title": "Enum Proximity | Forms9Patch",
    "keywords": "Enum Proximity Where to place a hover over Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public enum Proximity Fields Name Description After Before Center None"
  },
  "api/FormsGestures.RightClickEventArgs.html": {
    "href": "api/FormsGestures.RightClickEventArgs.html",
    "title": "Class RightClickEventArgs | Forms9Patch",
    "keywords": "Class RightClickEventArgs Arguments for RightClick gesture event Inheritance Object EventArgs BaseGestureEventArgs RightClickEventArgs Inherited Members BaseGestureEventArgs.Event BaseGestureEventArgs.Handled BaseGestureEventArgs.Listener BaseGestureEventArgs.Cancelled BaseGestureEventArgs.ElementPosition BaseGestureEventArgs.ElementTouches BaseGestureEventArgs.WindowTouches BaseGestureEventArgs.NumberOfTouches BaseGestureEventArgs.Center(Point[]) BaseGestureEventArgs.Equals(Object) BaseGestureEventArgs.Equals(BaseGestureEventArgs) BaseGestureEventArgs.GetHashCode() BaseGestureEventArgs.ValueFrom(BaseGestureEventArgs) BaseGestureEventArgs.Contains(Point) BaseGestureEventArgs.IsTouchCenterInView EventArgs.Empty Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public class RightClickEventArgs : BaseGestureEventArgs Constructors RightClickEventArgs(RightClickEventArgs, Listener) Constructor Declaration public RightClickEventArgs(RightClickEventArgs source = null, Listener listener = null) Parameters Type Name Description RightClickEventArgs source Listener listener"
  },
  "api/FormsGestures.RotateEventArgs.html": {
    "href": "api/FormsGestures.RotateEventArgs.html",
    "title": "Class RotateEventArgs | Forms9Patch",
    "keywords": "Class RotateEventArgs FormsGestures Rotate event arguments. Inheritance Object EventArgs BaseGestureEventArgs RotateEventArgs Inherited Members BaseGestureEventArgs.Event BaseGestureEventArgs.Handled BaseGestureEventArgs.Listener BaseGestureEventArgs.Cancelled BaseGestureEventArgs.ElementPosition BaseGestureEventArgs.ElementTouches BaseGestureEventArgs.WindowTouches BaseGestureEventArgs.NumberOfTouches BaseGestureEventArgs.Center(Point[]) BaseGestureEventArgs.Equals(Object) BaseGestureEventArgs.Equals(BaseGestureEventArgs) BaseGestureEventArgs.GetHashCode() BaseGestureEventArgs.ValueFrom(BaseGestureEventArgs) BaseGestureEventArgs.Contains(Point) BaseGestureEventArgs.IsTouchCenterInView EventArgs.Empty Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public class RotateEventArgs : BaseGestureEventArgs Constructors RotateEventArgs(RotateEventArgs, Listener) constructor Declaration public RotateEventArgs(RotateEventArgs source = null, Listener newListener = null) Parameters Type Name Description RotateEventArgs source Listener newListener Properties Angle Current angle of gesture (degrees) Declaration public virtual double Angle { get; protected set; } Property Value Type Description Double DeltaAngle Change in angle since last gesture event (in degrees) Declaration public virtual double DeltaAngle { get; protected set; } Property Value Type Description Double TotalAngle Total change in angle since start of gesture (in degrees) Declaration public virtual double TotalAngle { get; protected set; } Property Value Type Description Double Methods CalculateAngles(RotateEventArgs) helper function used to calculate rotation angles Declaration protected void CalculateAngles(RotateEventArgs previous) Parameters Type Name Description RotateEventArgs previous ValueFrom(RotateEventArgs) Updates properties from the values from another instance Declaration public void ValueFrom(RotateEventArgs source) Parameters Type Name Description RotateEventArgs source"
  },
  "api/FormsGestures.SwipeEventArgs.html": {
    "href": "api/FormsGestures.SwipeEventArgs.html",
    "title": "Class SwipeEventArgs | Forms9Patch",
    "keywords": "Class SwipeEventArgs FormsGestures Swipe event arguments. Inheritance Object EventArgs BaseGestureEventArgs SwipeEventArgs Inherited Members BaseGestureEventArgs.Event BaseGestureEventArgs.Handled BaseGestureEventArgs.Listener BaseGestureEventArgs.Cancelled BaseGestureEventArgs.ElementPosition BaseGestureEventArgs.ElementTouches BaseGestureEventArgs.WindowTouches BaseGestureEventArgs.NumberOfTouches BaseGestureEventArgs.Center(Point[]) BaseGestureEventArgs.Equals(Object) BaseGestureEventArgs.Equals(BaseGestureEventArgs) BaseGestureEventArgs.GetHashCode() BaseGestureEventArgs.ValueFrom(BaseGestureEventArgs) BaseGestureEventArgs.Contains(Point) BaseGestureEventArgs.IsTouchCenterInView EventArgs.Empty Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public class SwipeEventArgs : BaseGestureEventArgs Constructors SwipeEventArgs(SwipeEventArgs, Listener) constructor Declaration public SwipeEventArgs(SwipeEventArgs source = null, Listener newListener = null) Parameters Type Name Description SwipeEventArgs source Listener newListener Properties Direction Direction of swipe Declaration public virtual Direction Direction { get; protected set; } Property Value Type Description Direction VelocityX current x velocity Declaration public double VelocityX { get; } Property Value Type Description Double VelocityY current y velocity Declaration public double VelocityY { get; } Property Value Type Description Double Methods ToString() Returns a String that represents the current SwipeEventArgs . Declaration public override string ToString() Returns Type Description String A String that represents the current SwipeEventArgs . Overrides Object.ToString() ValueFrom(SwipeEventArgs) Updates properties from the values from another instance Declaration public void ValueFrom(SwipeEventArgs source) Parameters Type Name Description SwipeEventArgs source"
  },
  "api/FormsGestures.TapEventArgs.html": {
    "href": "api/FormsGestures.TapEventArgs.html",
    "title": "Class TapEventArgs | Forms9Patch",
    "keywords": "Class TapEventArgs FormsGestures Tap event arguments. Inheritance Object EventArgs BaseGestureEventArgs TapEventArgs LongPressEventArgs Inherited Members BaseGestureEventArgs.Event BaseGestureEventArgs.Handled BaseGestureEventArgs.Listener BaseGestureEventArgs.Cancelled BaseGestureEventArgs.ElementPosition BaseGestureEventArgs.ElementTouches BaseGestureEventArgs.WindowTouches BaseGestureEventArgs.NumberOfTouches BaseGestureEventArgs.Center(Point[]) BaseGestureEventArgs.Equals(Object) BaseGestureEventArgs.Equals(BaseGestureEventArgs) BaseGestureEventArgs.GetHashCode() BaseGestureEventArgs.ValueFrom(BaseGestureEventArgs) BaseGestureEventArgs.Contains(Point) BaseGestureEventArgs.IsTouchCenterInView EventArgs.Empty Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public class TapEventArgs : BaseGestureEventArgs Constructors TapEventArgs(TapEventArgs, Listener) constructor Declaration public TapEventArgs(TapEventArgs source = null, Listener newListener = null) Parameters Type Name Description TapEventArgs source Listener newListener Properties NumberOfTaps number of taps Declaration public virtual int NumberOfTaps { get; protected set; } Property Value Type Description Int32 Methods ValueFrom(TapEventArgs) Updates properties from the values from another instance Declaration public void ValueFrom(TapEventArgs source) Parameters Type Name Description TapEventArgs source"
  },
  "api/FormsGestures.VisualElementExtensions.html": {
    "href": "api/FormsGestures.VisualElementExtensions.html",
    "title": "Class VisualElementExtensions | Forms9Patch",
    "keywords": "Class VisualElementExtensions Xamarin.Forms.VisualElement extension methods Inheritance Object VisualElementExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FormsGestures Assembly : FormsGestures.dll Syntax public static class VisualElementExtensions Methods BoundsInElementCoord(VisualElement, VisualElement) Translates the bounds of an element to the coordinates of another, reference element Declaration public static Rectangle BoundsInElementCoord(this VisualElement fromElement, VisualElement toElement) Parameters Type Name Description VisualElement fromElement VisualElement toElement Returns Type Description Rectangle BoundsInWindowCoord(VisualElement) Translates the bounds of an element to the coordinates of app's window Declaration public static Rectangle BoundsInWindowCoord(this VisualElement element) Parameters Type Name Description VisualElement element Returns Type Description Rectangle CoordTransform(VisualElement, Point, VisualElement) translates a point from the coordinates of this element to that of another Declaration public static Point CoordTransform(VisualElement fromElement, Point p, VisualElement toElement) Parameters Type Name Description VisualElement fromElement Point p VisualElement toElement Returns Type Description Point CoordTransform(VisualElement, Rectangle, VisualElement) translates a rectangle from the coordinates of this element to that of another Declaration public static Rectangle CoordTransform(VisualElement fromElement, Rectangle r, VisualElement toElement) Parameters Type Name Description VisualElement fromElement Rectangle r VisualElement toElement Returns Type Description Rectangle FindAncestorOfType(Element, Type) returns first ancestor element of given type Declaration public static Element FindAncestorOfType(this Element element, Type type) Parameters Type Name Description Element element Type type Returns Type Description Element FindChildrenWithProperty(VisualElement, String) Enumarates all the chilren of a VisualElement with a given property name Declaration public static List<VisualElement> FindChildrenWithProperty(this VisualElement parentElement, string propertyName) Parameters Type Name Description VisualElement parentElement String propertyName Returns Type Description List < VisualElement > FindChildrenWithPropertyAndOfType<T>(VisualElement, String, List<T>) Enumerates all of the children of a parent element of a given type T Declaration public static List<T> FindChildrenWithPropertyAndOfType<T>(this VisualElement parentElement, string propertyName, List<T> result = null) where T : VisualElement Parameters Type Name Description VisualElement parentElement String propertyName List <T> result Returns Type Description List <T> Type Parameters Name Description T FindChildWithFocus(Element) Finds the child VisualElement that is currently focused. Declaration public static VisualElement FindChildWithFocus(this Element element) Parameters Type Name Description Element element Element. Returns Type Description VisualElement The child with focus. FindFocused() Finds the currently focused VisualElement. Declaration public static VisualElement FindFocused() Returns Type Description VisualElement The focused. FindVisualElementsOfType<T>() Enumarates all VisualElements with a given type (T) Declaration public static List<T> FindVisualElementsOfType<T>() where T : VisualElement Returns Type Description List <T> Type Parameters Name Description T FindVisualElementsOfType<T>(VisualElement) Enumarates all the chilren of a VisualElement Declaration public static List<T> FindVisualElementsOfType<T>(this VisualElement parentElement) where T : VisualElement Parameters Type Name Description VisualElement parentElement Returns Type Description List <T> Type Parameters Name Description T FindVisualElementsWithProperty(String) Enumarates all VisualElements with a given property name Declaration public static List<VisualElement> FindVisualElementsWithProperty(string propertyName) Parameters Type Name Description String propertyName Returns Type Description List < VisualElement > FindVisualElementsWithPropertyAndOfType<T>(String) Enumarates all VisualElements with a given type (T) and property name Declaration public static List<T> FindVisualElementsWithPropertyAndOfType<T>(string propertyName) where T : VisualElement Parameters Type Name Description String propertyName Returns Type Description List <T> Type Parameters Name Description T GestureListener(VisualElement) Gets or creates a FormsGestures.Listener for a Xamarin.Forms.VisualElement Declaration public static Listener GestureListener(this VisualElement element) Parameters Type Name Description VisualElement element Returns Type Description Listener HitTest(VisualElement, Point, VisualElement) determines if point in this element is withing the bounds of another, test element Declaration public static bool HitTest(this VisualElement hitElement, Point hitPoint, VisualElement targetElement) Parameters Type Name Description VisualElement hitElement Point hitPoint VisualElement targetElement Returns Type Description Boolean IsAncestorOf(Element, Element) Is this element an ancestor or a descendent element? Declaration public static bool IsAncestorOf(this Element ancestor, Element child) Parameters Type Name Description Element ancestor Element child Returns Type Description Boolean IsDescendentOf(Element, Element) Is this element a descendent of an ancestor element? Declaration public static bool IsDescendentOf(this Element child, Element ancestor) Parameters Type Name Description Element child Element ancestor Returns Type Description Boolean IsInVisibleViewTree(VisualElement) Is the element in the current visible view tree? Declaration public static bool IsInVisibleViewTree(this VisualElement visualElement) Parameters Type Name Description VisualElement visualElement Returns Type Description Boolean LocationInElementCoord(VisualElement, VisualElement) Translates the location of an element to the coordinates of another, reference element Declaration public static Point LocationInElementCoord(this VisualElement fromElement, VisualElement toElement) Parameters Type Name Description VisualElement fromElement VisualElement toElement Returns Type Description Point LocationInWindowCoord(VisualElement) Translates the location of an element to the app's window's coordinates Declaration public static Point LocationInWindowCoord(this VisualElement element) Parameters Type Name Description VisualElement element Returns Type Description Point PointInElementCoord(VisualElement, Point, VisualElement) Translates a point from its local view coordinates to that of another view Declaration public static Point PointInElementCoord(this VisualElement fromElement, Point p, VisualElement toElement) Parameters Type Name Description VisualElement fromElement Point p VisualElement toElement Returns Type Description Point PointInWindowCoord(VisualElement, Point) Returns a point (in a view) to the DIP Screen coordinates Declaration public static Point PointInWindowCoord(this VisualElement element, Point p) Parameters Type Name Description VisualElement element Point p Returns Type Description Point"
  },
  "guides/Buttons.html": {
    "href": "guides/Buttons.html",
    "title": "Using Forms9Patch Button Elements | Forms9Patch",
    "keywords": "Using Forms9Patch Button Elements Background I often say Forms9Patch was originally written for the purpose of having NinePatch images in Xamarin.Forms. That's not completely true. I wanted NinePatch images because I had used them in Android as the background image for device independent buttons. Quite frankly,what I really wanted was SVG backgrounds but all the pieces to do that were not available at that time. Fortunately, things have changed and now - via Forms9Patch - I have both! Another missing element for Android and Xamarin.Forms is a SegmentedControl (like iOS has). Building a SegmentedControl was a bit painful for me in Android and I dreaded what it would take in Xamarin. However, when I actually rolled up my sleeves and did it, I fell in love with what the Xamarin team had done. I was sold! Overview Forms9Patch has three button elements: Button StateButton¹ SegmentedControl All three buttons share a number of properties and behaviors for the purpose of giving you more design and functional options without more complexity. Forms9Patch.Button Forms9Patch.Button is the most basic, adding the following to what Xamarin.Forms.Button provides: Horizontal and vertical alignment of button's text Text and Background color for the selected state Outline and clip shape: Rectangle Square Circle Ellipse Obround Toggle behavior Background image Icon as an image or as HTML text Icon to text positioning: horizontal vs. vertical orientation icon before or after text spacing between icon and text Haptics (when available) Forms9Patch.StateButton Forms9Patch.StateButton further extends Forms9Patch.Button by adding the ability to toggle its properties as a function of its state. The states are: DefaultState PressingState SelectedState DisabledState DisabledAndSelectedState NOTE ¹ : As of Xamarin.Forms 3+, I recommend not using Forms9Patch.StateButton . Rather, use Forms9Patch.Button in combination with Xamarin.Forms' new Visual State Manager . Visual State Manager is a great feature and I'm looking forward to using it! Forms9Patch.SegmentedControl iOS has a segmented control that, for the life of me, I don't know why isn't standard in Android, UWP, or Xamarin.Forms. It's just too useful. That being said, if I remember correctly, even the iOS segmented control doesn't support a vertical layout (please correct me if I'm wrong). Forms9Patch.SegmentedControl provides for the following features: Orientation of the button list Toggle behavior Separator Width Horizontal and vertical alignment of button's text Text and Background color for the selected state Icon to text positioning: horizontal vs. vertical orientation icon before or after text spacing between icon and text Using Forms9Patch's buttons Shared Layout and Decoration Properties The layout and decoration properties shared by all three Forms9Patch buttons are: Outline/Background: BackgroundColor SelectedBackgroundColor : BorderRadius : Alternatively, OutlineRadius BorderWidth : Alternatively, OutlineWidth BorderColor : Alternatively, OutlineColor HasShadow Padding : The padding between the outline and the button's content (the icon and label) Text TextColor FontAttributes FontSize FontFamily : the button's label's font family. Note: You can use the ResourceID of Embedded Resource fonts here! SelectedTextColor : the color of the button's text when selected HorizontalTextAlignment VerticalTextAlignment LineBreakMode : See Xamarin.Forms.LineBreakMode AutoFit : Autofitting algorithm to be applied to button's label's text. See Label.Autofitting . Lines : The number of lines used for the label's text fitting. Again, see Label.Autofitting .- Background BackgroundColor BackgroundImage : A Forms9Patch.Image that will be used as the button's background. Icon: IconFontFamily : Used to specify the font family used for the IconText property. Note: See Custom Fonts to see how to use an Embedded Resource font! TrailingIcon : Is the icon placed before or after the label? TintIcon : If the icon is a raster image, should the color of the non-transparent pixels be set to TextColor ? HasTightSpacing : If false , the icon will be positioned to the outside edge of the button. If true , the icon will be positioned next to the label (separated by Spacing ). Button and StateButton unique properties Additionally, the Button and StateButton elements have these properties: Outline Shape : ElementShape.Rectangle , ElementShape.Square , ElementShape.Circle , ElementShape.Ellipse , and ElementShape.Obround . Controls the shape of both the border and the background clipping region. Text Text : plain text for the button's label HtmlText : markup text for the button's label - an alternative to Text Icon IconImage : A Forms9Patch.Image element to be used as the button's icon image. IconText : An alternative to IconImage , enabling the use of Unicode characters or special font characters as button icons. Just like the HtmlText property, this property will decode HTML markup, allowing you to specify colors, fonts and other attributes. Orientation : Is the icon and label arranged vertically or horizontally? Spacing : if TightSpacing is true, the icon will be positioned Spacing pixels away from the label SegmentedControl unique properties The SegmentedControl has the following unique properties: Outline: SeparatorWidth : Width of the separator between segments Text SyncSegmentFontSizes : After autofitting the text in each segment to fit the available space, if this property is set to true , then the SegmentedControl will set the FontSize of all the segments to be the same as the smallest fitted font size. Selection: SelectedSegments : List of the selected segments SelectedIndexes : List of the indexes of the selected segments GroupToggleBehavior : How the buttons will behave after being selected. States: None, Radio, Multiselect; Layout: IntraSegmentOrientation : Is the icon arranged Horizontally or Vertically relative to the label? IntraSegmentSpacing : When HasTightSpacing , how much space should be between segments? Orientation : Are the Segments arranged Horizontally or Vertically? Segment Properties The Segment element is used primarily to populate the SegmentedController and secondarily, to customize individual segments beyond the default values provided by the parent SegmentedController . IconImage : Forms9Patch.Image as the segment's optional image. It will be tinted either to FontColor when enabled and grey when disabled if the parent SegmentControl 's TintImage=true and the image is a PNG with transparency. IconText : alternative to the ImageSource property. Used to specify HTML formatted text for button's icon. Great when used with Google's Material Font. IconFontFamily : Used to specify the font family used for the IconText property. Note: You can use the ResourceID of Embedded Resource fonts here! Text : the segment's optional text. HtmlText : text formatted via subset of HTML tags. See the Using the HtmlLabel property section below for more information. FontColor : the color of the text when enabled. Disabled segmentS use a shade of grey determined by the DarkTheme property. FontAttributes : is the text bold or italics? IsSelected : Is the segment in the selected state? Note: Segment's parent's GroupToggleBehavior property must be Radio or MultiSelect for this to change in response to the segment being tapped. IsEnabled : Is the segment enabled? Orientation : Do you want the text and image placed image on top of text (vertical) or image to the left of text (horizontal)? Events Button, StateButton, and Segment events Command : The ICommand to execute when the button/segment is pressed. NOTE: If a segment's parent's GroupToggleBehavior property is set to None, then this will fire anytime the segment is tapped. Otherwise, it will fire only when the segment transitions from unselected to selected. CommandParameter : The parameter used in ICommand calls. Tapped : EventHandler be called anytime a button/segment is tapped. Selected : EventHandler be called when a button/segment transitions from unselected to selected. LongPressing : EventHandler be called when a button/segment is being held down long enough to be considered a long press. LongPressed : EventHandler be called when a button/segment's long press has ended. SegmentedControl events SegmentTapped : Fired when one of the SegmentedControl's segments is tapped; SegmentSelected : Fired when one of the SegmentedControl's segments transitions to the Selected state SegmentLongPressing : Fired when one of the SegmentedControl's segments is being held down long enough to be considered a long press. SegmentLongPressed :: Fired when one of the SegmentedControl's segments long press has ended. Examples Forms9Patch Button Example var button = new Forms9Patch.Button { Text = \"Click me\", ToggleBehavior = true, BackgroundColor = Color.NavajoWhite, OutlineRadius = 5, HasShadow=true, }; <!-- --> <!-- --> Unselected Selected Forms9Patch StateButton example <?xml version=\"1.0\" encoding=\"UTF-8\"?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:f9p=\"clr-namespace:Forms9Patch;assembly=Forms9Patch\" xmlns:local=\"clr-namespace:Forms9PatchDemo;assembly=Forms9PatchDemo\" x:Class=\"Forms9PatchDemo.XamlSingleStateButtonPage\" Padding=\"5, 20, 5, 5\"> <StackLayout> <f9p:StateButton ToggleBehavior=\"true\" HeightRequest=\"80\" Alignment=\"Start\"> <f9p:StateButton.DefaultState> <f9p:ButtonState Text=\"Toggle Default State\" TextColor=\"Blue\"> <f9p:ButtonState.BackgroundImage> <f9p:Image Source=\"{local:ImageMultiResource Forms9PatchDemo.Resources.button}\"/> </f9p:ButtonState.BackgroundImage> <f9p:ButtonState.IconImage> <f9p:Image Source=\"{local:ImageMultiResource Forms9PatchDemo.Resources.Info}\"/> </f9p:ButtonState.IconImage> </f9p:ButtonState> </f9p:StateButton.DefaultState> <f9p:StateButton.SelectedState> <f9p:ButtonState TextColor=\"Red\" Text=\"Selected\" > <f9p:ButtonState.BackgroundImage> <f9p:Image Source=\"{local:ImageMultiResource Forms9PatchDemo.Resources.image}\"/> </f9p:ButtonState.BackgroundImage> </f9p:ButtonState> </f9p:StateButton.SelectedState> </f9p:StateButton> <Label x:Name=\"label\"/> </StackLayout> </ContentPage> <!-- --> <!-- --> Unselected Selected Forms9Patch SegmentedControl example <?xml version=\"1.0\" encoding=\"UTF-8\"?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" x:Class=\"Forms9PatchDemo.XamlSegmentedControlPage\" xmlns:f9p=\"clr-namespace:Forms9Patch;assembly=Forms9Patch\" xmlns:local=\"clr-namespace:Forms9PatchDemo;assembly=Forms9PatchDemo\" BackgroundColor = \"Gray\" Padding = \"40\" > <ContentPage.Content> <StackLayout> <Label Text=\"SegmentedControl Example\" TextColor=\"Black\"/> <f9p:SegmentedControl BackgroundColor=\"White\" FontSize=\"16\" TextColor=\"#0076FF\" Orientation=\"Vertical\" OutlineColor=\"#CCC\" OutlineWidth=\"0\" SeparatorWidth=\"1\" OutlineRadius=\"6\" Padding=\"5\" GroupToggleBehavior=\"Multiselect\"> <f9p:Segment Text=\"Pause 5\"/> <f9p:Segment Text=\"Pause 10\"/> <f9p:Segment Text=\"Pause 15\"/> <f9p:Segment Text=\"Cancel\" TextColor=\"Red\"/> <f9p:Segment Text=\"Launch\" FontAttributes=\"Bold\"/> </f9p:SegmentedControl> <f9p:SegmentedControl BackgroundColor=\"White\" Padding=\"5\" FontSize=\"16\" TextColor=\"#0076FF\" OutlineColor=\"#CCC\" OutlineWidth=\"0\" SeparatorWidth=\"1\" OutlineRadius=\"6\" > <f9p:Segment Text=\"A\" Orientation=\"Vertical\"> <f9p:Segment.IconImage> <f9p:Image Source=\"{local:ImageMultiResource Forms9PatchDemo.Resources.ArrowR}\"/> </f9p:Segment.IconImage> </f9p:Segment> <f9p:Segment Text=\"B\" Orientation=\"Vertical\"> <f9p:Segment.IconImage> <f9p:Image Source=\"{local:ImageMultiResource Forms9PatchDemo.Resources.Info}\"/> </f9p:Segment.IconImage> </f9p:Segment> <f9p:Segment Text=\"PIZZA\"/> </f9p:SegmentedControl> </StackLayout> </ContentPage.Content> </ContentPage>"
  },
  "guides/CustomFonts.html": {
    "href": "guides/CustomFonts.html",
    "title": "Using Embedded Resource Custom Fonts | Forms9Patch",
    "keywords": "Using Embedded Resource Custom Fonts Forms9Patch's label and button elements have built in support for using Embedded Resource custom fonts - a much simpler approach to custom fonts. Likewise, Forms9Patch provides the Forms9Patch.EmbeddedResourceFontEffect effect to make using Embedded Resource custom fonts easier for all Xamarin.Forms elements that have the FontFamily property. Adding your custom font as an Embedded Resource Below is an example of how to use Forms9Patch's custom font management. The example uses Google's Material Design Icons font , which they have been nice enough to license under the Creative Common Attribution 4.0 International License (CC-BY 4.0) ! Follow one of the below Getting Started guides to create a .NetStandard Xamarin Forms cross-platform app with the MyDemoApp assembly namespace. Getting Started: VisualStudio 2017 for Mac Getting Started: VisualStudio 2017 for Windows Create a Resources folder in the app's shared code (.NetStandard) project: Right click on your .NetStandard project and select Add / New Folder . A New Folder folder should appear. Rename it Resources . Before After Create a Fonts folder under the Resources folder in the app's shared code (.NetStandard) project Save the MaterialIcons-Regular.ttf custom font file to the Resources/Fonts folder. I prefer to drag it from OSX Finder or Windows File Explorer into the Resources/Fonts folder in VisualStudio. Set the Build Action to EmbeddedResource for this custom font. Make note of the Resource ID of this custom font. See Embedded Resource Id Naming Convention for details. Your Embedded Resource custom font is now ready for use by Forms9Patch label and button elements and for any Xamarin.Forms.VisualElement that supports the FontFamily property. Embedded Resource custom font with Forms9Patch Label This section assumes you've added your custom font to your Shared Code project, as described in Adding your custom font as an Embedded Resource , above. Open your shared source (.NetStandard) application source file ( MyDemoApp.cs in this example) Change the Label element to a Forms9Patch Label: Note: The XAlign and YAlign properties have long ago been deprecated by Xamarin. As such, I didn't implement them in Forms9Patch. Use HorizontalTextAlignment and VerticalTextAlignment instead. Set the FontFamily property to the font's EmbeddedResource ID If you compile and run now, you should see some very unexpected output. Why? Because the Material Icons doesn't have support for most standard characters! Because we're using Material Icons (which is great for symbols but terrible for text), we are going to need to non-latin, unicode characters to our string. With Forms9Patch, we have some options for specifying unicode characters. Here are three approaches to getting the label in this example to display the following Material-Icon characters: Copy and Paste A lot of times, you can get a Unicode character by copying it from a web page or from an application (like FontBook on OSX). Once you copy it, you can then paste it into your string in Visual Studio or Xamarin Studio. For your convenience, here [    ] (between the brackets) are the unicode characters for the Material Icons Font's scissors, airplane, and umbrella characters. When you copy them and paste into a string in VisualStudio, they will appear as shown below. If you use that string as the text for Forms9Patch.Label using the MaterialIcons-Regular.ttf font, it will render as shown, above. C# unicode escape code C# makes unicode pretty easy via escape codes ... as long as the character is 16 bit! For the Material Icons font, you can go here , select the character (icon in this case) you want. Then, at the bottom right of the page, select < > ICON FONT . There you can find the hexadecimal escape code (see \"For IE9 and below\"). For the scissors, it is &#xE14E; . For the airplane, is be &#xE195; . And for the umbrella, it is &#xEB3E; . Since each has 4 hexadecimal characters, they all are 16 bit unicode - and I get to avoid explaining how to deal with 32 bit unicode. In our example, replace \"Welcome to Xamarin Forms\" with \"\\uE14E \\uE195 \\uEB3E\" . Notice, for each escape code, that the leading &# was replaced with \\u and the trailing semicolon was dropped. HtmlText property By design, HTML does a great job with Unicode. The HtmlLabel property wouldn't be useful without that magic. For this example, remember (above) that the HTML escape codes we found on Google's Material Design Icons page were (Scissors= &#xE14E; . Airplane= &#xE195; . Umbrella= &#xEB3E; . ). Since these are HTML escape codes, we can pass them in a string to the HtmlText property. Embedded Resource custom fonts with Xamarin Forms text elements and EmbeddedResourceFontEffect This section assumes you've added your custom font to your Shared Code project, as described in Adding your custom font as an Embedded Resource , above. Open your shared source (.NetStandard) application source file ( MyDemoApp.cs in this example) Using an existing Xamarin.Forms.Label element or create a new one. Set the FontFamily property to the font's EmbeddedResource ID. Add the EmbeddedResourceFontEffect to your Xamarin.Forms text elements. Shown above are two different approaches to this."
  },
  "guides/GettingStartedMac.html": {
    "href": "guides/GettingStartedMac.html",
    "title": "Getting Started: VisualStudio 2017 for Mac | Forms9Patch",
    "keywords": "Getting Started: VisualStudio 2017 for Mac Before you begin, check out the system requirements to be sure your application and development environment is ready. This walk through demonstrates how to create an application that displays a label which is marked-up to show a phone number and email link. Tapping on those links will present a pop-up that asks permission to proceed with the phone call or email. Create the LinkTest application as follows: Launch VisualStudio. Create a new Xamarin Forms project by clicking File | New Solution menu item. The New Project dialog will appear. Select Multiplatform | App in the left navigation pad. Select Xamarin.Forms | Blank Forms App from the list of templates. Click [Next] . The second New Project dialog will appear. Enter LinkTest for the App Name: , select Use .NET Standard for the Shared Code: , and click [Next] . The third New Project dialog will appear. Your project settings should be as above. Click [Create] to start the project creation process. When complete, you will have a new project with the MainPage.xaml file open. Add the Forms9Patch NuGet package to each of the solution's projects: Shared Code Project Expand the Dependencies folder in the LinkTest project. Right click on the NuGet folder. The options pop-up menu will appear. Select Add Packages... . The Add Packages dialog will appear. Enter Forms9Patch into the search box (top right). When the Forms9Patch package appears, select it and then click [Add Package] to add it to the LinkTest project. Android Platform Project Expand the LinkTest.Droid project. Double click on the Packages folder to open the Add Packages dialog. If you just completed the Shared Code Project instructions, above, then Forms9Patch will be shown as the first package (as shown in the above image). Otherwise, enter Forms9Patch into the search box (top right). When the Forms9Patch package appears, select it and then click [Add Package] to add it to the LinkTest project. iOS Platform Project Expand the LinkTest.iOS project. Double click on the Packages folder to open the Add Packages dialog. If you just completed the Shared Code Project instructions, above, then Forms9Patch will be shown as the first package (as shown in the above image). Otherwise, enter Forms9Patch into the search box (top right). When the Forms9Patch package appears, select it and then click [Add Package] to add it to the LinkTest project. Initialize Forms9Patch in each of your platform projects: Android Open MainActivity.cs in your solution's Android platform project. Between global::Xamarin.Forms.Forms.Init(this, bundle); and LoadApplication(new App()); , add the Forms9Patch.Droid initialization call using the key for the LinkTest applications. The result should look like the following: global::Xamarin.Forms.Forms.Init(this, bundle); Forms9Patch.Droid.Settings.Initialize(this); LoadApplication(new App()); iOS Open AppDelegate.cs in your solution's iOS platform project. Between global::Xamarin.Forms.Forms.Init(); and LoadApplication(new App()); , add the Forms9Patch.iOS initialization call using the key for the LinkTest applications. The result should look like the following: global::Xamarin.Forms.Forms.Init(); Forms9Patch.iOS.Settings.Initialize(this); LoadApplication(new App()); Update your application's MainPage content (MainPage.xaml) to use Forms9Patch elements: In Solution Explorer, in the LinkTest project, double-click MainPage.xaml to open it. Update MainPage.xaml with the following code. This code declaratively defines the user interface for the page. <?xml version=\"1.0\" encoding=\"utf-8\" ?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:Forms9Patch=\"clr-namespace:Forms9Patch;assembly=Forms9Patch\" xmlns:local=\"clr-namespace:LinkTest\" x:Class=\"LinkTest.MainPage\"> <ContentPage.Padding> <OnPlatform x:TypeArguments=\"Thickness\"> <On Platform=\"iOS\" Value=\"20, 40, 20, 20\" /> <On Platform=\"Android, WinPhone, Windows\" Value=\"20\" /> </OnPlatform> </ContentPage.Padding> <StackLayout VerticalOptions=\"Center\"> <Forms9Patch:Label HorizontalTextAlignment=\"Center\"> Example of Forms9Patch markup text. </Forms9Patch:Label> <BoxView HeightRequest=\"1\" Color=\"Black\"></BoxView> <Forms9Patch:Label x:Name=\"PhoneLabel\" HorizontalTextAlignment=\"Center\" TextColor=\"Black\"> <![CDATA[This is a phone number link: <a id=\"link1\" href=\"tel:+353015546889\">015546889</a> ]]> </Forms9Patch:Label> <BoxView HeightRequest=\"1\" Color=\"Black\"></BoxView> <Forms9Patch:Label x:Name=\"EmailLabel\" HorizontalTextAlignment=\"Center\" TextColor=\"Black\"> <![CDATA[This is an email link: <a id=\"link2\" href=\"mailto:email@hotmail.com\">email@hotmail.com</a> ]]> </Forms9Patch:Label> </StackLayout> </ContentPage> Modify your share code's MainPage source code ( MainPage.xaml.cs ) using the following code so it will respond to clicks / taps on the Forms9Patch.Label action links. using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using Xamarin.Forms; using Xamarin.Forms.Xaml; namespace LinkTest { public partial class MainPage : ContentPage { public MainPage() { InitializeComponent(); PhoneLabel.ActionTagTapped += ActionTagTapped; EmailLabel.ActionTagTapped += ActionTagTapped; } private void ActionTagTapped(object sender, Forms9Patch.ActionTagEventArgs e) { Forms9Patch.Toast.Create(\"Link Activated\", \"The link (id: \" + e.Id + \", href:\" + e.Href + \") was activated.\"); } } } Now, you're ready to build and run the LinkTest app on a platform. Since you're developing this app on a Mac, how about running LinkTest.iOS? Go to the Startup Project Selection drop down and select the LinkTest.iOS project Click the [▶] button to start the build-run process After the build is complete, the iOS Simulator will start and VisualStudio will deploy the app's package. Click on any of the links and you should see something like the following: Try changing the Startup Project to TestLink.Android and run it on an x86 based Android emulator. As mentioned earlier: because of Forms9Patch's more comprehensive Forms9Patch.Clipboard functionality, you will have to add the following code to your Android project's Resources/Values/string.xml file,before you can build your Android project. <string>name=\"forms9patch_copy_paste_authority\">your_Android_app_package_name_here.f9pcopypaste</string> I know - it's a pain. At some point of time, I'll have to see if I can use some of the trickery used by the Xamarin.Facebook Nuget Package to get rid of this requirement. BE SURE YOU DON'T RUN IT ON AN ARM BASED EMULATOR."
  },
  "guides/GettingStartedWindows.html": {
    "href": "guides/GettingStartedWindows.html",
    "title": "Getting Started: VisualStudio 2017 for Windows | Forms9Patch",
    "keywords": "Getting Started: VisualStudio 2017 for Windows Before you begin, check out the system requirements to be sure your application and development environment is ready. This walk through demonstrates how to create an application that displays a label which is marked-up to show a phone number and email link. Tapping on those links will present a pop-up that asks permission to proceed with the phone call or email. Create the LinkTest application as follows: Launch VisualStudio. Create a new Xamarin Forms project by clicking File | New | Project menu item. In the New Project dialog, browse to Installed | Visual C# | Cross-Platform , select the Mobile App (Xamarin.Forms) template, set the Name and Solution name to LinkTest , assure a suitable location for the project and click the [OK] button: In the New Cross Platform App dialog, select the Blank App template, select .Net Standard Code Sharing Strategy, and then click the [OK] button: Add the Forms9Patch NuGet package to each of your solution's projects: In Solution Explorer, right-click on the LinkTest solution and select Manage NuGet Packages for Solution...: ... select the Browse tab ...: ... and search for \"Forms9Patch\": Select the Forms9Patch Nuget package: Apply it to all of your solution's projects by selecting the check box at the top of the project selection column: Be sure the latest stable package is selected and then click [Install]: Initialize Forms9Patch in each of your platform projects: Android Open MainActivity.cs in your solution's Android platform project. Between global::Xamarin.Forms.Forms.Init(this, bundle); and LoadApplication(new App()); , add the Forms9Patch.Droid initialization call using the key for the LinkTest applications. The result should look like the following: global::Xamarin.Forms.Forms.Init(this, bundle); Forms9Patch.Droid.Settings.Initialize(this); LoadApplication(new App()); iOS Open AppDelegate.cs in your solution's iOS platform project. Between global::Xamarin.Forms.Forms.Init(); and LoadApplication(new App()); , add the Forms9Patch.iOS initialization call using the key for the LinkTest applications. The result should look like the following: global::Xamarin.Forms.Forms.Init(); Forms9Patch.iOS.Settings.Initialize(this); LoadApplication(new App()); UWP Open App.xaml.cs in your solution's UWP platform project. Find the following line Xamarin.Forms.Forms.Init(e); ... and replace it with the following lines: Xamarin.Forms.Forms.Init(e, Forms9Patch.UWP.Settings.AssembliesToInclude); Forms9Patch.UWP.Settings.Initialize(this); Update your application's MainPage content (MainPage.xaml) to use Forms9Patch elements: In Solution Explorer, in the LinkTest shared .NetStandard project ( not the LinkTest.UWP platform project), double-click MainPage.xaml to open it. Update MainPage.xaml with the following changes. This code declaratively defines the user interface for the page. <?xml version=\"1.0\" encoding=\"utf-8\" ?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:Forms9Patch=\"clr-namespace:Forms9Patch;assembly=Forms9Patch\" xmlns:local=\"clr-namespace:LinkTest\" x:Class=\"LinkTest.MainPage\"> <ContentPage.Padding> <OnPlatform x:TypeArguments=\"Thickness\"> <On Platform=\"iOS\" Value=\"20, 40, 20, 20\" /> <On Platform=\"Android, WinPhone, Windows\" Value=\"20\" /> </OnPlatform> </ContentPage.Padding> <StackLayout VerticalOptions=\"Center\"> <Forms9Patch:Label HorizontalTextAlignment=\"Center\"> Example of Forms9Patch markup text. </Forms9Patch:Label> <BoxView HeightRequest=\"1\" Color=\"Black\"></BoxView> <Forms9Patch:Label x:Name=\"PhoneLabel\" HorizontalTextAlignment=\"Center\" TextColor=\"Black\"> <![CDATA[This is a phone number link: <a id=\"link1\" href=\"tel:+353015546889\">015546889</a> ]]> </Forms9Patch:Label> <BoxView HeightRequest=\"1\" Color=\"Black\"></BoxView> <Forms9Patch:Label x:Name=\"EmailLabel\" HorizontalTextAlignment=\"Center\" TextColor=\"Black\"> <![CDATA[This is an email link: <a id=\"link2\" href=\"mailto:email@hotmail.com\">email@hotmail.com</a> ]]> </Forms9Patch:Label> </StackLayout> </ContentPage> Modify your application's MainPage source code (MainPage.xaml.cs) using the following code so it will respond to clicks / taps on the Forms9Patch.Label action links. using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using Xamarin.Forms; using Xamarin.Forms.Xaml; namespace LinkTest { //[XamlCompilation(XamlCompilationOptions.Compile)] public partial class MainPage : ContentPage { public MainPage() { InitializeComponent(); PhoneLabel.ActionTagTapped += ActionTagTapped; EmailLabel.ActionTagTapped += ActionTagTapped; } private void ActionTagTapped(object sender, Forms9Patch.ActionTagEventArgs e) { Forms9Patch.Toast.Create(\"Link Activated\", \"The link (id: \" + e.Id + \", href:\" + e.Href + \") was activated.\"); } } } Now, you're ready to build and run the LinkTest app on a platform. Since you're developing this app on Windows, how about running LinkTest.UWP? Go to the Startup Project Selection drop down and sel ect the LinkTest.UWP (Universal Windows) project Click the [> LocalMachine] button to start the build-run process After the build is complete, the package will deploy to Windows and you will see the following application: Click on any of the links and you should see something like the following: Try changing the Startup Project to TestLink.Android and run it on an x86 based Android emulator. Because of Forms9Patch's more comprehensive Forms9Patch.Clipboard functionality, you will have to add the following code to your Android project's Resources/Values/string.xml file,before you can build your Android project. <string name=\"forms9patch_copy_paste_authority\">your_Android_app_package_name_here.f9pcopypaste</string> I know - it's a pain. At some point of time, I'll have to see if I can use some of the trickery used by the Xamarin.Facebook Nuget Package to get rid of this requirement. BE SURE YOU DON'T RUN IT ON AN ARM EMULATOR."
  },
  "guides/Image.html": {
    "href": "guides/Image.html",
    "title": "Using Forms9Patch.Image | Forms9Patch",
    "keywords": "Using Forms9Patch.Image Forms9Patch.Image extends Xamarin.Forms.Image to provide Xamarin.Forms with a patch scalable image element, the ability to tile an image within its alloted bounds, and the rendering of SVG images. The ImageSource for the Forms9Patch.Image element can be specified either as a Forms9Patch.ImageSource or a Xamarin.Forms.ImageSource . Supported file formats are NinePatch ( .9.png ), .png , .jpg , .jpeg , .gif , .bmp , .bmpf , and .svg . Background iOS's UIKit provides resizableImageWithCapInsets: to make an UIImage a patch scalable image. The capInset argument is used to specify the regions (distance inset from the edges) which will not scale (or scale in only one direction) when the image is stretched to fill it's parent view. Similarly, Android provides NinePatchDrawable to allow apps to display Nine-patch images as scalable drawing elements. The Nine-patch image format is used to specify the regions that are allowed to scale when the image is stretched to fill it's parent view. Both approaches have their advantages. Unlike iOS's resizableImageWithCapInsets: , Android's and Forms9Patch's use of the Nine-patch image format allows for unscalable regions to be anywhere in the image (not just at the edges). And, because the scaled regions are marked within the image file, scaling can be customized to each file. On the other hand, resizableImageWithCapInsets: provides the ability to define the scaling regions at runtime - which provides additional flexibility and convenience. Seeing advantages to each approach, Forms9Patch.Image allows for both. If a NinePatch image is provided, Forms9Patch.Image uses it's scalable region marking. If the CapsInset property is set, Forms9Patch.Image will use it to set the unscalable edges - which means CapsInset will always override NinePatch regions. `## Xamarin.Forms.Image.Aspect vs. Forms9Patch.Image.Fill Xamarin.Forms.Image provides the Aspect property to indicate how an image will fill its bounds. Forms9Patch.Image does not support the Aspect property. Rather, it has the Fill property. The Fill property supports the Aspect property's AspectFill , AspectFit , and Fill values and adds the Tile value for easy management of textures. See the Forms9PatchDemo app for examples of it in action. NinePatch image example Let's describe the use of Forms9Patch.Image for NinePatch images through an example. Say you want to display a pop-up message bubble where the tip is centered. Because they can have multiple scalable regions, the Nine-patch format works great for this. Starting with a .png of the bubble, use a NinePatch editor, like Android's Draw 9-patch to mark the horizontal and vertical stretchable regions. Before marking After marking bubble.png bubble.9.png 200x122 202x124 After adding bubble.9.png to your cross-platform project as an EmbeddedResource, you can display it using something like the following: var bubbleImage = new Forms9Patch.Image () { Source = ImageSource.FromResource(\"MyDemoApp.Resources.bubble.9.png\"), HeightRequest = 110, } var label = new label () { Text = \"Forms9Path NinePatch Image\", HorizontalOptions = LayoutOptions.Center, } Resulting in: CapsInset Property Coding the CapsInset Property The CapInset property is used to specify the regions (distance inset from the edges) which will not scale when the image is stretched to fill it's parent view. For example, let's make the following image a banner by scaling it horizontally. ResourceID: MyDemoApp.Resources.Images.redribbon.png Image Size: 308x80 Load it using Xamarin.Forms.ImageSource as the source to Forms9Patch.Image and then, set the CapInsets property: var label1 = new Label () { Text = \"Xamarin Image\", } var image1 = new Xamarin.Forms.Image () { Source = ImageSource.FromResource(\"MyDemoApp.Resources.Images.redribbon.png\"), } var label1 = new Label () { Text = \"Forms9Patch Image w/ CapInsets\", } var image2 = new Forms9Patch.Image () { Source = ImageSource.FromResource(\"MyDemoApp.Resources.Images.redribbon.png\"), CapInsets = new Thickness(23, 0, 110, 0), } iPhone Android XAML Example To use Forms9Patch.Image in your XAML, you will have to add the Forms9Patch namespace (from the Forms9Patch assembly) and then use Forms9Patch.Image where desired. Also note that, if you want to use Embedded Resource images, you will need to add an XAML markup extension to the assembly that contains those images (see Using Forms9Patch.ImageSource ). For example: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:local=\"clr-namespace:MyXamlDemo;assembly=MyXamlDemo\" xmlns:Forms9Patch=\"clr-namespace:Forms9Patch;assembly=Forms9Patch\" x:Class=\"MyXamlDemo.MyPage\" Padding=\"5, 20, 5, 5\"> <ScrollView> <ScrollView.Content> <StackLayout> <Label Text=\"Xamarin.Forms.Image\"/> <Image Source=\"{local:ImageMultiResource Forms9PatchDemo.Resources.Images.redribbon}\"/> <Label Text=\"Forms9Patch.Image w/ CapInsets\"/> <Forms9Patch:Image Source=\"{local:ImageMultiResource Forms9PatchDemo.Resources.Images.redribbon}\" CapInsets=\"23,-1,111,-1\"/> </StackLayout> </ScrollView.Content> </ScrollView> </ContentPage> Embedded Resource Convenience Constructor If you do most of your layouts in code (rather than XAML), there are tasks you repeat very often. And because they are repeated so often, a shorter version of that task would be convenient. If you often use Forms9Patch.ImageSource.FromMultiResource , Forms9Patch.ImageSource.FromResource , or Xamarin.Forms.ImageSource.FromResource as the source for your Forms9Patch.Image or Xamarin.Forms.Image , you will be happy to know that you can instead pass the EmbeddedResourceId as an parameter to the Forms9Patch.Image constructor. var image = new Forms9Patch.Image(\"Forms9PatchDemo.Resources.Images.redribbon\"); Fill Property Forms9Patch.Image.Fill property is almost identical to Xamarin.Forms.Image.Aspect property. It is only different in that it uses Forms9Patch.Fill instead of Xamarin.Forms.Aspect - which means it also supports Forms9Patch.Fill.Tile to direct Forms9Patch.Image to tile a source image in the image layout. TintColor Property There are times where it is desireable to theme an app at runtime. One way of doing this is by changing the color of monochrome images (often used as icons). Forms9Patch makes this easy by giving Forms9Patch.Image the TintColor property. var image = new Forms9Patch.Image(\"MyApp.Resource.Printer.png\") { TintColor = Color.Blue }; Source Image w/ TintColor=Color.Blue Note: The TintColor property is intented for use with raster images that have and makes use of the transparent color plane. Results will likely be undesirable for other types of raster images. This property is ignored for vector ( .svg ) images. SourceImageSize Property Want to be sure you got the image you intended to ask for? This question can come up when you're doing cross platform development. The SourceImageSize property can help with this by giving you the size of the ImageSource being used for the image. NOTE: For NinePatch images ( .9.png ), the value returned does not include the two extra pixels in width and height for the NinePatch markup. AntiAlias Property Xamarin.Forms relies on the platform image elements to render images. A small performance improvement can be had by not applying an anti-alias algorithm to the image during rendering. Just as Xamarin.Forms , Forms9Patch.Image preforms this anti-alias step by default. However, if you're upscaling an image a bit much and you don't care about some pixalization, then you want a little more performance by setting this property to true . BackgroundColor Property What? Why would an image need a background color? Well, usually it wouldn't but images with transparent regions ( .png and .svg ) create an opportunity. Just as you can use the TintColor to theme a monocrome raster image, you can use BackgroundColor to them the transparent regions of such an image. Cool, huh? Source image BackgroundColor=Color.Orange Note the corners are rounded on this image! Outline and Shape Properties Taking things a step further than we did with the BackgroundColor property, why not be able to continue to dress up the image? Clipping an image to a shape and/or adding a border are two common operations applied to images when they are used as app assets. Since this is so common, Forms9Patch has them built-in. To set the shape, use the ElementShape property (which takes a Forms9Patch.ElementShape value). Available values are: ElementShape Description Full Bleed Image Example Rectangle pretty much the same as \"don't clip\" Square clip the longest side to be the same length as the shortest side Circle because, circle clipped head shots are so 2015 Ellipse still waiting for this one to be cool Obround it's embarrassing how long it took me to find out there was a name for this shape And, if you used Xamarin.Forms.Frame before, Forms9Patch's Outline properties will seem familiar: Property Description Transparent PNG Example OutlineColor Color of Forms9Patch ElementShape's outline OutlineWidth Width of Forms9Patch ElementShape's outline OutlineRadius Forms9Patch Element's corner radius. Only applies to Rectangle and Square shapes HasShadow and ShadowInverted Properties Let's go out on limb and keep adding embelishments to the image. Once you have the ability to impose a shape to your image, it is common to want a shadow to match the imposed shape. HasShadow makes that happen. And, going even further, ShadowInverted reverses the shadow to give a recessed effect to the shadow. Now, here is where Forms9Patch can do something a bit clever. If the ImageSource is a *.png image with transparency in the image, the HasShadow property of Forms9Patch will impose the shadow on the overlap of the ElementShape and the non-transparent parts of the image! NOTE: Setting ShadowInverted to true breaks this functionality."
  },
  "guides/ImageSource.html": {
    "href": "guides/ImageSource.html",
    "title": "Using Forms9Patch.ImageSource | Forms9Patch",
    "keywords": "Using Forms9Patch.ImageSource Xamarin Forms implementation of resolution specific image sourcing relies upon native APIs and schema for iOS, Android, and Windows UWP multi-screen image management described here . This requires storing your iOS images in your iOS platform project using the native iOS schema, storing your Android images in your Android platform project using the Android native schema, and storing your UWP images in your UWP platform project using the UWP native schema. In other words, duplicative efforts to get the same results on both Android, iOS, and UWP. Forms9Patch.ImageSource simplifies Xamarin.Forms.ImageSource capabilities by bringing multi-screen image management to your Shared Library, PCL Assemblies, and .NetStandard projects - so you only have to generate and configure your app's image resources once. Embedded Resource Id Naming Convention To use Forms9Patch multi-platform image management, you will need to store your image resource files as Embedded Resources. You can do this by: VisualStudio Mac : Right clicking on image file and selecting Build Action / EmbeddedResource VisualStudio 2017 : Right clicking on the image file and selecting Properties and then, in the \"Properties\" panel, modify the Build Action field to EmbeddedResource Each embedded resources has an EmbeddedResourceId string that is used to reference it at runtime. An EmbeddedResourceId is a sequence of strings joined by a period (.)as a separator. This series of strings starts with the assembly name for the project in which the embedded resource is in, appended by the names of each folder in that project's folder structure for the embedded resource file, and ends with the embedded resource's file name. project_assembly_name.project_path.base_image_file_name.extension For example, if your project's assembly name is PizzaMaker and has an image file named slice.png in its Resources/Images folder, the EmbeddedResourceId of that file would be PizzaMaker.Resources.Images.slice.png . If you're using VisualStudio Mac, don't worry too much about this because the EmbeddedResourceId is in the Properties panel in the ResourceID field. You can find the Properties panel for a file by, in the Solution Explorer pad, right clicking on a file and selecting Properties . To facilitate runtime selection (for device resolution and type) between multiple renditions of an image, Forms9Patch prescribes how to name each rendition of your image files (and thus their EmbeddedResourceId). File Name : base_image_name[resolution_modifier][device_modifier].extension EmbeddedResourceId : project_assembly_name.project_path.base_image_name[resolution_modifier][device_modifier].extension Notice the addition of the optional [resolution_modifier] and [device_modifier] modifiers. These modifiers will be familiar to iOS developers. Likewise, Android developers can see analogs in Android's Resources sub-folder naming conventions. Valid values for the optional modifiers are: Resolution Modifiers Forms9Patch notes iOS analog Android analog none fallback image if no other is available none (default) none (default) @¾x low density screens (~120 dpi) n/a -ldpi @1x explicit medium density (~160 dpi) none (default) -mdpi @1½x (~240 dpi) n/a -hdpi @2x most common (~320) @2x -xhdpi @3x rare (~480 dpi) @3x -xxhdpi @4x future proof (~640 dpi) @4x -xxxhdpi Device Modifiers Forms9Patch notes iOS analog Android analog none fallback image if no other is available none (default) none (default) ~phone maps to Xamarin Forms' TargetIdiom.Phone ~iPhone none (default) ~tablet maps to Xamarin Forms' TargetIdiom.Tablet ~iPad sw600dp ~desktop maps to Xamarin Forms' TargetIdiom.Desktop n/a n/a ~tv maps to Xamarin Forms' TargetIdiom.TV n/a n/a ~unsupported maps to Xamarin Forms' TargetIdiom.Unsupported n/a n/a Forms9Patch.ImageSource Now that you've saved your image files for each device type and resolution rendition you want to support, next comes using those images in your app. This is where Forms9Patch.ImageSource comes in. Forms9Patch.ImageSource extends Xamarin.Forms.ImageSource by adding the FromMultiResource static method, adding the following functionality to Xamarin.Forms.ImageSource.FromResource: Finds the best fit image among the EmbeddedResource image renditions Eliminates the need for explicitly specifying the image file's extension This is not without compromise. Because Xamarin.Forms.ImageSource.FromResource is intended to be multi-platform, it only supports the following image file formats: NinePatch ( .9.png ), .png , .jpg , .jpeg , .gif , .bmp , .bmpf and .svg . Note that, unlike the other image file formats, NinePatch and .svg images can only be used with Forms9Patch image elements. Code Example The following is a very simple app to demonstrate how Forms9Patch.ImageSource uses Forms9Patch's Embedded Resource ResourceID naming convention to provide the best Embedded Resource image to Xamarin.Forms.Image or Forms9Patch.Image. First, we start with a set of multi-device / multi-resolution images: 50x50 100x100 150x150 image.png image@2x.png image@3x.png image~tablet.png image@2x~tablet.png image@3x~tablet.png Next, we create our app: Create a new Xamarin Forms cross-platform (.Netstandard or PCL) application named MyDemoApp with the MyDemoApp assembly namespace Create a Resources directory in the app's cross-platform project (the .NetStandard or PCL project) Save the above six images in the cross-platform project's Resources directory Set the Build Action to EmbeddedResource for those images Modify your app code MyDemoApp.cs as shown, below: Forms9Patch.ImageSource.FromMultiResource will choose among the available embedded resource renditions in the cross-platform assembly and select the rendition that works best with the current device (tablet or phone; low / medium / high resolution). XAML Example In Xamarin.Forms, access to embedded resources from XAML requires some additional work. Unfortunately, Forms9Patch is no different. As with Xamarin.Forms, you will need (in the same assembly as your embedded resource images) a simple custom XAML markup extension to load images using their ResourceID. [ContentPropert (\"Source\")] public class ImageMultiResourceExtension : IMarkupExtension { public string Source { get; set; } public object ProvideValue (IServiceProvider serviceProvider) { if (Source == null) return null; // Do your translation lookup here, using whatever method you require var imageSource = Forms9Patch.ImageSource.FromMultiResource(Source); return imageSource; } } Once you have the above, you can load your embedded resource images as shown in the below example. Be sure to add a namespace to your XAML for the assembly that contains both the above MarkupExtension and your EmbeddedResources (named local in the below example). <?xml version=\"1.0\" encoding=\"UTF-8\"?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:local=\"clr-namespace:MyXamlDemo;assembly=MyXamlDemo\" x:Class=\"MyXamlDemo.MyPage\" Padding=\"5, 20, 5, 5\"> <ScrollView> <ScrollView.Content> <StackLayout> <Label Text=\"Xamarin.Image\"/> <Image Source=\"{local:ImageMultiResource Forms9PatchDemo.Resources.image}\"/> </StackLayout> </ScrollView.Content> </ScrollView> </ContentPage>"
  },
  "guides/index.html": {
    "href": "guides/index.html",
    "title": "Forms9Patch Guides | Forms9Patch",
    "keywords": "Forms9Patch Guides Using any new framework can be a bit intimidating. These guides are meant to walk you through the basics of Forms9Patch - helping you get started as soon as possible and making your experience with Xamarin.Forms just a little bit easier. Before you begin, check out the system requirements to be sure your application and development environment is ready."
  },
  "guides/Label.html": {
    "href": "guides/Label.html",
    "title": "Forms9Patch Label Element | Forms9Patch",
    "keywords": "Forms9Patch Label Element Background I wrote the Forms9Patch.Label element to solve a couple of problems: EmbeddedResource, Custom Fonts Setting up to use custom fonts with Xamarin.Forms is very painful - and not at all in the spirit of cross platform. I wish Xamarin had made using custom fonts easier because I would rather be making apps than making libraries. But, alas, that's not (yet) the case. If you're at Xamarin and are reading this, please don't take it personally - I love Xamarin Forms and wouldn't be putting in this much effort if I didn't. As with images, it seems that the idea cross-platform approach to custom fonts would be to embed them (as EmbeddedResources) in the shared, cross platform code. That wasn't trivial and there were a lot of obstacles to overcome. Once worked out, I saw it was possible to bring this font management magic back to Xamarin.Forms elements via the Forms9Patch.EmbeddedResourceFontEffect . Just to clarify, Forms9Patch text elements ( Label and buttons) supports EmbeddedResource custom fonts without modification. Xamarin.Forms text elements ( Label and Button ) can also use EmbeddedResource custom fonts by adding the Forms9Patch.EmbeddedResourceFontEffect effect. Detailed Examples Adding your custom font as an Embedded Resource Embedded Resource custom font with Forms9Patch.Label Embedded Resource custom fonts with Xamarin.Forms text elements + EmbeddedResourceFontEffect Intra-Label Text Formatting Text formating shouldn't be painful. That's why HTML and MarkDown were invented. Although Xamarin uses a fairly conventional approach (intermediate Span elements), it certainly isn't an easy approach. Both iOS and Android have some HTML markup capability, natively. However, the philosophy behind Forms9Patch is to avoid native if there is a NetStandard, PCL, or Shared Library approach that is easier and just as fast. Forms9Patch avoids the use of intermediate elements. Instead, you to pass HTML directly to the Label or button elements by way of the HtmlText property. Also, the HtmlText property supports a larger range of formatting than Xamarin provides via the Span element. Additionally, HtmlText integrates Forms9Patch's Embedded Resource Custom Font support into its HTML markup to give you the power to easily apply custom fonts on a granular level. Autofitting - Automatically Resizing Text Something very important to me is the ability to resize a label's FontSize so the label can fit its container without truncation - or having more control over the layout before truncation happens. At the time of this writing, Xamarin's recommendation for this is \"build a custom renderer\". Which is what I did. Before starting, I reviewed what I already knew: Apple and Android has some provisions for auto-fitting. But neither addressed all the use cases I've faced. So, Forms9Patch's Label's auto-fitting had to do more. Oversimplifying things: If the bounds (width and height) of the label are imposed upon it then auto-fitting should scale the font to fit those bounds. If the width of the label is imposed upon it then auto-fitting should scale the label's height. But that is an oversimplification. The Lines , FontSize , and AutoFit properties play an important role and determining just how Forms9Patch's auto-fitting works. To better explain this, lets look at the imposed bounds and imposed width cases separately. Once the autofitting is completed, Forms9Patch updates Label 's read only ActualFontSize property with the resulting font size. And, in case you were wondering: Why is there no autofitting when the width is not imposed? Because then the text should all fit on one line. Autofit: How it works Source code for the below examples can be found in LabelAutofitPage.cs of the Forms9PatchDemo project GitHub repository . Imposed Bounds Autofitting So what is meant by Imposed Bounds ? If the bounds of the Label is either requested (using WidthRequest and/or HeightRequest ) and/or is limited by the bounds of its parent container element (the Label 's content is greater than the space available), then Forms9Patch says the Label 's bounds is imposed . If the Label' s bounds are imposed, then you can choose its autofitting behavior using the following property settings: Property Setting(s) Result GIF Lines=0 Scale the font size of the text until it either fits within the bounds, limiting the font size between MinFontSize and FontSize . This is the default setting. Lines>0 AutoFit=AutoFit.None Scale the font size of the text until Lines lines fits the Label's Height , limiting the font size between FontSize and MinFontSize . If the text cannot fit within Lines lines or the imposed height, apply the LineBreakMode truncation. Lines>0 AutoFit=AutoFit.Width Scale the font size of the text until it all fits within Lines lines, limiting the font size between FontSize and MinFontSize . If limited to MinFontSize , apply the LineBreakMode truncation. Lines>0 AutoFit=AutoFit.Lines Scale the font size of the text until Lines lines fits the Label's Height, limiting the font size between FontSize and MinFontSize . If the text cannot fit within Lines lines, apply the LineBreakMode truncation. Imposed Width Autofitting Autofitting works differently if the Label 's width has been imposed but the height has not. In this scenario, the goal is to scale the height to match text at the given FontSize or the given AutoFit and Line values. The table below describes how imposed width autofitting behavior is controlled by the related property settings: Property Setting(s) Result GIF Lines=0 Scale the height of the Label to fit the text at the current FontSize . This is the default setting. Lines>0 AutoFit=AutoFit.None Scale the height of the Label so that it is as tall as the smaller of either Lines lines at FontSize or the complete text body at FontSize . If the text cannot fit within Lines lines, apply the LineBreakMode truncation. Lines>0 AutoFit=AutoFit.Width Scale the height of the Label and the font size of the text until it all fits within Lines lines, limiting the font size between FontSize and MinFontSize . If limited to MinFontSize , apply the LineBreakMode truncation. Lines>0 Fit=LabelFit.Lines Scale the height of the Label so that it is as tall as Lines lines at FontSiz e. If the text cannot fit within Lines lines, apply the LineBreakMode truncation. How does Forms9Patch HTML Markup work Both iOS and Android have some HTML markup capability, natively. However, the philosophy behind Forms9Patch is to avoid native if there is a NetStandard approach that is easier and just as fast. Forms9Patch does this by avoiding the use of intermediate classes and, instead, allows you to pass HTML directly to its Label , Segment , and Button elements by way of the HtmlText property. Also, HtmlText property supports a larger range of formatting than Xamarin provides via the Span element. Additionally, HtmlText integrates Forms9Patch's Embedded Resource Custom Font support into its HTML markup to give you the power to easily apply custom fonts on a granular level. Supported Tags <a> Anchor (Action), formatted as a hyperlink. The text surrounded by this tag will look like a hyperlink. When this text is tapped on, it will trigger Label's event EventHandler<ActionTagEventArgs>> ActionTagTapped event. The ActionTagTapped event will pass object sender (the Label element) and ActionTagEventArgs e (with, you guessed it, two parameters: Id and Href ). Attributes: id a first string to identify the action href a second string to further identify the action <big> Big <b> Bold <del> Delete <den> Denominator <em> Emphasis <font> Font. Attributes: face : font family (supports native, \"Monospace\", \"San-serif\", \"Serif\", and Embedded Resource custom fonts) size : font size (in \"px\", \"em\", and \"%\" units, HTML 1-7 unit-less, HTML relative, and HTML named sizes ) color : font color (in RGB, RGBA, HEX, and HTML named colors) <ins> Insert <i> Italic <num> Numerator <pre> Preformatted (Mono-space font with white space preserved) <s> Strike-through <small> Small <strike> Strike-through <strong> Strong <sub> Subscript <sup> Superscript <tt> Teletype <u> Underline Attributes Only the style attribute is supported at this time. style : Style applied within tag limits. Parameters: background-color : Background color. (in rgb, rgba, hex, and HTML named colors) color : Font (foreground) color. (in rgb, rgba, hex, and HTML named colors) font-family : Font family (supports native, \"Monospace\", \"San-serif\", \"Serif\", and Embedded Resource custom fonts) font-size : font size (in \"px\", \"em\", and \"%\" units, HTML 1-7 unitless, HTML relative, and HTML named sizes ) font-weight : Set to bold to apply bold to the text. Only bold is supported at this time and only on fonts there a bold subset is available. It is recommended to use the <b> tag instead. font-style : Set to italic to apply italics formatting to the text. Only italic is supported at this time and only on fonts where an italic subset is available. It is recommended to use the <i> tag instead. XAML Example for HTML Markup Follow one of the below Getting Started guides to create a .NetStandard Xamarin Forms cross-platform app with the MyDemoApp assembly namespace. Getting Started: VisualStudio 2017 for Mac Getting Started: VisualStudio 2017 for Windows Create a Resources folder in the app's shared code (.NetStandard) project: Right click on your .NetStandard project and select Add / New Folder . A New Folder folder should appear. Rename it Resources . Before After Create a Fonts folder under the Resources folder in the app's shared code (.NetStandard) project Save the MaterialIcons-Regular.ttf custom font file to the Resources/Fonts folder. I prefer to drag it from OSX Finder or Windows File Explorer into the Resources/Fonts folder in VisualStudio. Set the Build Action to EmbeddedResource for this custom font. Make note of the Resource ID of this custom font. See Embedded Resource Id Naming Convention for details. Your Embedded Resource custom font is now ready for use by Forms9Patch label and button elements and for any Xamarin.Forms.VisualElement that supports the FontFamily property. Add a \"Forms ContentPage Xaml\" file to your .NetStandard project: Right click on your PCL project (MyDemoApp) Select Add / New File... The New File dialog box should appear. Select Forms ContentPage Xaml , enter a name ( HtmlTextPage ), and click the [New] button. You should now have two new files open in Xamarin Studio: HtmlTextPage.xaml (a skeleton Xaml page) and its code behind, HtmlTextPage.xaml.cs . Add the Forms9Patch namespace to your XAML Open the HtmlTestPage.xaml file. Add the xmlns:f9p=\"clr-namespace:Forms9Patch;assembly=Forms9Patch\" attribute to the <ContentPage> tag. Add the XAML Layout Add the Padding=\"40 and BackgroundColor=\"Silver\" attributes to the <ContentPage> tag. Add the following Forms9Patch.Label and Forms9Patch.SegmentedControl elements to a Xamarin.Forms.StackLayout as the ContentPage 's content: <StackLayout> <Label Text=\"HTML Markup Label Examples\" TextColor=\"Black\" FontAttributes=\"Bold\"/> <f9p:Label TextColor=\"Black\"> <![CDATA[plain <b>bold</b> <i>italic</i>]]]> </f9p:Label> <f9p:SegmentedControl BackgroundColor=\"White\" FontSize=\"16\" FontColor=\"#0076FF\" Orientation=\"Vertical\" OutlineColor=\"#CCC\" OutlineWidth=\"0\" SeparatorWidth=\"1\" OutlineRadius=\"6\" Padding=\"5\"> <f9p:Segment><![CDATA[Pause <b>5</b>]]></f9p:Segment> <f9p:Segment><![CDATA[Pause <b>10</b>]]></f9p:Segment> <f9p:Segment><![CDATA[Pause <b>15</b>]]></f9p:Segment> <f9p:Segment Text=\"Cancel\" FontColor=\"Red\"/> <f9p:Segment HtmlText=\"&lt;s&gt;Launch&lt;/s&gt;\" FontAttributes=\"Bold\" IsEnabled=\"false\"> <![CDATA[<s>Launch</s>]]]> </f9p:Segment> </f9p:SegmentedControl> </StackLayout> Make HtmlTestPage your apps MainPage. Open your .NetStandard project's Application subclass ( MyDemoApp.cs in this example). Set the MainPage property to new HtmlTestPage() Build and start your app"
  },
  "guides/Layouts.html": {
    "href": "guides/Layouts.html",
    "title": "Using Forms9Patch's Layouts | Forms9Patch",
    "keywords": "Using Forms9Patch's Layouts Just as Xamarin.Forms.Frame extends Xamarin.Forms.ContentView by adding the OutlineColor and HasShadow properties, Forms9Patch.AbsoluteLayout , Forms9Patch.Frame , Forms9Patch.Grid , Forms9Patch.RelativeLayout and Forms9Patch.StackLayout extends their Xamarin.Forms counterparts with those two properties and adds the BackgroundImage , ElementShape , OutlineWidth , OutlineRadius , OutlineColor and ShadowInverted properties. In other words, everything you can do to decorate a Forms9Patch.Image , you can do to decorate Forms9Patch's layouts. Additionally, the Forms9Patch layouts have the IgnoreChildren property as a way to improve app responsiveness. When a child element is updated, it kicks off a measurement and layout cycle that can propagate up through the view hierarchy - potentially consuming a lot of CPU. I'm looking at you, Xamarin.Forms.Android! Sometimes this is necessary in order to make room for or reclaim room from the updated child element. However, there a lot of instances where the updated child will never have an impact upon the rest of the view hierarchy - other than slowing everything down while Xamarin Forms goes through the measure-layout cycle. For example, if you have a Grid with fixed (GridUnitType.Absolute) or proportional (GridUnitType.Star) sized rows and columns then any change to a child will not change the Grid's layout. So, to keep an update of a child from propagating up the view hierarchy, set the IgnoreChildren property to true. Please note that this is a \"running with scissors\" feature that should be used carefully. Background Image Code Example Here we are going to create a Forms9Patch.ContentView , set a background image, and have a label for Content . new Forms9Patch.ContentView { BackgroundImage = new Forms9Patch.Image { Source = Forms9Patch.ImageSource.FromMultiResource (\"Forms9PatchDemo.Resources.redribbon\"), Fill = Forms9Patch.Fill.Tile, CapInsets = new Thickness(30,-1,160,-1), }, Content = new Xamarin.Forms.Label { Text = \"ContentView scalable (CapInsets)\", TextColor = Color.White, FontAttributes = FontAttributes.Bold, FontSize = 14, HorizontalOptions = LayoutOptions.Center, VerticalOptions = LayoutOptions.Center, }, Padding = new Thickness(30,30,110,20), HeightRequest = 80, }, iOS Android XAML Example As discussed earlier , using Embedded Resource images in XAML requires the use of a XAML markup extension in your view's namespace. Assuming such an extension has been setup, the following demonstrates how to use Forms9Patch.ContentView in XAML. <?xml version=\"1.0\" encoding=\"UTF-8\"?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:local=\"clr-namespace:MyXamlDemo;assembly=MyXamlDemo\" xmlns:Forms9Patch=\"clr-namespace:Forms9Patch;assembly=Forms9Patch\" x:Class=\"MyXamlDemo.MyPage\" Padding=\"5, 20, 5, 5\"> <f9p:ContentView Padding=\"30,30,110,20\" HeightRequest=\"80\"/> <f9p:ContentView.BackgroundImage> <f9p:Image Source=\"{local:ImageMultiResource Forms9PatchDemo.Resources.redribbon}\" CapInsets=\"23,-1,111,-1\" /> </f9p:ContentView.BackgroundImage> <Label Text=\"Forms9Patch.Image w/ CapInsets\" TextColor=\"White\" HorizontalOptions=\"Center\" VerticalOptions=\"Center\" FontSize=\"14\" /> </f9p:ContentView> </ContentPage> Outline & Shadow Outline & Shadow Code Example var frame = new Forms9Patch.Frame { Content = new Xamarin.Forms.Label { Text = \"Frame OutlineRadius & Shadow\", TextColor = Color.Black, FontSize = 12, }, Padding = new Thickness(10), Background = Color.FromHex( 12), OutlineRadius = 2, HasShadow = true, } iOS Android Outline & Shadow XAML Example <?xml version=\"1.0\" encoding=\"UTF-8\"?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:local=\"clr-namespace:MyXamlDemo;assembly=MyXamlDemo\" xmlns:Forms9Patch=\"clr-namespace:Forms9Patch;assembly=Forms9Patch\" x:Class=\"MyXamlDemo.MyPage\" Padding=\"5, 20, 5, 5\"> <StackLayout> <f9p:Frame Padding=\"20\" OutlineColor=\"Blue\" OutlineWidth=\"3\" OutlineRadius=\"10\" BackgroundColor=\"Gray\" /> <Label Text=\"Forms9Patch.Frame w/ OutlineWidth+OutlineRadius\" TextColor=\"White\" HorizontalOptions=\"Center\" VerticalOptions=\"Center\" FontSize=\"14\" /> </f9p:Frame> </StackLayout> </ContentPage> iOS Android"
  },
  "guides/Popups.html": {
    "href": "guides/Popups.html",
    "title": "Forms9Patch Popups | Forms9Patch",
    "keywords": "Forms9Patch Popups Yet another thing missing from Xamarin Forms is a comprehensive set of popup views. Forms9Patch has a eight (ModalPopup, BubblePopup, FlyoutPopup, Toast, TargetedToast, PermissionPopup, ActivityIndicatorPopup and TargetedMenu) popups to simplify the most common tasks. However, this comes at a price! Forms9Patch popups (like a number of other Forms9Patch elements) use Forms9Patch.Image - which means Forms9Patch popups are IDisposable . There is an upside to this. See the Memory Management for more information. Android Note You will need to add the following OnBackButtonPressed code to your Android application's MainActivity in order to have popups respond to the Android hardware backbutton. public class MainActivity : FormsApplicationActivity { ... public override void OnBackPressed() { if (Forms9Patch.Popup.SendBackPressed(base.OnBackPressed)) { // do something here if there are some popups in the popup stack } else { // do something else if there are not any popups in the popup stack } } ... } Common Properties, Methods and Events The following properties and methods are common to all Forms9Patch popups, except ActivityIndicatorPopup : Common Appearance Properties BackgroundImage : The Forms9Patch.Image displayed as the popup's background. BackgroundColor : popup's optional background color. PopAfter : the TimeSpan , after appearing, at which the popup will pop (disappear) without user interaction. Popup will not pop itself when PopAfter is zero (default) or negative. HasShadow : one more time ... this actually works on Android. Has no effect when BackgroundColor has not been set. OutlineColor : optional outline color. OutlineWidth : width of optional outline. OutlineRadius : outline's corner radius. ShadowInverted : to apply a recessed effect to the layout (if HasShadow is enabled). Page Overlay (between the popup and the page the popup sets upon) Properties PageOverlayColor : The Color of the page overlay upon which the ModalPopup sets. Default value is Color.Rgba(0.5, 0.5, 0.5, 0.5) . CancelOnBackgroundTouch : Controls is the popup is cancelled if the background is touched. Default value is true. CancelOnBackButtonTouch : Controls is the popup is cancelled if the back button (Android only) is touched. Default value is true. Common Memory Management Properties Retain : a boolean (default: false ) used to indicate if the popup and its contents should be removed from the view hierarchy as soon as the view is hidden. Why would I bother to have this? ANDROID! If you have a heavy layout that will be shown multiple times, you may not want to re-render each time it is made visible. Seeing Retain=true will keep your popup and its content in the view hierarchy so it won't have to be re-rendered the next time you want to present it. Common Methods void Cancel() : Programmatically cancels the Popup. Common Events Cancelled : Called when the popup has been canceled by the user tapping outside its bounds. Forms9Patch.ModelPopup The most needed missing component: a simple content popup that is a content container which centers its contents on the main page. Since you may want a popup container with a background image, Forms9Patch provides the ModalPopup element for this purpose. Once you have initialized a Forms9Patch popup view, set the IsVisible property to true to present it. Forms9Patch.ModelPopup Unique Properties Content : The Xamarin.Forms.VisualElement that will be the content for the popup view. Layouts and Views are fair game. ElementShape : ElementShape.Rectangle , ElementShape.Square , ElementShape.Circle , ElementShape.Ellipse , and ElementShape.Obround . Controls the shape of both the border and the background clipping region. Forms9Patch.BubblePopup The popup that is missing from both Xamarin.Forms and Android is a pointer bubble popup - a popup that points to another element. Given a Target element, some Content to display, and an allowed PointerDirection , Forms9Patch.BubblePopup will best fit a popup bubble pointing the the Target . Note that, unlike the ModalPopup element, BubblePopup does not support the BackgroundImage nor ElementShape properties. If you do not specify the Target , BubblePopup will present its content in a ModalPopup . As with ModalPopup , once you have initialized a BubblePopup you will need to set the IsVisible property to true to present it. Forms9Patch.BubblePopup Unique Properties Content : The VisualElement that will be the content for the popup view. Layouts and Views are fair game. Target : The Xamarin.Forms.VisualElement to which the bubble popup will point. PointerLength : how long is the pointer. PointerTipRadius : what is the radius of the pointer's tip? PointerDirection : what directions is the bubble popup allow to point? Type: PointerDirection PointerCornerRadius : what is the radius of the notch between the bubble's body and the pointer? Forms9Patch.FlyoutPopup Another popup missing is a flyout - to present content such as menus or master control views. Give Forms9Patch.FlyoutPopup some content to display, set IsVisible=true and it will by default have it flyout from the left edge of the current Page. Change the Orientation property to have the flyout come from left/right ( Horizontal ) or top/bottom ( Vertical ). Change the Alignment property to switch between left or right ( Start or End ) for Horizontal orientation and between top or bottom ( Start or End ) for Vertical orientation. Want to be sure the width (for Horizontal orientation) is fixed? Set the WidthRequest of your Content and it will use that to determine the flyout's width. Likewise, set the Content's HeightRequest for Vertical flyouts. Note that FlyoutPopup also does the hard work of figuring out where the SafeArea is for your content. You can see that in action in the below GIF. Forms9Patch.FlyoutPopup Unique Properties Content : The VisualElement that will be the content for the popup view. Layouts and Views are fair game. Orientation : Is the popup going to fly in horizontally or vertically? Alignment : Is the popup going to be at the left\\top ( Start ) or right\\bottom ( End ) Forms9Patch.Toast Sometimes you simply need to put a message up on the screen. Given some HTML formatted text and an HTML formatted title Toast will display them in a popup with an (optional but enabled by default) [OK] button. Toast is inherited from the ModalPopup element so it does support background images. Unlike ModalPopup , Toast has the Create(string title, string text) static method that will generate and present the toast. You can still manually construct and present a Toast by using its constructor and setting its IsVisible property to true. Forms9Patch.Toast Unique Properties Title : The title for the Toast. See HTML Markup for supported markup. Text : The text for the Toast. See HTML Markup for supported markup. ElementShape : ElementShape.Rectangle , ElementShape.Square , ElementShape.Circle , ElementShape.Ellipse , and ElementShape.Obround . Controls the shape of both the border and the background clipping region. Forms9Patch.Toast Unique Methods static Toast Create(string title, string text) : instantiates and presents a Toast . Forms9Patch.TargetedToast Just as Toast is a convenience version of ModalPopup , TargetedToast is a convenience version of BubblePopup . Given a Target as a Xamarin.Forms.VisualElement , a Title , some Text to display, and an allowed PointerDirection , Forms9Patch.TargetedToast will best fit a popup bubble pointing the the Target . Like BubblePopup element, BubblePopup does not support background images. If you do not specify the Target , it will present itself as a Toast . As with Toast , you can use the Create static method to instantiate and present a TargetedToast . Forms9Patch.TargetedToast Unique Properties Title : The title for the Toast. See HTML Markup for supported markup. Text : The text for the Toast. See HTML Markup for supported markup. Target : The Xamarin.Forms.VisualElement to which the bubble popup will point. OkButtonColor : Background color for [OK] button. OkTextColor : Text color for [OK] button. OKText : Text for [OK] button. Set to null to remove the [OK] button from the popup. As noted above, you don't want this set to null when CancelOnBackgroundTouch is set to false . Forms9Patch.TargetedToast Unique Methods static TargetedToast Create(VisualElement target, string title, string text) : instantiates and presents a TargetedToast . Forms9Patch.PermissionPopup Sometimes you simply need to ask a yes/no question. Given some HTML formatted text and an HTML formatted title, PermissionPopup will display them in a popup with [OK] and [Cancel] buttons. PermissionPopup is inherited from the ModalPopup element so it does support background images. Unlike ModalPopup , PermissionPopup has the Create(string title, string text) static method that will generate and present the toast. You can still manually construct and present a PermissionPopup by using its constructor and setting its IsVisible property to true . Unlike Toast , the [OK] and [Cancel] buttons cannot be removed from the layout by setting their text to null. Forms9Patch.PermissionPopup Unique Properties Title : The title for the Toast. See HTML Markup for supported markup. Text : The text for the Toast. See HTML Markup for supported markup. OkButtonColor : Background color for [OK] button. OkTextColor : Text color for [OK] button. OKText : Text for [OK] button. CancelButtonColor : Background color for [Cancel] button. CancelTextColor : Text color for [Cancel] button. CancelText : Text for [Cancel] button. PermissionState : An enum ( Pending , Ok , Cancelled , Rejected ) describing the state of the permission granting process. This is very useful when the PermissionPopup is wrapped in a using block and is examined after a WaitForCancelAsync() call. Forms9Patch.PermissionPopup Unique Methods static PermissionPopup Create(string title, string text, string okText = \"OK\", string cancelText = \"Cancel\") : instantiates and presents a PermissionPopup . Forms9Patch.PermissionPopup Unique Events OkTapped : Called when the [OK] button has been tapped. Forms9Patch.TargetedMenu Sometimes you need a popup menu with a list of menu items. And, if there are more menu items than available room, the menu needs to have pagination. Forms9Patch.TargetedMenu combines SegmentedController 's use of a List<Segment> to define the menu items with features of TargetedToast to give this functionality. Forms9Patch.TargetedMenu Unique Properties Segments : a List of Forms9Patch.Segment elements that define the menu items. See Forms9Patch.Segment for how to set a segment's text and icons. FontSize : size of font to be used. TextColor : color of text for each menu item. SeparatorColor : color of separator line between menu items SeparatorWidth : thickness of separator line between menu items HapticEffect : if available on platform and enabled via HapticMode , what will be the haptic effect: None , platform's KeyClick effect, platform's Return key effect, or platforms Delete key effect? HapticMode : if available on platform, enable, disable, or use default behavior for the haptic effect. Forms9Patch.TargetedMenu Unique Events public event SegmentedControlEventHandler SegmentTapped : fired when a menu item (segment) has been tapped. Forms9Patch.ActivityIndicatorPopup This popup is probably misnamed. Its purpose is to present an activity indicator and block interaction with the app. Because ModalPopup had everything I needed to build this, I named it a popup. Probably should have thought about that more. Also, because this is something you typically just want to fire and forget, like Toast and TargetedToast , ActivityIndicatorPopup has a Create static method to instantiate and present an instance in one call. Note that Forms9Patch.ActivityIndicatorPopup Properties PageOverlayColor : The Color of the page overlay upon which the ModalPopup sets. Default value is Color.Rgba(0.5, 0.5, 0.5, 0.5) . Color : Color of the activity indicator. CancelOnBackgroundTouch : Controls is the popup is cancelled if the background is touched. Default value is true. Forms9Patch.ActivityIndicatorPopup Methods static ActivityIndicatorPopup Create() void Cancel() : Programmatically cancels the popup. Forms9Patch.ActivityIndicatorPopup Events Cancelled : Called when the popup has been canceled by the user tapping outside its bounds. Memory Management With all Forms9Patch popup's, the good news is the using keyword will make your life much easier. Additionally, Forms9Patch popups have the WaitForPoppedAsync method to allow you to interact with the popup's content before disposal. Forms9Patch.Toast is the simplest example: using (Forms9Patch.Toast.Create(\"Updated\",\"The list was updated.\")) { } In the above example, we're presenting a Toast and there is no need for our code to interact with its content. As such, the using statement attempts to Dipose() our Toast as soon as it can. This all happens because all Forms9Patch popups automatically add a WaitForPoppedAsync() before completing the Dispose() . In other words, the popup won't be disposed until the user takes action to dismiss the popup. As a more interesting example, take a look at a sample usage of Forms9Patch.PermissionPopup: using (var permissionPopup = Forms9Patch.PermissionPopup.Create( \"Unit Mismatch\", Items.Count((i) => !i.IsTemplate) > 1 ? \"This entry (\" + operand.ToHtml() + \") does not have units but the existing Cumulative Memory entries do.\" : \"This entry (\" + operand.ToHtml() + \") does not have units but the existing Cumulative Memory entry does.\", \"YES\")) { permissionPopup.Text += \"\\n\\nDo you want to apply the last Cumulative Memory entry's units [\" + firstItem.Value.UnitSet + \"] to this entry?\"; permissionPopup.Parameter = operand; permissionPopup.IsVisible = true; await permissionPopup.WaitForPoppedAsync(); if (permissionPopup.PermissionState == PermissionState.Ok) { if (operand is Expression expression) expression.Complete(); operand.ApplyUnitSet(firstItem.Value.UnitSet); return true; } } In the above example, you can see that we are able to manipulate permissionPopup and subscribe to its events. And, because await WaitForePoppedAsync() is part of its Dispose() , our subscriptions will remain valid up until the user interaction has been completed. Please note that ActivityIndicatorPopup is slightly different. That is because it can only be cancelled programmatically - not through direct user interaction. With that in mind and for ease of use, calling Dispose() on an ActivityIndicatorPopup will first implicitly call CancelAsync on the ActivityIndicatorPopup before it is disposed. This means you can use the asynchronous calls in the using block to implicitly control the appearance / disappearance / disposal of the ActivityIndicatorPopup . In the below example, the Create() factory method generates the ActivityIndicatorPopup and displays it. Then, after the GetDataAsync() has completed, the using block calls Dispose() on our ActivityIndicatorPopup - implicitly cancelling it before the disposal. using (Forms9Patch.ActivityIndicatorPopup.Create()) { await GetDataAsync(); }"
  },
  "guides/PrintService.html": {
    "href": "guides/PrintService.html",
    "title": "Printing | Forms9Patch",
    "keywords": "Printing Forms9Patch makes it easy to print some HTML or the contents of a Xamarin.Forms.WebView. Verifying that Printing is available Before printing, you should verify that printing is available on your device. To do so, call: if (Forms9Patch.PrintService.CanPrint) { // do the printing here } Print the contents of a Xamarin.Forms.WebView using Forms9Patch; ... var myWebView = new Xamarin.Forms.WebView(); WebViewPrintEffect.ApplyTo(myWebView); myWebView.Source = new HtmlWebViewSource { Html = \"some HTML text here\" }; ... myWebView.Print(\"my_print_job_name\"); Note that your WebView does not have to be attached to a Layout. This allows you to Print without having to display the WebView in your app's UI. Printing an HTML string using Forms9Patch; ... var myHtmlString = @\" <!DOCTYPE html> <html> <body> <h1>Convert to PNG</h1> <p>This html will be converted to a PNG, PDF, or print.</p> </body> </html> \"; ... myHtmlString.Print(\"my_print_job_name\"); PLEASE NOTE: iOS sometimes places the page breaks in weird places. I have a StackOverflow Bounty on why this happens and how to fix it. Using EmbeddedResource as a source for a Xamarin.Forms.WebView This is sort of an experimental feature but I've found it useful. As such the documentation is sparse. It allow you to put HTML content in a folder in your app's EmbeddedResources folder and then use it as a source for a WebView. A much nicer solution than using platform specific approach provided by Xamarin. It also supports putting all of the HTML content into a zip file. Please take a look at the source code to see how it works."
  },
  "guides/ToPdfService.html": {
    "href": "guides/ToPdfService.html",
    "title": "ToPdf Service | Forms9Patch",
    "keywords": "ToPdf Service Often I need to do one of the following: Convert some HTML to a PDF Take the content of a Xamarin.Forms.WebView and turn it into a PNG I've had to do this enough times that I finally broke down and added it to Forms9Patch. Convert HTML to a PDF Usage is as follows: if (await Forms9Patch.ToPdfService.ToPdfAsync(_htmlEditor.Text, \"myHtmlPage\") is ToFileResult result) { if (result.IsError) { using (Forms9Patch.Toast.Create(\"PDF error\", result.Result)) { } } else { var entry = new Forms9Patch.MimeItemCollection(); entry.AddBytesFromFile(\"application/pdf\", result.Result); if (e.Segment.Text == shareButtonText) Forms9Patch.Sharing.Share(entry, _destinationSelector); else if (e.Segment.Text == copyButtonText) Forms9Patch.Clipboard.Entry = entry; } } In the above example, we are putting the PNG onto the clipboard. Xamarin.Essentials.Sharing could also be used. Xamarin.Forms.WebView to a PNG Below, we take the contents of a Xamarin.Forms.WebView and Share it as a PNG: ... var myWebView = new Xamarin.Forms.WebView(); WebViewPrintEffect.ApplyTo(myWebView); myWebView.Source = new HtmlWebViewSource { Html = \"some HTML text here\" }; ... if (await myWebView.ToPdfAsync(\"output.png\") is ToFileResult result) { if (result.IsError) using (Forms9Patch.Toast.Create(\"PNG error\", result.Result)) { } else { await Xamarin.Essentials.Share.RequestAsync(new Xamarin.Essentials.ShareFileRequest { Title = \"myWebView sharing title\", File = new Xamarin.Forms.ShareFile(result.Result, \"application/pdf\") }); } } Using EmbeddedResource as a source for a Xamarin.Forms.WebView This is sort of an experimental feature but I've found it useful. As such the documentation is sparse. It allow you to put HTML content in a folder in your app's EmbeddedResources folder and then use it as a source for a WebView. It also supports putting all of the HTML content into a zip file. Please take a look at the source code to see how it works."
  },
  "guides/ToPngService.html": {
    "href": "guides/ToPngService.html",
    "title": "ToPng | Forms9Patch",
    "keywords": "ToPng Often I need to do one of the following: Convert some HTML to a PNG Take the content of a Xamarin.Forms.WebView and turn it into a PNG I've had to do this enough times that I finally broke down and added it to Forms9Patch. Convert HTML to a PNG Usage is as follows: if (await Forms9Patch.ToPngService.ToPngAsync(_htmlEditor.Text, \"myHtmlPage\") is ToFileResult result) { if (result.IsError) { using (Forms9Patch.Toast.Create(\"PNG error\", result.Result)) { } } else { var entry = new Forms9Patch.MimeItemCollection(); entry.AddBytesFromFile(\"image/png\", result.Result); if (e.Segment.Text == shareButtonText) Forms9Patch.Sharing.Share(entry, _destinationSelector); else if (e.Segment.Text == copyButtonText) Forms9Patch.Clipboard.Entry = entry; } } In the above example, we are putting the PNG onto the clipboard. Xamarin.Essentials.Sharing could also be used. Xamarin.Forms.WebView to a PNG Below, we take the contents of a Xamarin.Forms.WebView and Share it as a PNG: ... var myWebView = new Xamarin.Forms.WebView(); WebViewPrintEffect.ApplyTo(myWebView); myWebView.Source = new HtmlWebViewSource { Html = \"some HTML text here\" }; ... if (await myWebView.ToPngAsync(\"output.png\") is ToFileResult result) { if (result.IsError) { using (Forms9Patch.Toast.Create(\"PNG error\", result.Result)) { } } else { await Xamarin.Essentials.Share.RequestAsync(new Xamarin.Essentials.ShareFileRequest { Title = \"myWebView sharing title\", File = new Xamarin.Forms.ShareFile(result.Result, \"image/png\") }); } } Using EmbeddedResource as a source for a Xamarin.Forms.WebView This is sort of an experimental feature but I've found it useful. As such the documentation is sparse. It allow you to put HTML content in a folder in your app's EmbeddedResources folder and then use it as a source for a WebView. A much nicer solution than using platform specific approach provided by Xamarin. It also supports putting all of the HTML content into a zip file. Please take a look at the source code to see how it works."
  },
  "index.html": {
    "href": "index.html",
    "title": "Forms9Patch | Forms9Patch",
    "keywords": "Forms9Patch A suite of elements built to simplify image management, text formatting, PNG generation, PDF generation, and printing for your NetStandard, PCL, and Shared Library Xamarin.Forms iOS, Android and UWP applications. Overview Xamarin Forms is great for developing cross platform applications (certainly very sane) but it is missing some important features: Patch scalable images SVG images Single point of use, cross platform, multi-screen / multi-resolution image management Simple, markup formatted text for labels and buttons Single point of use, cross platform, custom font management Segmented button control Pop-ups as a first class layout element Multi-object Clipboard and Inter-app Data Sharing PNG and PDF generation Printing Android developers can use NinePatch bitmaps, the drawable directory naming convention, Html.FromHtml, and a bunch of complex file manipulations to address the image issue. Likewise, iOS developers can use ResizeableImageWithCapInsets, the @2x, @3x, @4x file naming convention, and some 3rd party libraries for this purpose. Custom fonts are a bit more complicated and label layouts take things up another notch. Forms9Patch enhances Xamarin Forms to make multi-resolution / multi-screen image management, custom fonts, and HTML text formatting easy for NetStandard, PCL and Shared Library applications for iOS, Android and UWP. So, what exactly is Forms9Patch Forms9Patch is a package of VisualElements plus a suite of Services, and Effects. Visual Elements Forms9Patch VisualElements is based upon three core elements from which five layouts, three buttons, and a number of pop-ups are built upon. The three core elements are: Forms9Patch.ImageSource : a free to use derivative of Xamarin.Forms.ImageSource to support multi-device / multi-density image management from Embedded Resources. Forms9Patch.Image : an enhanced implementation of Xamarin.Forms.Image with border (outline) and shadow properties plus support of SVG vector images. Raster images (.png, .jpg, .bmp) images also have patch scaling, tiling, and tinting support. Forms9Patch.Label : an enhanced implementation of Xamarin.Forms.Label for easy access to single-point-of-use custom fonts, auto-fitting, and text formatting via markup tags. Forms9Patch's five layouts are derivatives of the five Xamarin.Forms.Layout subclasses - enhanced with the ability to use a Forms9Patch.Image as a background. Forms9Patch.Frame Forms9Patch.AbsoluteLayout Forms9Patch.Grid Forms9Patch.RelativeLayout Forms9Patch.StackLayout Forms9Patch's three button elements ( Forms9Patch.Button , Forms9Patch.StateButton , and Forms9Patch.SegmentedControl ) are all derived from Xamarin.Forms.Button and share the following enhancements: A BackgroundImage property: Use a Forms9Patch.Image as a button background. An icon: Specified either as markup text ( IconText property) or as a Forms9Patch.Image ( IconImage property). IconText makes it easy to use custom icon fonts like Material Icons . IconImage makes it easy to tint raster images or use SVG vector images. A button's icon can be before (default) or after ( TrailingIcon property true ) its text and at the edge of the button (default) or next to the button's text ( TightSpacing property true ). A button's icon or text can be arranged horizontally (default) or vertically ( Orientation property set to StackOrientation.Vertical ). A label: Specified either as plain text ( Text property) or markup text ( HtmlText property). Autofitting algorithms (see Autofitting ) LongPressing and LongPressed touch events. The three Forms9Patch button elements are: Forms9Patch.Button Forms9Patch.StateButton : a further enhanced implementation of Forms9Patch.Button that allow most enhanced properties to be configured by the button's state (Default, Pressing, Selected, Disabled, DisabledAndSelected) Forms9Patch.SegmentControl : a segmented button control that allows for border, separator, and shadow control. Note that there is currently no support for background images. Forms9Patch's pop-up elements can be thought of as Forms9Patch layout elements (outline and background image capabilities) that renders with full page overlay backgrounds and the ability to be canceled by tapping the background. These popup elements are: Forms9Patch.ModalPopup : takes the enhancements (borders; patch-scalable, tintable, tile-able background images; shadows) from Forms9Patch.Frame and puts it into a pop-up layout. Forms9Patch.BubblePopup : goes a step further than Forms9Patch.ModalPopup by pointing to a target Xamarin.Forms.VisualElement . The pointer has PointerLength , PointerTipRadius and PointerCornerRadius properties. Forms9Patch.FlyoutPopup : a popup that \"flies out\" from a side of the display. Great for custom menus! Forms9Patch.ActivityIndicatorPopup : a convenience element that presents a Xamarin.Forms.ActivityIndicator over a page overlay. Forms9Patch.Toast : a convenience element that presents a title, a message and an optional confirmation button. Forms9Patch.PermissionPopup : a convenience element that presents a title, a message, and an accept and a decline button. Forms9Patch.TargetedToast : similar to Forms9Patch.Toast but enhanced to point to a Xamarin.Forms.VisualElement . Forms9Patch.TargetedMenu : A horizontal or vertical popup menu that can point to a VisualElement . Services, and Effects And lastly is Forms9Patch's services and effects: Keyboard Service: Want to put away the system keyboard? Want to be notified when the system keyboard appears or disappears? Keyboard Key Listener: What to know when a shortcut key is pressed? What about matching a shortcut key to a VisualElement so you only get the event when that VisualElement is in focus? Key Clicks Service: Do you want to make a system keyboard sound (and vibration, if available)? Application Info Service: Do you want to quickly know your application's Name, Bundle/Package ID, Build number and Version string? OS Info Service: What is the version of the device's operating system? Clipboard: Copy/paste text, HTML text, and multiple objects (they can be of the same or different MIME types) within your app or to other apps. Inter-app Data Sharing: Notice how some apps have a Share icon that presents a list of applications (and, on iOS services - like Print ) to share data? ToPngService: Need a png of some HTML? How about the contents of a WebView? ToPdfService: Better yet, how about a PDF from some HTML or the content of a WebView? PrintService: Wait - how about printing some HTML or the content of a WebView? DiskSize: How much space is in your app's sandbox? How much is free? How much is used? EntryClearButtonEffect: want a clear button added to your Entry element? EmbeddedResourceFortEffect: use embedded resource fonts with Xamarin text elements;"
  },
  "notes/Android.html": {
    "href": "notes/Android.html",
    "title": "Special notes for Android | Forms9Patch",
    "keywords": "Special notes for Android Any cross platform developer knows that Android is a very special beast. Unfortunately, Forms9Patch doesn't mitigate this. In fact, until I get the time to remove some warts, some would argue Forms9Patch.Clipboard isn't doing most developers any favors. That being said, here are some notes for your Android platform projects: AS OF VERSION 1.4, THE FOLLOWING IS NO LONGER NECESSARY. Because of Forms9Patch's more comprehensive Forms9Patch.Clipboard functionality, you will have to add the following code to your Android platform project's Resources/Values/string.xml file, before you can build it: <string name=\"forms9patch_copy_paste_authority\">your_Android_app_package_name_here.f9pcopypaste</string> I know - it's a pain. At some point of time, I'll have to see if I can use some of the trickery used by the Xamarin.Facebook NuGet Package to get rid of this requirement. I've made too many mistakes in building the Forms9Patch NuGet package - and Android seems to bear the brunt of those mistakes. If, after upgrading Forms9Patch, you see a bunch of errors like the following ... /Users/ben/Projects/PizzaTruck/PizzaTruck.Mobile/Droid/Renderers/BottomBarPageRenderer.cs(42,42): Error CS0012: The type 'FormsViewGroup' is defined in an assembly that is not referenced. You must add a reference to assembly 'FormsViewGroup, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null'. (CS0012) /Users/ben/Projects/PizzaTruck/PizzaTruck.Mobile/Droid/MainActivity.cs(33,33): Error CS0012: The type 'FormsViewGroup' is defined in an assembly that is not referenced. You must add a reference to assembly 'FormsViewGroup, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null'. (CS0012) ... then I'm the one you need to blame. To fix this you'll need to do the following in any Android platform projects that use Forms9Patch: Remove the Forms9Patch NuGet package Remove the Xamarin.Forms NuGet package If present, remove any SkiaSharp NuGet packages If present in the References folder, remove any references to FormsViewGroup Reinstall the Xamarin.Forms NuGet package Reinstall the Forms9Patch NuGet package If the above doesn't work, PLEASE LET ME KNOW by emailing me at: forms9patch(AT)buildcalc.com This isn't a Forms9Patch issue but just good advice: Do yourself a favor and never use any Android ARM emulators. This means you'd be better off just deleting the Android_ARM7a_Nouget (API 25) emulator that comes pre-installed with VisualStudio 2017."
  },
  "notes/BuildingWithXamarin.FormsSource.html": {
    "href": "notes/BuildingWithXamarin.FormsSource.html",
    "title": "Building with Xamarin.Forms source | Forms9Patch",
    "keywords": "Building with Xamarin.Forms source Project Configuration Notes for those starting from scratch (as a August 16, 2018) Switch to the Xamarin.Forms_Official/3.1.0 branch Xamarin.Forms projects used: Xamarin.Flex Xamarin.Forms.Core Xamarin.Forms.Platform Xamarin.Forms.Platform.Android Xamarin.Forms.Platform.Android.FormsViewGroup Xamarin.Forms.Platform.iOS Xamarin.Forms.Platform.UAP Xamarin.Forms.Xaml Stubs/Xamarin.Forms.Platform.Android Stubs/Xamarin.Forms.Platform.iOS Xamarin.Forms.Android: needs to be built with Android 8.1 (Project Properties / Application / Compile using Android version) Minimum Android Version needs to be 4.1 (API16) to support HTML copy / paste Set up packages symbolic links (see below) Use .netstandard 2.0 for all of your cross platform projects Reference the following packages in your .netstandard cross platform projects: Xamarin.Flex Xamarin.Forms.Core Xamarin.Forms.Platform Xamarin.Forms.Xaml Reference the following packages in your Android projects: Xamarin.Flex Xamarin.Forms.Core Xamarin.Forms.Platform.Android Xamarin.Forms.Platform.Android.FormsViewGroup Xamarin.Forms.Xaml Stubs/Xamarin.Forms.Platform.Android Reference the following packages in your iOS projects: Xamarin.Flex Xamarin.Forms.Core Xamarin.Forms.Platform.iOS Xamarin.Forms.Platform.UAP Xamarin.Forms.Xaml Stubs/Xamarin.Forms.Platform.iOS Reference the following packages in your UWP projects: Xamarin.Flex Xamarin.Forms.Core Xamarin.Forms.Platform.UAP Xamarin.Forms.Xaml Every submodule needs a packages folder Because of the way VisualStudio, NuGet, and Git (don't) work together, relative paths are not valid for NuGet packages referenced in project files (that are from VisualStudio solutions) that have been added as git submodules. To work around for this, go to the following directories (below) and symbolically link the packages subdirectory to the solution's working NuGet packages directory: Forms9Patch/Forms9PatchDemo Forms9Patch/FormsGestures Forms9Patch/P42 Forms9Patch/Xamarin.Forms Below are example commands of how to symbolically link to your VisualStudio solution's (and git root module) NuGet packages folder. For the case of building Forms9Patch source and demo code using just this git module, the below command lines are meant to be executed in the above directories. Windows: c:> mklink /D packages ..\\packages OSX: $ ln -s ../packages packages If you are using Forms9Patch source as a submodule in another git module, modify the above command lines to cause the symbolic links to point to the packages directory in the root directory of the VisualStudio solution associated with that git module. Address error: Project '..\\Xamarin.Forms ... .csproj' targets 'netstandard2.0' Be sure all of your shared projects use .netStandard 2.0 Changes to Forms9PatchDemo, Forms9Patch, or FormsGestures source code isn't updating This may likely not be a problem in the future but currently VisualStudio doesn't always show changes to .target files. The extreme version of this can be seen in how .target file references are not seen at all in .PCL , .iOS , .Droid and .UWP projects. Why am I using .target files then? Because it saves a lot of work in keeping the source code for various permutations of builds in sync. Forms9PatchDemo.PCL.Droid won't run when built and deployed from VisualStudio 2017 (Windows) to Android Emulator Heck, it might not work when deployed to an actual device. It does work when deployed from VisualStudio Mac to Android Emulator. 1 point for VisualStudio Mac! If you know why it doesn't work on Windows, please share! Why are the Xaml examples not in the Forms9PatchDemo.Source apps Because I haven't been able to take the time to figure out why Xaml files are not being compiled and embedded properly when using Xamarin.Forms source. Again, if you know how to do this, please share! UWP: Unable to load System.Runtime. The located assembly's manifest definition does not match the assembly reference. Change the Windows target version to 14393. UWP: Getting exceptions at Xamarin.Forms.Init When using Compile with .Net Native tool chain build setting, System.IO.FileNotFoundException exceptions for the following files (maybe more) can occur at Xamarin.Forms.Init when the Common Language Runtime Exceptions are all enabled: clrcompression libgl libglex SkiaSharp.Views You need to use Compile with .Net Native tool chain for your app to be accepted by Windows Store. What appears to work is to return the Common Language Runtime Exceptions to its defaults. As of this writing (2/19/2018), the defaults are: System.Reflection.MissingMetaDataException System.Reflection.MissingRuntimeArtifactException System.Windows.Markup.XamlParseException UWP: Crashes when when trying to open an image using Xamarin.Forms.ImageSource.FromResource but not when using Forms9Patch.ImageSource.FromMultiResource Boy, did I loose a lot of time on this one. Turns out the solution to [UWP: Getting exceptions at Xamarin.Forms.Init](UWP: Getting exceptions at Xamarin.Forms.Init) was the fix. I have no idea why."
  },
  "notes/index.html": {
    "href": "notes/index.html",
    "title": "Developer Notes | Forms9Patch",
    "keywords": "Developer Notes Ready to work with Forms9Patch? Depending on how deep you want to go, you may find helpful information here."
  },
  "notes/SystemRequirements.html": {
    "href": "notes/SystemRequirements.html",
    "title": "System Requirements | Forms9Patch",
    "keywords": "System Requirements Forms9Patch is an enhancement to Xamarin.Forms. As such, first be sure you've met the Xamarin.Forms system requirements . Additionally: Forms9Patch requires Xamarin.Forms version 2.4.0.280 or newer. To use the background-color style attribute within Forms9Patch.Label.HtmlText markup text in UWP applications, your UWP applications will need to be built with a minimum Windows version of 10.0.16299.0 (Windows 10 Fall Creators Update). AS OF VERSION 1.4, THE FOLLOWING IS NO LONGER NECESSARY . To build your Android apps, you will need to add the following to your Android application project's Resources/values/strings.xml file: <string name=\"forms9patch_copy_paste_authority\">your_Android_app_package_name_here.f9pcopypaste</string>"
  }
}